{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/WebstormProjects/Exercise_App/Exercise_Logger/client/src/components/log/ViewLogList.js\";\nimport React, { useState, useEffect, createRef } from \"react\";\nimport axios from \"axios\";\nimport { Accordion, Button, Card } from \"react-bootstrap\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport SetNewWorkout from \"./SetNewWorkout\";\nimport ViewWorkoutList from \"./ViewWorkoutList\";\nimport SetNewLog from \"./SetNewLog\";\nimport RemoveLog from \"./RemoveLog\";\nimport RemoveLogList from \"./RemoveLogList\";\nimport { BrowserView, MobileView } from \"react-device-detect\";\nimport Swipe from \"react-easy-swipe\";\nimport update from \"immutability-helper\";\n\nconst ViewLogList = () => {\n  const {\n    user,\n    isAuthenticated\n  } = useAuth0();\n  const [isShown, SetShown] = useState([]);\n  const [isDisplayList, SetDisplayList] = useState([]);\n  const [isCurrID, SetCurrID] = useState([]);\n  const [isDeleteList, SetDeleteList] = useState([]);\n  const [isDelete, SetDelete] = useState(false);\n  const [isSwipedRight, SetOnSwipeRight] = useState(false);\n  const [isSwipeEnd, SetSwipeOnEnd] = useState(false);\n  useEffect(() => {\n    if (isAuthenticated) {\n      fetchData();\n    }\n  }, []);\n\n  const fetchData = (newLog = false, newWorkout = null) => {\n    if (!newLog && newWorkout === null) {\n      axios.get(`api/logs`).then(res => {\n        res.data.forEach((el, idx) => {\n          if (el.username === user.email) {\n            let currList = [];\n\n            for (let attr in el) {\n              if (el.hasOwnProperty(attr)) {\n                if (attr === \"_id\") SetCurrID(isCurrID => [...isCurrID, el[attr]]);\n                currList.push({\n                  key: attr,\n                  val: el[attr]\n                });\n              }\n            }\n\n            SetShown(isShown => [...isShown, false]);\n            SetDeleteList(isDeleteList => [...isDeleteList, createRef()]);\n            SetDisplayList(isDisplayList => [...isDisplayList, currList]);\n          }\n        });\n      });\n    } else if (newLog && newWorkout === null) {\n      axios.get(`api/logs/`).then(res => {\n        res.data.forEach((el, idx) => {\n          if (el.username === user.email) {\n            if (!isCurrID.includes(el._id)) {\n              let currList = [];\n\n              for (let attr in el) {\n                if (el.hasOwnProperty(attr)) {\n                  if (attr === \"_id\") SetCurrID(isCurrID => [...isCurrID, el[attr]]);\n                  currList.push({\n                    key: attr,\n                    val: el[attr]\n                  });\n                }\n              }\n\n              SetShown(isShown => [...isShown, false]);\n              SetDeleteList(isDeleteList => [...isDeleteList, createRef()]);\n              SetDisplayList(isDisplayList => [...isDisplayList, currList]);\n            }\n          }\n        });\n      });\n    } else {\n      axios.get(`api/logs/${newWorkout}`).then(res => {\n        console.log(res.data);\n        let newExerciseList = [];\n        newExerciseList = res.data.exercises;\n        let logLocation = isCurrID.indexOf(newWorkout);\n        console.log(logLocation);\n        SetDisplayList(isDisplayList => [...isDisplayList.slice(0, logLocation), update(isDisplayList[logLocation], {\n          0: {\n            $set: {\n              key: \"exercises\",\n              val: newExerciseList\n            }\n          }\n        }), ...isDisplayList.slice(logLocation + 1)]);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  };\n\n  const onDelete = () => {\n    SetDelete(!isDelete);\n  };\n\n  const onSwipeRight = (pos, event) => {\n    if (isDelete) {\n      console.log(`Moved to the right`, event);\n      SetOnSwipeRight(true);\n    }\n  };\n\n  const onSwipeEnd = event => {\n    if (isSwipedRight) {\n      handleDelete(Number(event.target.id.replace(/log-title-/g, \"\")));\n    }\n  };\n\n  const handleDelete = index => {\n    isDeleteList[index].current.classList.add(\"animate__animated\", \"animate__fadeOutRight\");\n    isDeleteList[index].current.addEventListener(\"animationend\", () => {\n      axios.delete(`api/logs/${isCurrID[index]}`).then(res => {\n        console.log(res.data);\n      }).catch(err => {\n        console.log(err);\n      });\n      SetCurrID(isCurrID => [...isCurrID.slice(0, index), null, ...isCurrID.slice(index + 1)]);\n      SetDisplayList(isDisplayList => [...isDisplayList.slice(0, index), null, ...isDisplayList.slice(index + 1)]);\n      SetDeleteList(isDeleteList => [...isDeleteList.slice(0, index), null, ...isDeleteList.slice(index + 1)]);\n    });\n    SetOnSwipeRight(false);\n    SetSwipeOnEnd(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, isDisplayList.map((el, index) => {\n    if (el === null) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null);\n    }\n\n    return /*#__PURE__*/React.createElement(Swipe, {\n      onSwipeRight: onSwipeRight,\n      onSwipeEnd: onSwipeEnd,\n      allowMouseEvents: true,\n      key: \"log-disp\" + index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Accordion, {\n      className: \"p-2\",\n      ref: isDeleteList[index],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(RemoveLogList, {\n      isDeleteList: isDelete,\n      index: index,\n      deleteData: handleDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 25\n      }\n    })), Object.entries(el).map(log => {\n      if (log[1].key === \"title\") {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BrowserView, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n          as: Card.Header,\n          eventKey: \"0\",\n          id: \"log-title-\" + `${index}`,\n          style: {\n            transition: \"1s\",\n            paddingLeft: !isDelete ? \"1vw\" : \"6vw\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 33\n          }\n        }, log[1].val)), /*#__PURE__*/React.createElement(MobileView, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n          as: Card.Header,\n          eventKey: \"0\",\n          id: \"log-title-\" + `${index}`,\n          style: {\n            transition: \"1s\",\n            paddingLeft: !isDelete ? \"1vw\" : \"13vw\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 33\n          }\n        }, log[1].val)));\n      } else if (log[1].key === \"description\") {\n        return /*#__PURE__*/React.createElement(Accordion.Collapse, {\n          eventKey: \"0\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Card.Body, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"p-2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          id: \"log-desc-\" + `${index}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 35\n          }\n        }, log[1].key === \"description\" && log[1].val)), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ViewWorkoutList, {\n          el: el,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 35\n          }\n        })), /*#__PURE__*/React.createElement(SetNewWorkout, {\n          index: index,\n          isShown: isShown,\n          SetShown: SetShown,\n          isCurrID: isCurrID,\n          updateData: fetchData,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 33\n          }\n        })));\n      }\n    }))), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }\n    }, Object.entries(el).map(log => {\n      if (log[1].key === \"date\") {\n        let date = new Date(log[1].val);\n        return date.toDateString();\n      }\n    }))));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-inline-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SetNewLog, {\n    updateData: fetchData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(RemoveLog, {\n    isDelete: isDelete,\n    onDelete: onDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default ViewLogList;","map":{"version":3,"sources":["/Users/daniel/WebstormProjects/Exercise_App/Exercise_Logger/client/src/components/log/ViewLogList.js"],"names":["React","useState","useEffect","createRef","axios","Accordion","Button","Card","useAuth0","SetNewWorkout","ViewWorkoutList","SetNewLog","RemoveLog","RemoveLogList","BrowserView","MobileView","Swipe","update","ViewLogList","user","isAuthenticated","isShown","SetShown","isDisplayList","SetDisplayList","isCurrID","SetCurrID","isDeleteList","SetDeleteList","isDelete","SetDelete","isSwipedRight","SetOnSwipeRight","isSwipeEnd","SetSwipeOnEnd","fetchData","newLog","newWorkout","get","then","res","data","forEach","el","idx","username","email","currList","attr","hasOwnProperty","push","key","val","includes","_id","console","log","newExerciseList","exercises","logLocation","indexOf","slice","$set","catch","err","onDelete","onSwipeRight","pos","event","onSwipeEnd","handleDelete","Number","target","id","replace","index","current","classList","add","addEventListener","delete","map","Object","entries","Header","transition","paddingLeft","date","Date","toDateString"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, createRef } from \"react\";\nimport axios from \"axios\";\nimport { Accordion, Button, Card } from \"react-bootstrap\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport SetNewWorkout from \"./SetNewWorkout\";\nimport ViewWorkoutList from \"./ViewWorkoutList\";\nimport SetNewLog from \"./SetNewLog\";\nimport RemoveLog from \"./RemoveLog\";\nimport RemoveLogList from \"./RemoveLogList\";\nimport { BrowserView, MobileView } from \"react-device-detect\";\nimport Swipe from \"react-easy-swipe\";\nimport update from \"immutability-helper\";\n\nconst ViewLogList = () => {\n  const { user, isAuthenticated } = useAuth0();\n  const [isShown, SetShown] = useState([]);\n  const [isDisplayList, SetDisplayList] = useState([]);\n  const [isCurrID, SetCurrID] = useState([]);\n  const [isDeleteList, SetDeleteList] = useState([]);\n  const [isDelete, SetDelete] = useState(false);\n  const [isSwipedRight, SetOnSwipeRight] = useState(false);\n  const [isSwipeEnd, SetSwipeOnEnd] = useState(false);\n  useEffect(() => {\n    if (isAuthenticated) {\n      fetchData();\n    }\n  }, []);\n\n  const fetchData = (newLog = false, newWorkout = null) => {\n    if (!newLog && newWorkout === null) {\n      axios.get(`api/logs`).then((res) => {\n        res.data.forEach((el, idx) => {\n          if (el.username === user.email) {\n            let currList = [];\n            for (let attr in el) {\n              if (el.hasOwnProperty(attr)) {\n                if (attr === \"_id\")\n                  SetCurrID((isCurrID) => [...isCurrID, el[attr]]);\n                currList.push({ key: attr, val: el[attr] });\n              }\n            }\n            SetShown((isShown) => [...isShown, false]);\n            SetDeleteList((isDeleteList) => [...isDeleteList, createRef()]);\n            SetDisplayList((isDisplayList) => [...isDisplayList, currList]);\n          }\n        });\n      });\n    } else if (newLog && newWorkout === null) {\n      axios.get(`api/logs/`).then((res) => {\n        res.data.forEach((el, idx) => {\n          if (el.username === user.email) {\n            if (!isCurrID.includes(el._id)) {\n              let currList = [];\n              for (let attr in el) {\n                if (el.hasOwnProperty(attr)) {\n                  if (attr === \"_id\")\n                    SetCurrID((isCurrID) => [...isCurrID, el[attr]]);\n                  currList.push({ key: attr, val: el[attr] });\n                }\n              }\n              SetShown((isShown) => [...isShown, false]);\n              SetDeleteList((isDeleteList) => [...isDeleteList, createRef()]);\n              SetDisplayList((isDisplayList) => [...isDisplayList, currList]);\n            }\n          }\n        });\n      });\n    } else {\n      axios\n        .get(`api/logs/${newWorkout}`)\n        .then((res) => {\n          console.log(res.data);\n          let newExerciseList = [];\n          newExerciseList = res.data.exercises;\n\n          let logLocation = isCurrID.indexOf(newWorkout);\n          console.log(logLocation);\n          SetDisplayList((isDisplayList) => [\n            ...isDisplayList.slice(0, logLocation),\n            update(isDisplayList[logLocation], {\n              0: { $set: { key: \"exercises\", val: newExerciseList } },\n            }),\n            ...isDisplayList.slice(logLocation + 1),\n          ]);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  const onDelete = () => {\n    SetDelete(!isDelete);\n  };\n\n  const onSwipeRight = (pos, event) => {\n    if (isDelete) {\n      console.log(`Moved to the right`, event);\n      SetOnSwipeRight(true);\n    }\n  };\n  const onSwipeEnd = (event) => {\n    if (isSwipedRight) {\n      handleDelete(Number(event.target.id.replace(/log-title-/g, \"\")));\n    }\n  };\n\n  const handleDelete = (index) => {\n    isDeleteList[index].current.classList.add(\n      \"animate__animated\",\n      \"animate__fadeOutRight\"\n    );\n    isDeleteList[index].current.addEventListener(\"animationend\", () => {\n      axios\n        .delete(`api/logs/${isCurrID[index]}`)\n        .then((res) => {\n          console.log(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n      SetCurrID((isCurrID) => [\n        ...isCurrID.slice(0, index),\n        null,\n        ...isCurrID.slice(index + 1),\n      ]);\n      SetDisplayList((isDisplayList) => [\n        ...isDisplayList.slice(0, index),\n        null,\n        ...isDisplayList.slice(index + 1),\n      ]);\n      SetDeleteList((isDeleteList) => [\n        ...isDeleteList.slice(0, index),\n        null,\n        ...isDeleteList.slice(index + 1),\n      ]);\n    });\n    SetOnSwipeRight(false);\n    SetSwipeOnEnd(false);\n  };\n\n  return (\n    <>\n      <div>\n        {isDisplayList.map((el, index) => {\n          if (el === null) {\n            return <></>;\n          }\n          return (\n            <Swipe\n              onSwipeRight={onSwipeRight}\n              onSwipeEnd={onSwipeEnd}\n              allowMouseEvents={true}\n              key={\"log-disp\" + index}\n            >\n              <Accordion className={\"p-2\"} ref={isDeleteList[index]}>\n                <Card>\n                  {\n                    <>\n                      <>\n                        <RemoveLogList\n                          isDeleteList={isDelete}\n                          index={index}\n                          deleteData={handleDelete}\n                        />\n                      </>\n                      {Object.entries(el).map((log) => {\n                        if (log[1].key === \"title\") {\n                          return (\n                            <>\n                              <BrowserView>\n                                <Accordion.Toggle\n                                  as={Card.Header}\n                                  eventKey=\"0\"\n                                  id={\"log-title-\" + `${index}`}\n                                  style={{\n                                    transition: \"1s\",\n                                    paddingLeft: !isDelete ? \"1vw\" : \"6vw\",\n                                  }}\n                                >\n                                  {log[1].val}\n                                </Accordion.Toggle>\n                              </BrowserView>\n                              <MobileView>\n                                <Accordion.Toggle\n                                  as={Card.Header}\n                                  eventKey=\"0\"\n                                  id={\"log-title-\" + `${index}`}\n                                  style={{\n                                    transition: \"1s\",\n                                    paddingLeft: !isDelete ? \"1vw\" : \"13vw\",\n                                  }}\n                                >\n                                  {log[1].val}\n                                </Accordion.Toggle>\n                              </MobileView>\n                            </>\n                          );\n                        } else if (log[1].key === \"description\") {\n                          return (\n                            <Accordion.Collapse eventKey=\"0\">\n                              <Card.Body>\n                                <div className={\"p-2\"}>\n                                  <p id={\"log-desc-\" + `${index}`}>\n                                    {log[1].key === \"description\" && log[1].val}\n                                  </p>\n                                </div>\n                                <>\n                                  <ViewWorkoutList el={el} />\n                                </>\n                                <SetNewWorkout\n                                  index={index}\n                                  isShown={isShown}\n                                  SetShown={SetShown}\n                                  isCurrID={isCurrID}\n                                  updateData={fetchData}\n                                />\n                              </Card.Body>\n                            </Accordion.Collapse>\n                          );\n                        }\n                      })}\n                    </>\n                  }\n                </Card>\n\n                <Card>\n                  {Object.entries(el).map((log) => {\n                    if (log[1].key === \"date\") {\n                      let date = new Date(log[1].val);\n                      return date.toDateString();\n                    }\n                  })}\n                </Card>\n              </Accordion>\n            </Swipe>\n          );\n        })}\n      </div>\n      <div className={\"d-inline-start\"}>\n        <SetNewLog updateData={fetchData} />\n        <RemoveLog isDelete={isDelete} onDelete={onDelete} />\n      </div>\n    </>\n  );\n};\nexport default ViewLogList;\n"]},"metadata":{},"sourceType":"module"}