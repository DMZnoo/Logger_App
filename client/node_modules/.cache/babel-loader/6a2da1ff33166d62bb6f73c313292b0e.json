{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/WebstormProjects/Exercise_App/Exercise_Logger/client/src/components/log/actions/edit/EditLogList.js\";\nimport React, { useState } from \"react\";\nimport SubmitUpdate from \"../../../partials/SubmitUpdate\";\nimport EditWorkout from \"../../exercises/actions/edit/EditWorkout\";\nimport update from \"immutability-helper\";\nimport EditableTable from \"../../../partials/EditableTable\";\n\nconst EditLogList = ({\n  el,\n  index,\n  isEdit,\n  isCurrID,\n  updateData,\n  SetEdit\n}) => {\n  const [isEditList, SetEditList] = useState(el);\n\n  const SetData = (state, idx) => {\n    SetEditList(isEditList => update(isEditList, {\n      0: {\n        val: {\n          [idx]: {\n            set: {\n              $set: state.set\n            },\n            reps: {\n              $set: state.reps\n            },\n            weight: {\n              $set: state.weight\n            }\n          }\n        }\n      }\n    }));\n  };\n\n  return Object.entries(el).map(log => {\n    if (log[1].key === \"exercises\") {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, log[1].val.map((ex, li) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"container\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(EditWorkout, {\n          isEditList: isEditList,\n          SetEditList: SetEditList,\n          ex: ex,\n          li: li,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(\"hr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(EditableTable, {\n          index: li,\n          thead: [\"Set\", \"Reps\", \"Weight\"],\n          SetData: SetData,\n          style: {\n            color: \"black\",\n            width: \"inherit\",\n            fontSize: \"1.5vh\",\n            margin: \"0\"\n          },\n          dataAvailable: [ex.set, ex.reps, ex.weight],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(\"hr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }\n        }));\n      }), isEdit[index] && /*#__PURE__*/React.createElement(SubmitUpdate, {\n        index: index,\n        isCurrID: isCurrID,\n        isEdit: isEdit,\n        SetEdit: SetEdit,\n        isEditList: isEditList,\n        updateData: updateData,\n        target: \"Log\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }));\n    }\n  });\n};\n\nexport default EditLogList;","map":{"version":3,"sources":["/Users/daniel/WebstormProjects/Exercise_App/Exercise_Logger/client/src/components/log/actions/edit/EditLogList.js"],"names":["React","useState","SubmitUpdate","EditWorkout","update","EditableTable","EditLogList","el","index","isEdit","isCurrID","updateData","SetEdit","isEditList","SetEditList","SetData","state","idx","val","set","$set","reps","weight","Object","entries","map","log","key","ex","li","color","width","fontSize","margin"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport SubmitUpdate from \"../../../partials/SubmitUpdate\";\nimport EditWorkout from \"../../exercises/actions/edit/EditWorkout\";\nimport update from \"immutability-helper\";\nimport EditableTable from \"../../../partials/EditableTable\";\nconst EditLogList = ({ el, index, isEdit, isCurrID, updateData, SetEdit }) => {\n  const [isEditList, SetEditList] = useState(el);\n  const SetData = (state, idx) => {\n    SetEditList((isEditList) =>\n      update(isEditList, {\n        0: {\n          val: {\n            [idx]: {\n              set: { $set: state.set },\n              reps: { $set: state.reps },\n              weight: { $set: state.weight },\n            },\n          },\n        },\n      })\n    );\n  };\n  return Object.entries(el).map((log) => {\n    if (log[1].key === \"exercises\") {\n      return (\n        <>\n          {log[1].val.map((ex, li) => {\n            return (\n              <div className={\"container\"}>\n                <EditWorkout\n                  isEditList={isEditList}\n                  SetEditList={SetEditList}\n                  ex={ex}\n                  li={li}\n                />\n                <hr />\n                <EditableTable\n                  index={li}\n                  thead={[\"Set\", \"Reps\", \"Weight\"]}\n                  SetData={SetData}\n                  style={{\n                    color: \"black\",\n                    width: \"inherit\",\n                    fontSize: \"1.5vh\",\n                    margin: \"0\",\n                  }}\n                  dataAvailable={[ex.set, ex.reps, ex.weight]}\n                />\n                <hr />\n              </div>\n            );\n          })}\n          {isEdit[index] && (\n            <SubmitUpdate\n              index={index}\n              isCurrID={isCurrID}\n              isEdit={isEdit}\n              SetEdit={SetEdit}\n              isEditList={isEditList}\n              updateData={updateData}\n              target={\"Log\"}\n            />\n          )}\n        </>\n      );\n    }\n  });\n};\nexport default EditLogList;\n"]},"metadata":{},"sourceType":"module"}