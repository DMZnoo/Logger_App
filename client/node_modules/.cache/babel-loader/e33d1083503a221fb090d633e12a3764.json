{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/WebstormProjects/Exercise_App/Exercise_Logger/client/src/components/log/exercises/ViewWorkoutList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport ToggleEdit from \"../../partials/ToggleEdit\";\nimport SubmitUpdate from \"../../partials/SubmitUpdate\";\nimport EditWorkout from \"./actions/edit/EditWorkout\";\nimport RemoveWorkout from \"./actions/remove/RemoveWorkout\";\nimport EditableTable from \"../../partials/EditableTable\";\nimport update from \"immutability-helper\";\nimport axios from \"axios\";\nimport SetNewWorkout from \"./actions/create/SetNewWorkout\";\n\nconst ViewWorkoutList = ({\n  isShown,\n  SetShown,\n  isWorkoutList,\n  SetWorkoutList,\n  isCurrID,\n  user,\n  index,\n  onLogEdit,\n  updateData\n}) => {\n  const [isEdit, SetEdit] = useState([]);\n  const [isLogEdit, SetLogEdit] = useState(Boolean(onLogEdit[index]));\n  const [isDelete, SetDelete] = useState([]);\n  const [isAdded, SetAdded] = useState(false);\n  const [isValues, SetValues] = useState([]);\n  const [isKeys, SetKeys] = useState([]);\n  useEffect(() => {\n    let promises = [];\n\n    if (isWorkoutList[index].length > 0) {\n      isWorkoutList[index].forEach(call => {\n        promises.push(axios.get(`/api/exercises/log/${call}`));\n      });\n      Promise.all(promises).then(res => {\n        Object.entries(res).forEach((log, idx) => {\n          if (log[1].data.length > 0) {\n            SetWorkoutList(isWorkoutList => [...isWorkoutList.slice(0, index), [], ...isWorkoutList.slice(index + 1)]);\n            Object.values(log[1].data).forEach(data => {\n              console.log(\"Data\", data); // if () {\n\n              SetKeys(isKeys => [...isKeys, Object.keys(data)]);\n              SetValues(isValues => [...isValues, Object.values(data)]);\n              SetWorkoutList(isWorkoutList => [...isWorkoutList.slice(0, index), update(isWorkoutList[index], {\n                $push: [data]\n              }), ...isWorkoutList.slice(index + 1)]);\n              SetEdit(isEdit => [...isEdit, false]);\n              SetDelete(isDelete => [...isDelete, false]); // }\n            });\n          }\n        });\n      });\n    }\n  }, []);\n\n  const SetRoutine = (state, idx) => {\n    SetValues(isValues => update(isValues, {\n      [idx]: {\n        1: {\n          $set: state.set\n        },\n        2: {\n          $set: state.reps\n        },\n        3: {\n          $set: state.weight\n        }\n      }\n    }));\n    SetWorkoutList(isWorkoutList => [...isWorkoutList.slice(0, index), update(isWorkoutList[index], {\n      [idx]: {\n        set: {\n          $set: state.set\n        },\n        reps: {\n          $set: state.reps\n        },\n        weight: {\n          $set: state.weight\n        }\n      }\n    }), ...isWorkoutList.slice(index + 1)]);\n  };\n\n  const SetNewExercise = (data, idx) => {\n    console.log(\"INDEX\", idx);\n    SetWorkoutList(isWorkoutList => [...isWorkoutList.slice(0, idx), [], ...isWorkoutList.slice(idx + 1)]);\n    SetWorkoutList(update(isWorkoutList, {\n      [idx]: {\n        $push: [data]\n      }\n    }));\n    SetKeys(isKeys => [...isKeys, Object.keys(data)]);\n    SetValues(isValues => [...isValues, Object.values(data)]);\n  };\n\n  const removeExercise = (logIndex, exindex) => {\n    console.log(\"REMOVING AT\", logIndex); //this is json object and slice does not work...\n\n    SetWorkoutList(update(isWorkoutList, {\n      [logIndex]: {\n        $splice: [[exindex, 1]]\n      }\n    }));\n    SetValues(update(isValues, {\n      $splice: [[exindex, 1]]\n    })); // SetValues((isValues) => [\n    //   ...isValues.slice(exindex),\n    //   ...isValues.slice(exindex + 1),\n    // ]);\n\n    SetKeys(update(isKeys, {\n      $splice: [[exindex, 1]]\n    })); // SetKeys((isKeys) => [\n    //   ...isKeys.slice(exindex),\n    //   ...isKeys.slice(exindex + 1),\n    // ]);\n  };\n\n  if (isLogEdit !== Boolean(onLogEdit[index])) {\n    for (let i = 0; i < isEdit.length; i++) {\n      SetEdit(isEdit => [...isEdit.slice(0, i), Boolean(onLogEdit[index]), ...isEdit.slice(i + 1)]);\n    }\n\n    SetLogEdit(Boolean(onLogEdit[index]));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isValues.map((el, exerciseIndex) => {\n    if (el === null) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null);\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, !isEdit[exerciseIndex] ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 19\n      }\n    }, el[isKeys[exerciseIndex].indexOf(\"name\")]), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 19\n      }\n    }, el[isKeys[exerciseIndex].indexOf(\"description\")]), /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      borderless: true,\n      variant: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      className: \"thead-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      id: \"table-thead-tr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 25\n      }\n    }, \"Set\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 25\n      }\n    }, \"Reps\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 25\n      }\n    }, \"Weight\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }\n    }, el[isKeys[exerciseIndex].indexOf(\"set\")].map((set, idx) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 31\n        }\n      }), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 31\n        }\n      }, set), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 31\n        }\n      }, el[isKeys[exerciseIndex].indexOf(\"reps\")][idx]), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 31\n        }\n      }, el[isKeys[exerciseIndex].indexOf(\"weight\")][idx]));\n    })))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(EditWorkout, {\n      SetValues: SetValues,\n      isValues: isValues,\n      exercise: el,\n      exerciseIndex: exerciseIndex,\n      logIndex: index,\n      isKeyList: isKeys,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(EditableTable, {\n      index: exerciseIndex,\n      thead: [\"Set\", \"Reps\", \"Weight\"],\n      SetData: SetRoutine,\n      style: {\n        color: \"black\",\n        width: \"inherit\",\n        fontSize: \"1.5vh\",\n        margin: \"0\"\n      },\n      dataAvailable: [el[isKeys[exerciseIndex].indexOf(\"set\")], el[isKeys[exerciseIndex].indexOf(\"reps\")], el[isKeys[exerciseIndex].indexOf(\"weight\")]],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(SubmitUpdate, {\n      index: index,\n      workoutIndex: exerciseIndex,\n      isCurrID: isCurrID,\n      isEdit: isEdit,\n      SetEdit: SetEdit,\n      isValues: el,\n      isKeys: isKeys[exerciseIndex],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex d-inline-flex\",\n      style: {\n        fontSize: \"1.5vh\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(RemoveWorkout, {\n      exercise: el[isKeys[exerciseIndex].indexOf(\"_id\")],\n      logIndex: index,\n      exerciseIndex: exerciseIndex,\n      isCurrID: isCurrID,\n      SetEditList: SetValues,\n      isEditList: isValues,\n      updateData: removeExercise,\n      textColor: {\n        color: \"black\"\n      },\n      user: user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ToggleEdit, {\n      isEdit: isEdit,\n      SetEdit: SetEdit,\n      index: exerciseIndex,\n      target: \"Exercise\",\n      multiple: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 15\n      }\n    })));\n  }), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SetNewWorkout, {\n    logIndex: index,\n    isShown: isShown,\n    SetShown: SetShown,\n    isCurrID: isCurrID,\n    SetNewExercise: SetNewExercise,\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default ViewWorkoutList;","map":{"version":3,"sources":["/Users/daniel/WebstormProjects/Exercise_App/Exercise_Logger/client/src/components/log/exercises/ViewWorkoutList.js"],"names":["React","useEffect","useState","Table","ToggleEdit","SubmitUpdate","EditWorkout","RemoveWorkout","EditableTable","update","axios","SetNewWorkout","ViewWorkoutList","isShown","SetShown","isWorkoutList","SetWorkoutList","isCurrID","user","index","onLogEdit","updateData","isEdit","SetEdit","isLogEdit","SetLogEdit","Boolean","isDelete","SetDelete","isAdded","SetAdded","isValues","SetValues","isKeys","SetKeys","promises","length","forEach","call","push","get","Promise","all","then","res","Object","entries","log","idx","data","slice","values","console","keys","$push","SetRoutine","state","$set","set","reps","weight","SetNewExercise","removeExercise","logIndex","exindex","$splice","i","map","el","exerciseIndex","indexOf","color","width","fontSize","margin"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;AAEA,MAAMC,eAAe,GAAG,CAAC;AACvBC,EAAAA,OADuB;AAEvBC,EAAAA,QAFuB;AAGvBC,EAAAA,aAHuB;AAIvBC,EAAAA,cAJuB;AAKvBC,EAAAA,QALuB;AAMvBC,EAAAA,IANuB;AAOvBC,EAAAA,KAPuB;AAQvBC,EAAAA,SARuB;AASvBC,EAAAA;AATuB,CAAD,KAUlB;AACJ,QAAM,CAACC,MAAD,EAASC,OAAT,IAAoBrB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACsB,SAAD,EAAYC,UAAZ,IAA0BvB,QAAQ,CAACwB,OAAO,CAACN,SAAS,CAACD,KAAD,CAAV,CAAR,CAAxC;AACA,QAAM,CAACQ,QAAD,EAAWC,SAAX,IAAwB1B,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAAC2B,OAAD,EAAUC,QAAV,IAAsB5B,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAAC6B,QAAD,EAAWC,SAAX,IAAwB9B,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAAC+B,MAAD,EAASC,OAAT,IAAoBhC,QAAQ,CAAC,EAAD,CAAlC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIkC,QAAQ,GAAG,EAAf;;AACA,QAAIpB,aAAa,CAACI,KAAD,CAAb,CAAqBiB,MAArB,GAA8B,CAAlC,EAAqC;AACnCrB,MAAAA,aAAa,CAACI,KAAD,CAAb,CAAqBkB,OAArB,CAA8BC,IAAD,IAAU;AACrCH,QAAAA,QAAQ,CAACI,IAAT,CAAc7B,KAAK,CAAC8B,GAAN,CAAW,sBAAqBF,IAAK,EAArC,CAAd;AACD,OAFD;AAGAG,MAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ,EAAsBQ,IAAtB,CAA4BC,GAAD,IAAS;AAClCC,QAAAA,MAAM,CAACC,OAAP,CAAeF,GAAf,EAAoBP,OAApB,CAA4B,CAACU,GAAD,EAAMC,GAAN,KAAc;AACxC,cAAID,GAAG,CAAC,CAAD,CAAH,CAAOE,IAAP,CAAYb,MAAZ,GAAqB,CAAzB,EAA4B;AAC1BpB,YAAAA,cAAc,CAAED,aAAD,IAAmB,CAChC,GAAGA,aAAa,CAACmC,KAAd,CAAoB,CAApB,EAAuB/B,KAAvB,CAD6B,EAEhC,EAFgC,EAGhC,GAAGJ,aAAa,CAACmC,KAAd,CAAoB/B,KAAK,GAAG,CAA5B,CAH6B,CAApB,CAAd;AAKA0B,YAAAA,MAAM,CAACM,MAAP,CAAcJ,GAAG,CAAC,CAAD,CAAH,CAAOE,IAArB,EAA2BZ,OAA3B,CAAoCY,IAAD,IAAU;AAC3CG,cAAAA,OAAO,CAACL,GAAR,CAAY,MAAZ,EAAoBE,IAApB,EAD2C,CAE3C;;AACAf,cAAAA,OAAO,CAAED,MAAD,IAAY,CAAC,GAAGA,MAAJ,EAAYY,MAAM,CAACQ,IAAP,CAAYJ,IAAZ,CAAZ,CAAb,CAAP;AACAjB,cAAAA,SAAS,CAAED,QAAD,IAAc,CAAC,GAAGA,QAAJ,EAAcc,MAAM,CAACM,MAAP,CAAcF,IAAd,CAAd,CAAf,CAAT;AACAjC,cAAAA,cAAc,CAAED,aAAD,IAAmB,CAChC,GAAGA,aAAa,CAACmC,KAAd,CAAoB,CAApB,EAAuB/B,KAAvB,CAD6B,EAEhCV,MAAM,CAACM,aAAa,CAACI,KAAD,CAAd,EAAuB;AAAEmC,gBAAAA,KAAK,EAAE,CAACL,IAAD;AAAT,eAAvB,CAF0B,EAGhC,GAAGlC,aAAa,CAACmC,KAAd,CAAoB/B,KAAK,GAAG,CAA5B,CAH6B,CAApB,CAAd;AAKAI,cAAAA,OAAO,CAAED,MAAD,IAAY,CAAC,GAAGA,MAAJ,EAAY,KAAZ,CAAb,CAAP;AACAM,cAAAA,SAAS,CAAED,QAAD,IAAc,CAAC,GAAGA,QAAJ,EAAc,KAAd,CAAf,CAAT,CAX2C,CAY3C;AACD,aAbD;AAcD;AACF,SAtBD;AAuBD,OAxBD;AAyBD;AACF,GAhCQ,EAgCN,EAhCM,CAAT;;AAkCA,QAAM4B,UAAU,GAAG,CAACC,KAAD,EAAQR,GAAR,KAAgB;AACjChB,IAAAA,SAAS,CAAED,QAAD,IACRtB,MAAM,CAACsB,QAAD,EAAW;AACf,OAACiB,GAAD,GAAO;AACL,WAAG;AAAES,UAAAA,IAAI,EAAED,KAAK,CAACE;AAAd,SADE;AAEL,WAAG;AAAED,UAAAA,IAAI,EAAED,KAAK,CAACG;AAAd,SAFE;AAGL,WAAG;AAAEF,UAAAA,IAAI,EAAED,KAAK,CAACI;AAAd;AAHE;AADQ,KAAX,CADC,CAAT;AASA5C,IAAAA,cAAc,CAAED,aAAD,IAAmB,CAChC,GAAGA,aAAa,CAACmC,KAAd,CAAoB,CAApB,EAAuB/B,KAAvB,CAD6B,EAEhCV,MAAM,CAACM,aAAa,CAACI,KAAD,CAAd,EAAuB;AAC3B,OAAC6B,GAAD,GAAO;AACLU,QAAAA,GAAG,EAAE;AAAED,UAAAA,IAAI,EAAED,KAAK,CAACE;AAAd,SADA;AAELC,QAAAA,IAAI,EAAE;AAAEF,UAAAA,IAAI,EAAED,KAAK,CAACG;AAAd,SAFD;AAGLC,QAAAA,MAAM,EAAE;AAAEH,UAAAA,IAAI,EAAED,KAAK,CAACI;AAAd;AAHH;AADoB,KAAvB,CAF0B,EAShC,GAAG7C,aAAa,CAACmC,KAAd,CAAoB/B,KAAK,GAAG,CAA5B,CAT6B,CAApB,CAAd;AAWD,GArBD;;AAuBA,QAAM0C,cAAc,GAAG,CAACZ,IAAD,EAAOD,GAAP,KAAe;AACpCI,IAAAA,OAAO,CAACL,GAAR,CAAY,OAAZ,EAAqBC,GAArB;AACAhC,IAAAA,cAAc,CAAED,aAAD,IAAmB,CAChC,GAAGA,aAAa,CAACmC,KAAd,CAAoB,CAApB,EAAuBF,GAAvB,CAD6B,EAEhC,EAFgC,EAGhC,GAAGjC,aAAa,CAACmC,KAAd,CAAoBF,GAAG,GAAG,CAA1B,CAH6B,CAApB,CAAd;AAKAhC,IAAAA,cAAc,CAACP,MAAM,CAACM,aAAD,EAAgB;AAAE,OAACiC,GAAD,GAAO;AAAEM,QAAAA,KAAK,EAAE,CAACL,IAAD;AAAT;AAAT,KAAhB,CAAP,CAAd;AACAf,IAAAA,OAAO,CAAED,MAAD,IAAY,CAAC,GAAGA,MAAJ,EAAYY,MAAM,CAACQ,IAAP,CAAYJ,IAAZ,CAAZ,CAAb,CAAP;AACAjB,IAAAA,SAAS,CAAED,QAAD,IAAc,CAAC,GAAGA,QAAJ,EAAcc,MAAM,CAACM,MAAP,CAAcF,IAAd,CAAd,CAAf,CAAT;AACD,GAVD;;AAYA,QAAMa,cAAc,GAAG,CAACC,QAAD,EAAWC,OAAX,KAAuB;AAC5CZ,IAAAA,OAAO,CAACL,GAAR,CAAY,aAAZ,EAA2BgB,QAA3B,EAD4C,CAE5C;;AACA/C,IAAAA,cAAc,CACZP,MAAM,CAACM,aAAD,EAAgB;AAAE,OAACgD,QAAD,GAAY;AAAEE,QAAAA,OAAO,EAAE,CAAC,CAACD,OAAD,EAAU,CAAV,CAAD;AAAX;AAAd,KAAhB,CADM,CAAd;AAGAhC,IAAAA,SAAS,CAACvB,MAAM,CAACsB,QAAD,EAAW;AAAEkC,MAAAA,OAAO,EAAE,CAAC,CAACD,OAAD,EAAU,CAAV,CAAD;AAAX,KAAX,CAAP,CAAT,CAN4C,CAO5C;AACA;AACA;AACA;;AACA9B,IAAAA,OAAO,CAACzB,MAAM,CAACwB,MAAD,EAAS;AAAEgC,MAAAA,OAAO,EAAE,CAAC,CAACD,OAAD,EAAU,CAAV,CAAD;AAAX,KAAT,CAAP,CAAP,CAX4C,CAY5C;AACA;AACA;AACA;AACD,GAhBD;;AAkBA,MAAIxC,SAAS,KAAKE,OAAO,CAACN,SAAS,CAACD,KAAD,CAAV,CAAzB,EAA6C;AAC3C,SAAK,IAAI+C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG5C,MAAM,CAACc,MAA3B,EAAmC8B,CAAC,EAApC,EAAwC;AACtC3C,MAAAA,OAAO,CAAED,MAAD,IAAY,CAClB,GAAGA,MAAM,CAAC4B,KAAP,CAAa,CAAb,EAAgBgB,CAAhB,CADe,EAElBxC,OAAO,CAACN,SAAS,CAACD,KAAD,CAAV,CAFW,EAGlB,GAAGG,MAAM,CAAC4B,KAAP,CAAagB,CAAC,GAAG,CAAjB,CAHe,CAAb,CAAP;AAKD;;AACDzC,IAAAA,UAAU,CAACC,OAAO,CAACN,SAAS,CAACD,KAAD,CAAV,CAAR,CAAV;AACD;;AAED,sBACE,0CACGY,QAAQ,CAACoC,GAAT,CAAa,CAACC,EAAD,EAAKC,aAAL,KAAuB;AACnC,QAAID,EAAE,KAAK,IAAX,EAAiB;AACf,0BAAO,yCAAP;AACD;;AACD,wBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC9C,MAAM,CAAC+C,aAAD,CAAP,gBACC,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,EAAE,CAACnC,MAAM,CAACoC,aAAD,CAAN,CAAsBC,OAAtB,CAA8B,MAA9B,CAAD,CAAP,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIF,EAAE,CAACnC,MAAM,CAACoC,aAAD,CAAN,CAAsBC,OAAtB,CAA8B,aAA9B,CAAD,CAAN,CAFF,eAGE,oBAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,UAAU,MAAzB;AAA0B,MAAA,OAAO,EAAE,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,EAAE,EAAC,gBAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,CADF,CADF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,EAAE,CAACnC,MAAM,CAACoC,aAAD,CAAN,CAAsBC,OAAtB,CAA8B,KAA9B,CAAD,CAAF,CAAyCH,GAAzC,CACC,CAACT,GAAD,EAAMV,GAAN,KAAc;AACZ,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKU,GAAL,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGU,EAAE,CAACnC,MAAM,CAACoC,aAAD,CAAN,CAAsBC,OAAtB,CAA8B,MAA9B,CAAD,CAAF,CAA0CtB,GAA1C,CADH,CAHF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEIoB,EAAE,CAACnC,MAAM,CAACoC,aAAD,CAAN,CAAsBC,OAAtB,CAA8B,QAA9B,CAAD,CAAF,CACEtB,GADF,CAFJ,CANF,CADF;AAgBD,KAlBF,CADH,CATF,CAHF,CADD,gBAsCC,uDACE,oBAAC,WAAD;AACE,MAAA,SAAS,EAAEhB,SADb;AAEE,MAAA,QAAQ,EAAED,QAFZ;AAGE,MAAA,QAAQ,EAAEqC,EAHZ;AAIE,MAAA,aAAa,EAAEC,aAJjB;AAKE,MAAA,QAAQ,EAAElD,KALZ;AAME,MAAA,SAAS,EAAEc,MANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eASE,oBAAC,aAAD;AACE,MAAA,KAAK,EAAEoC,aADT;AAEE,MAAA,KAAK,EAAE,CAAC,KAAD,EAAQ,MAAR,EAAgB,QAAhB,CAFT;AAGE,MAAA,OAAO,EAAEd,UAHX;AAIE,MAAA,KAAK,EAAE;AACLgB,QAAAA,KAAK,EAAE,OADF;AAELC,QAAAA,KAAK,EAAE,SAFF;AAGLC,QAAAA,QAAQ,EAAE,OAHL;AAILC,QAAAA,MAAM,EAAE;AAJH,OAJT;AAUE,MAAA,aAAa,EAAE,CACbN,EAAE,CAACnC,MAAM,CAACoC,aAAD,CAAN,CAAsBC,OAAtB,CAA8B,KAA9B,CAAD,CADW,EAEbF,EAAE,CAACnC,MAAM,CAACoC,aAAD,CAAN,CAAsBC,OAAtB,CAA8B,MAA9B,CAAD,CAFW,EAGbF,EAAE,CAACnC,MAAM,CAACoC,aAAD,CAAN,CAAsBC,OAAtB,CAA8B,QAA9B,CAAD,CAHW,CAVjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,eAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzBF,eA0BE,oBAAC,YAAD;AACE,MAAA,KAAK,EAAEnD,KADT;AAEE,MAAA,YAAY,EAAEkD,aAFhB;AAGE,MAAA,QAAQ,EAAEpD,QAHZ;AAIE,MAAA,MAAM,EAAEK,MAJV;AAKE,MAAA,OAAO,EAAEC,OALX;AAME,MAAA,QAAQ,EAAE6C,EANZ;AAOE,MAAA,MAAM,EAAEnC,MAAM,CAACoC,aAAD,CAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1BF,CAvCJ,eA6EE;AACE,MAAA,SAAS,EAAE,sBADb;AAEE,MAAA,KAAK,EAAE;AAAEI,QAAAA,QAAQ,EAAE;AAAZ,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE,oBAAC,aAAD;AACE,MAAA,QAAQ,EAAEL,EAAE,CAACnC,MAAM,CAACoC,aAAD,CAAN,CAAsBC,OAAtB,CAA8B,KAA9B,CAAD,CADd;AAEE,MAAA,QAAQ,EAAEnD,KAFZ;AAGE,MAAA,aAAa,EAAEkD,aAHjB;AAIE,MAAA,QAAQ,EAAEpD,QAJZ;AAKE,MAAA,WAAW,EAAEe,SALf;AAME,MAAA,UAAU,EAAED,QANd;AAOE,MAAA,UAAU,EAAE+B,cAPd;AAQE,MAAA,SAAS,EAAE;AAAES,QAAAA,KAAK,EAAE;AAAT,OARb;AASE,MAAA,IAAI,EAAErD,IATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAeE,oBAAC,UAAD;AACE,MAAA,MAAM,EAAEI,MADV;AAEE,MAAA,OAAO,EAAEC,OAFX;AAGE,MAAA,KAAK,EAAE8C,aAHT;AAIE,MAAA,MAAM,EAAE,UAJV;AAKE,MAAA,QAAQ,EAAE,IALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,CA7EF,eAoGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApGF,CADF,CADF;AA0GD,GA9GA,CADH,eAgHE,uDACE,oBAAC,aAAD;AACE,IAAA,QAAQ,EAAElD,KADZ;AAEE,IAAA,OAAO,EAAEN,OAFX;AAGE,IAAA,QAAQ,EAAEC,QAHZ;AAIE,IAAA,QAAQ,EAAEG,QAJZ;AAKE,IAAA,cAAc,EAAE4C,cALlB;AAME,IAAA,IAAI,EAAE3C,IANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAhHF,CADF;AA6HD,CAhPD;;AAiPA,eAAeN,eAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport ToggleEdit from \"../../partials/ToggleEdit\";\nimport SubmitUpdate from \"../../partials/SubmitUpdate\";\nimport EditWorkout from \"./actions/edit/EditWorkout\";\nimport RemoveWorkout from \"./actions/remove/RemoveWorkout\";\nimport EditableTable from \"../../partials/EditableTable\";\nimport update from \"immutability-helper\";\nimport axios from \"axios\";\nimport SetNewWorkout from \"./actions/create/SetNewWorkout\";\n\nconst ViewWorkoutList = ({\n  isShown,\n  SetShown,\n  isWorkoutList,\n  SetWorkoutList,\n  isCurrID,\n  user,\n  index,\n  onLogEdit,\n  updateData,\n}) => {\n  const [isEdit, SetEdit] = useState([]);\n  const [isLogEdit, SetLogEdit] = useState(Boolean(onLogEdit[index]));\n  const [isDelete, SetDelete] = useState([]);\n  const [isAdded, SetAdded] = useState(false);\n  const [isValues, SetValues] = useState([]);\n  const [isKeys, SetKeys] = useState([]);\n  useEffect(() => {\n    let promises = [];\n    if (isWorkoutList[index].length > 0) {\n      isWorkoutList[index].forEach((call) => {\n        promises.push(axios.get(`/api/exercises/log/${call}`));\n      });\n      Promise.all(promises).then((res) => {\n        Object.entries(res).forEach((log, idx) => {\n          if (log[1].data.length > 0) {\n            SetWorkoutList((isWorkoutList) => [\n              ...isWorkoutList.slice(0, index),\n              [],\n              ...isWorkoutList.slice(index + 1),\n            ]);\n            Object.values(log[1].data).forEach((data) => {\n              console.log(\"Data\", data);\n              // if () {\n              SetKeys((isKeys) => [...isKeys, Object.keys(data)]);\n              SetValues((isValues) => [...isValues, Object.values(data)]);\n              SetWorkoutList((isWorkoutList) => [\n                ...isWorkoutList.slice(0, index),\n                update(isWorkoutList[index], { $push: [data] }),\n                ...isWorkoutList.slice(index + 1),\n              ]);\n              SetEdit((isEdit) => [...isEdit, false]);\n              SetDelete((isDelete) => [...isDelete, false]);\n              // }\n            });\n          }\n        });\n      });\n    }\n  }, []);\n\n  const SetRoutine = (state, idx) => {\n    SetValues((isValues) =>\n      update(isValues, {\n        [idx]: {\n          1: { $set: state.set },\n          2: { $set: state.reps },\n          3: { $set: state.weight },\n        },\n      })\n    );\n    SetWorkoutList((isWorkoutList) => [\n      ...isWorkoutList.slice(0, index),\n      update(isWorkoutList[index], {\n        [idx]: {\n          set: { $set: state.set },\n          reps: { $set: state.reps },\n          weight: { $set: state.weight },\n        },\n      }),\n      ...isWorkoutList.slice(index + 1),\n    ]);\n  };\n\n  const SetNewExercise = (data, idx) => {\n    console.log(\"INDEX\", idx);\n    SetWorkoutList((isWorkoutList) => [\n      ...isWorkoutList.slice(0, idx),\n      [],\n      ...isWorkoutList.slice(idx + 1),\n    ]);\n    SetWorkoutList(update(isWorkoutList, { [idx]: { $push: [data] } }));\n    SetKeys((isKeys) => [...isKeys, Object.keys(data)]);\n    SetValues((isValues) => [...isValues, Object.values(data)]);\n  };\n\n  const removeExercise = (logIndex, exindex) => {\n    console.log(\"REMOVING AT\", logIndex);\n    //this is json object and slice does not work...\n    SetWorkoutList(\n      update(isWorkoutList, { [logIndex]: { $splice: [[exindex, 1]] } })\n    );\n    SetValues(update(isValues, { $splice: [[exindex, 1]] }));\n    // SetValues((isValues) => [\n    //   ...isValues.slice(exindex),\n    //   ...isValues.slice(exindex + 1),\n    // ]);\n    SetKeys(update(isKeys, { $splice: [[exindex, 1]] }));\n    // SetKeys((isKeys) => [\n    //   ...isKeys.slice(exindex),\n    //   ...isKeys.slice(exindex + 1),\n    // ]);\n  };\n\n  if (isLogEdit !== Boolean(onLogEdit[index])) {\n    for (let i = 0; i < isEdit.length; i++) {\n      SetEdit((isEdit) => [\n        ...isEdit.slice(0, i),\n        Boolean(onLogEdit[index]),\n        ...isEdit.slice(i + 1),\n      ]);\n    }\n    SetLogEdit(Boolean(onLogEdit[index]));\n  }\n\n  return (\n    <>\n      {isValues.map((el, exerciseIndex) => {\n        if (el === null) {\n          return <></>;\n        }\n        return (\n          <>\n            <div>\n              {!isEdit[exerciseIndex] ? (\n                <>\n                  <h3>{el[isKeys[exerciseIndex].indexOf(\"name\")]}</h3>\n                  <p>{el[isKeys[exerciseIndex].indexOf(\"description\")]}</p>\n                  <Table striped borderless variant={\"dark\"}>\n                    <thead className=\"thead-dark\">\n                      <tr id=\"table-thead-tr\">\n                        <th />\n                        <th>Set</th>\n                        <th>Reps</th>\n                        <th>Weight</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {el[isKeys[exerciseIndex].indexOf(\"set\")].map(\n                        (set, idx) => {\n                          return (\n                            <tr>\n                              <td></td>\n                              <td>{set}</td>\n                              <td>\n                                {el[isKeys[exerciseIndex].indexOf(\"reps\")][idx]}\n                              </td>\n                              <td>\n                                {\n                                  el[isKeys[exerciseIndex].indexOf(\"weight\")][\n                                    idx\n                                  ]\n                                }\n                              </td>\n                            </tr>\n                          );\n                        }\n                      )}\n                    </tbody>\n                  </Table>\n                </>\n              ) : (\n                <>\n                  <EditWorkout\n                    SetValues={SetValues}\n                    isValues={isValues}\n                    exercise={el}\n                    exerciseIndex={exerciseIndex}\n                    logIndex={index}\n                    isKeyList={isKeys}\n                  />\n                  <EditableTable\n                    index={exerciseIndex}\n                    thead={[\"Set\", \"Reps\", \"Weight\"]}\n                    SetData={SetRoutine}\n                    style={{\n                      color: \"black\",\n                      width: \"inherit\",\n                      fontSize: \"1.5vh\",\n                      margin: \"0\",\n                    }}\n                    dataAvailable={[\n                      el[isKeys[exerciseIndex].indexOf(\"set\")],\n                      el[isKeys[exerciseIndex].indexOf(\"reps\")],\n                      el[isKeys[exerciseIndex].indexOf(\"weight\")],\n                    ]}\n                  />\n                  <hr />\n                  <SubmitUpdate\n                    index={index}\n                    workoutIndex={exerciseIndex}\n                    isCurrID={isCurrID}\n                    isEdit={isEdit}\n                    SetEdit={SetEdit}\n                    isValues={el}\n                    isKeys={isKeys[exerciseIndex]}\n                  />\n                </>\n              )}\n\n              <div\n                className={\"d-flex d-inline-flex\"}\n                style={{ fontSize: \"1.5vh\" }}\n              >\n                <RemoveWorkout\n                  exercise={el[isKeys[exerciseIndex].indexOf(\"_id\")]}\n                  logIndex={index}\n                  exerciseIndex={exerciseIndex}\n                  isCurrID={isCurrID}\n                  SetEditList={SetValues}\n                  isEditList={isValues}\n                  updateData={removeExercise}\n                  textColor={{ color: \"black\" }}\n                  user={user}\n                />\n                <ToggleEdit\n                  isEdit={isEdit}\n                  SetEdit={SetEdit}\n                  index={exerciseIndex}\n                  target={\"Exercise\"}\n                  multiple={true}\n                />\n              </div>\n              <hr />\n            </div>\n          </>\n        );\n      })}\n      <>\n        <SetNewWorkout\n          logIndex={index}\n          isShown={isShown}\n          SetShown={SetShown}\n          isCurrID={isCurrID}\n          SetNewExercise={SetNewExercise}\n          user={user}\n        />\n      </>\n    </>\n  );\n};\nexport default ViewWorkoutList;\n"]},"metadata":{},"sourceType":"module"}