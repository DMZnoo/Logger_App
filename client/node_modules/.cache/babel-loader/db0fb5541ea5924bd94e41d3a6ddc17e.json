{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/WebstormProjects/Exercise_App/Exercise_Logger/client/src/components/log/actions/edit/EditLogList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport SubmitEditLog from \"./SubmitEditLog\";\nimport CustomTable from \"../../../partials/CustomTable\";\nimport update from \"immutability-helper\";\n\nconst EditLogList = ({\n  el,\n  index,\n  isEdit,\n  isCurrID,\n  updateData,\n  SetEdit\n}) => {\n  const [isEditList, SetEditList] = useState(el);\n  return Object.entries(el).map(log => {\n    if (log[1].key === \"exercises\") {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, log[1].val.map((ex, li) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"container\",\n          style: {\n            overflowX: \"auto\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"d-flex\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"h5\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 19\n          }\n        }, \"Name: \"), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 19\n          }\n        }), /*#__PURE__*/React.createElement(\"input\", {\n          id: li,\n          className: \"ml-2\",\n          type: \"text\",\n          size: 15,\n          placeholder: ex.name,\n          onChange: e => {\n            const index = Number(e.target.id);\n            const val = e.target.value;\n            SetEditList(isEditList => update(isEditList, {\n              0: {\n                val: {\n                  [index]: {\n                    name: {\n                      $set: val\n                    }\n                  }\n                }\n              }\n            }));\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 19\n          }\n        })), /*#__PURE__*/React.createElement(\"hr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"d-flex\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"h5\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 19\n          }\n        }, \"Description: \"), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 19\n          }\n        }), /*#__PURE__*/React.createElement(\"textarea\", {\n          id: li,\n          className: \"mb-2 ml-2\",\n          placeholder: ex.description,\n          cols: 50,\n          rows: 2,\n          onChange: e => {\n            const index = Number(e.target.id);\n            let val = e.target.value;\n            SetEditList(isEditList => update(isEditList, {\n              0: {\n                val: {\n                  [index]: {\n                    description: {\n                      $set: val\n                    }\n                  }\n                }\n              }\n            }));\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 19\n          }\n        })), /*#__PURE__*/React.createElement(\"hr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(CustomTable, {\n          index: li,\n          thead: [\"Set\", \"Reps\", \"Weight\"],\n          data: [ex.set, ex.reps, ex.weight],\n          SetNewList: SetEditList,\n          isNewList: isEditList,\n          warning: false,\n          editable: true,\n          style: {\n            fontSize: \"1.5vh\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(\"hr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }\n        }));\n      }), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      }), isEdit[index] && /*#__PURE__*/React.createElement(SubmitEditLog, {\n        index: index,\n        isCurrID: isCurrID,\n        isEdit: isEdit,\n        SetEdit: SetEdit,\n        isEditList: isEditList,\n        updateData: updateData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      }));\n    }\n  });\n};\n\nexport default EditLogList;","map":{"version":3,"sources":["/Users/daniel/WebstormProjects/Exercise_App/Exercise_Logger/client/src/components/log/actions/edit/EditLogList.js"],"names":["React","useEffect","useState","Table","SubmitEditLog","CustomTable","update","EditLogList","el","index","isEdit","isCurrID","updateData","SetEdit","isEditList","SetEditList","Object","entries","map","log","key","val","ex","li","overflowX","name","e","Number","target","id","value","$set","description","set","reps","weight","fontSize"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport SubmitEditLog from \"./SubmitEditLog\";\nimport CustomTable from \"../../../partials/CustomTable\";\nimport update from \"immutability-helper\";\nconst EditLogList = ({ el, index, isEdit, isCurrID, updateData, SetEdit }) => {\n  const [isEditList, SetEditList] = useState(el);\n  return Object.entries(el).map((log) => {\n    if (log[1].key === \"exercises\") {\n      return (\n        <>\n          {log[1].val.map((ex, li) => {\n            return (\n              <div className={\"container\"} style={{ overflowX: \"auto\" }}>\n                <div className={\"d-flex\"}>\n                  <h5>Name: </h5>\n                  <br />\n                  <input\n                    id={li}\n                    className={\"ml-2\"}\n                    type=\"text\"\n                    size={15}\n                    placeholder={ex.name}\n                    onChange={(e) => {\n                      const index = Number(e.target.id);\n                      const val = e.target.value;\n                      SetEditList((isEditList) =>\n                        update(isEditList, {\n                          0: {\n                            val: {\n                              [index]: { name: { $set: val } },\n                            },\n                          },\n                        })\n                      );\n                    }}\n                  />\n                </div>\n                <hr />\n                <div className={\"d-flex\"}>\n                  <h5>Description: </h5>\n                  <br />\n                  <textarea\n                    id={li}\n                    className={\"mb-2 ml-2\"}\n                    placeholder={ex.description}\n                    cols={50}\n                    rows={2}\n                    onChange={(e) => {\n                      const index = Number(e.target.id);\n                      let val = e.target.value;\n                      SetEditList((isEditList) =>\n                        update(isEditList, {\n                          0: {\n                            val: {\n                              [index]: {\n                                description: { $set: val },\n                              },\n                            },\n                          },\n                        })\n                      );\n                    }}\n                  />\n                </div>\n                <hr />\n                <CustomTable\n                  index={li}\n                  thead={[\"Set\", \"Reps\", \"Weight\"]}\n                  data={[ex.set, ex.reps, ex.weight]}\n                  SetNewList={SetEditList}\n                  isNewList={isEditList}\n                  warning={false}\n                  editable={true}\n                  style={{ fontSize: \"1.5vh\" }}\n                />\n                <hr />\n              </div>\n            );\n          })}\n          <hr />\n          {isEdit[index] && (\n            <SubmitEditLog\n              index={index}\n              isCurrID={isCurrID}\n              isEdit={isEdit}\n              SetEdit={SetEdit}\n              isEditList={isEditList}\n              updateData={updateData}\n            />\n          )}\n        </>\n      );\n    }\n  });\n};\nexport default EditLogList;\n"]},"metadata":{},"sourceType":"module"}