{"ast":null,"code":"import _slicedToArray from\"/var/www/Exercise_Logger/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{Redirect,useLocation}from\"react-router\";import{Breadcrumb}from\"react-bootstrap\";import{LinkContainer}from\"react-router-bootstrap\";var BreadCrumbs=function BreadCrumbs(){var location=useLocation();var _useState=useState(location.pathname.split(\"/\")),_useState2=_slicedToArray(_useState,2),isPath=_useState2[0],SetPath=_useState2[1];useEffect(function(){SetPath(location.pathname.split(\"/\"));},[location]);if(location.pathname===\"/exlist/weight_lifting\"){return/*#__PURE__*/React.createElement(Redirect,{to:\"/exlist/weight_lifting/1\"});}if(location.pathname===\"/exlist/cardio\"){return/*#__PURE__*/React.createElement(Redirect,{to:\"/exlist/cardio/1\"});}return/*#__PURE__*/React.createElement(Breadcrumb,null,isPath.map(function(el,idx){console.log(el);if(idx===0){return/*#__PURE__*/React.createElement(LinkContainer,{to:\"/\"},/*#__PURE__*/React.createElement(Breadcrumb.Item,null,\"Home\"));}if(idx===isPath.length-1){return/*#__PURE__*/React.createElement(LinkContainer,{active:true,to:\"/\".concat(location.pathname)},/*#__PURE__*/React.createElement(Breadcrumb.Item,null,el));}return/*#__PURE__*/React.createElement(LinkContainer,{to:\"\".concat(location.pathname.split(\"/\").slice(0,idx+1).join(\"/\")),replace:true},/*#__PURE__*/React.createElement(Breadcrumb.Item,null,el));}));};export default BreadCrumbs;","map":{"version":3,"sources":["/var/www/Exercise_Logger/client/src/components/BreadCrumbs.js"],"names":["React","useEffect","useState","Redirect","useLocation","Breadcrumb","LinkContainer","BreadCrumbs","location","pathname","split","isPath","SetPath","map","el","idx","console","log","length","slice","join"],"mappings":"sJAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,QAAT,CAAmBC,WAAnB,KAAsC,cAAtC,CACA,OAASC,UAAT,KAA2B,iBAA3B,CACA,OAASC,aAAT,KAA8B,wBAA9B,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB,GAAMC,CAAAA,QAAQ,CAAGJ,WAAW,EAA5B,CADwB,cAEEF,QAAQ,CAACM,QAAQ,CAACC,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,CAAD,CAFV,wCAEjBC,MAFiB,eAETC,OAFS,eAGxBX,SAAS,CAAC,UAAM,CACdW,OAAO,CAACJ,QAAQ,CAACC,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,CAAD,CAAP,CACD,CAFQ,CAEN,CAACF,QAAD,CAFM,CAAT,CAGA,GAAIA,QAAQ,CAACC,QAAT,GAAsB,wBAA1B,CAAoD,CAClD,mBAAO,oBAAC,QAAD,EAAU,EAAE,CAAE,0BAAd,EAAP,CACD,CACD,GAAID,QAAQ,CAACC,QAAT,GAAsB,gBAA1B,CAA4C,CAC1C,mBAAO,oBAAC,QAAD,EAAU,EAAE,CAAE,kBAAd,EAAP,CACD,CACD,mBACE,oBAAC,UAAD,MACGE,MAAM,CAACE,GAAP,CAAW,SAACC,EAAD,CAAKC,GAAL,CAAa,CACvBC,OAAO,CAACC,GAAR,CAAYH,EAAZ,EACA,GAAIC,GAAG,GAAK,CAAZ,CAAe,CACb,mBACE,oBAAC,aAAD,EAAe,EAAE,IAAjB,eACE,oBAAC,UAAD,CAAY,IAAZ,aADF,CADF,CAKD,CACD,GAAIA,GAAG,GAAKJ,MAAM,CAACO,MAAP,CAAgB,CAA5B,CAA+B,CAC7B,mBACE,oBAAC,aAAD,EAAe,MAAM,KAArB,CAAsB,EAAE,YAAMV,QAAQ,CAACC,QAAf,CAAxB,eACE,oBAAC,UAAD,CAAY,IAAZ,MAAkBK,EAAlB,CADF,CADF,CAKD,CACD,mBACE,oBAAC,aAAD,EACE,EAAE,WAAKN,QAAQ,CAACC,QAAT,CACJC,KADI,CACE,GADF,EAEJS,KAFI,CAEE,CAFF,CAEKJ,GAAG,CAAG,CAFX,EAGJK,IAHI,CAGC,GAHD,CAAL,CADJ,CAKE,OAAO,KALT,eAOE,oBAAC,UAAD,CAAY,IAAZ,MAAkBN,EAAlB,CAPF,CADF,CAWD,CA3BA,CADH,CADF,CAgCD,CA5CD,CA6CA,cAAeP,CAAAA,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Redirect, useLocation } from \"react-router\";\nimport { Breadcrumb } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nconst BreadCrumbs = () => {\n  const location = useLocation();\n  const [isPath, SetPath] = useState(location.pathname.split(\"/\"));\n  useEffect(() => {\n    SetPath(location.pathname.split(\"/\"));\n  }, [location]);\n  if (location.pathname === \"/exlist/weight_lifting\") {\n    return <Redirect to={\"/exlist/weight_lifting/1\"} />;\n  }\n  if (location.pathname === \"/exlist/cardio\") {\n    return <Redirect to={\"/exlist/cardio/1\"} />;\n  }\n  return (\n    <Breadcrumb>\n      {isPath.map((el, idx) => {\n        console.log(el);\n        if (idx === 0) {\n          return (\n            <LinkContainer to={`/`}>\n              <Breadcrumb.Item>Home</Breadcrumb.Item>\n            </LinkContainer>\n          );\n        }\n        if (idx === isPath.length - 1) {\n          return (\n            <LinkContainer active to={`/${location.pathname}`}>\n              <Breadcrumb.Item>{el}</Breadcrumb.Item>\n            </LinkContainer>\n          );\n        }\n        return (\n          <LinkContainer\n            to={`${location.pathname\n              .split(\"/\")\n              .slice(0, idx + 1)\n              .join(\"/\")}`}\n            replace\n          >\n            <Breadcrumb.Item>{el}</Breadcrumb.Item>\n          </LinkContainer>\n        );\n      })}\n    </Breadcrumb>\n  );\n};\nexport default BreadCrumbs;\n"]},"metadata":{},"sourceType":"module"}