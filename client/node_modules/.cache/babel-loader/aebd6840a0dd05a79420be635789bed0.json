{"ast":null,"code":"import _slicedToArray from\"/var/www/Exercise_Logger/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{useLocation}from\"react-router\";import{Link}from\"react-router-dom\";import{Breadcrumb}from\"react-bootstrap\";import{LinkContainer}from\"react-router-bootstrap\";var BreadCrumbs=function BreadCrumbs(){var location=useLocation();var _useState=useState(location.pathname.split(\"/\")),_useState2=_slicedToArray(_useState,2),isPath=_useState2[0],SetPath=_useState2[1];useEffect(function(){if(location.state!==undefined){var newlocation=location.pathname.split(\"/\");if(location.state.logTitle!==undefined)newlocation.push(location.state.logTitle);SetPath(newlocation);}else{SetPath(location.pathname.split(\"/\"));}},[location]);return/*#__PURE__*/React.createElement(Breadcrumb,null,isPath.map(function(el,idx){if(idx===0){return/*#__PURE__*/React.createElement(Breadcrumb.Item,{href:\"/\"},\"Home\");}else if(idx===isPath.length-1){return/*#__PURE__*/React.createElement(LinkContainer,{active:true,to:\"/\".concat(location.pathname)},/*#__PURE__*/React.createElement(Breadcrumb.Item,null,el));}var copyArr=isPath.slice(0,isPath.length-1);copyArr.shift();return/*#__PURE__*/React.createElement(LinkContainer,{to:\"/\".concat(copyArr.join(\"/\"))},/*#__PURE__*/React.createElement(Breadcrumb.Item,null,el));}));};export default BreadCrumbs;","map":{"version":3,"sources":["/var/www/Exercise_Logger/client/src/components/BreadCrumbs.js"],"names":["React","useEffect","useState","useLocation","Link","Breadcrumb","LinkContainer","BreadCrumbs","location","pathname","split","isPath","SetPath","state","undefined","newlocation","logTitle","push","map","el","idx","length","copyArr","slice","shift","join"],"mappings":"sJAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,WAAT,KAA4B,cAA5B,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,UAAT,KAA2B,iBAA3B,CACA,OAASC,aAAT,KAA8B,wBAA9B,CACA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB,GAAMC,CAAAA,QAAQ,CAAGL,WAAW,EAA5B,CADwB,cAEED,QAAQ,CAACM,QAAQ,CAACC,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,CAAD,CAFV,wCAEjBC,MAFiB,eAETC,OAFS,eAGxBX,SAAS,CAAC,UAAM,CACd,GAAIO,QAAQ,CAACK,KAAT,GAAmBC,SAAvB,CAAkC,CAChC,GAAIC,CAAAA,WAAW,CAAGP,QAAQ,CAACC,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,CAAlB,CACA,GAAIF,QAAQ,CAACK,KAAT,CAAeG,QAAf,GAA4BF,SAAhC,CACEC,WAAW,CAACE,IAAZ,CAAiBT,QAAQ,CAACK,KAAT,CAAeG,QAAhC,EACFJ,OAAO,CAACG,WAAD,CAAP,CACD,CALD,IAKO,CACLH,OAAO,CAACJ,QAAQ,CAACC,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,CAAD,CAAP,CACD,CACF,CATQ,CASN,CAACF,QAAD,CATM,CAAT,CAUA,mBACE,oBAAC,UAAD,MACGG,MAAM,CAACO,GAAP,CAAW,SAACC,EAAD,CAAKC,GAAL,CAAa,CACvB,GAAIA,GAAG,GAAK,CAAZ,CAAe,CACb,mBAAO,oBAAC,UAAD,CAAY,IAAZ,EAAiB,IAAI,CAAC,GAAtB,SAAP,CACD,CAFD,IAEO,IAAIA,GAAG,GAAKT,MAAM,CAACU,MAAP,CAAgB,CAA5B,CAA+B,CACpC,mBACE,oBAAC,aAAD,EAAe,MAAM,KAArB,CAAsB,EAAE,YAAMb,QAAQ,CAACC,QAAf,CAAxB,eACE,oBAAC,UAAD,CAAY,IAAZ,MAAkBU,EAAlB,CADF,CADF,CAKD,CAED,GAAIG,CAAAA,OAAO,CAAGX,MAAM,CAACY,KAAP,CAAa,CAAb,CAAgBZ,MAAM,CAACU,MAAP,CAAgB,CAAhC,CAAd,CACAC,OAAO,CAACE,KAAR,GACA,mBACE,oBAAC,aAAD,EAAe,EAAE,YAAMF,OAAO,CAACG,IAAR,CAAa,GAAb,CAAN,CAAjB,eACE,oBAAC,UAAD,CAAY,IAAZ,MAAkBN,EAAlB,CADF,CADF,CAKD,CAlBA,CADH,CADF,CAuBD,CApCD,CAqCA,cAAeZ,CAAAA,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nconst BreadCrumbs = () => {\n  const location = useLocation();\n  const [isPath, SetPath] = useState(location.pathname.split(\"/\"));\n  useEffect(() => {\n    if (location.state !== undefined) {\n      let newlocation = location.pathname.split(\"/\");\n      if (location.state.logTitle !== undefined)\n        newlocation.push(location.state.logTitle);\n      SetPath(newlocation);\n    } else {\n      SetPath(location.pathname.split(\"/\"));\n    }\n  }, [location]);\n  return (\n    <Breadcrumb>\n      {isPath.map((el, idx) => {\n        if (idx === 0) {\n          return <Breadcrumb.Item href=\"/\">Home</Breadcrumb.Item>;\n        } else if (idx === isPath.length - 1) {\n          return (\n            <LinkContainer active to={`/${location.pathname}`}>\n              <Breadcrumb.Item>{el}</Breadcrumb.Item>\n            </LinkContainer>\n          );\n        }\n\n        let copyArr = isPath.slice(0, isPath.length - 1);\n        copyArr.shift();\n        return (\n          <LinkContainer to={`/${copyArr.join(\"/\")}`}>\n            <Breadcrumb.Item>{el}</Breadcrumb.Item>\n          </LinkContainer>\n        );\n      })}\n    </Breadcrumb>\n  );\n};\nexport default BreadCrumbs;\n"]},"metadata":{},"sourceType":"module"}