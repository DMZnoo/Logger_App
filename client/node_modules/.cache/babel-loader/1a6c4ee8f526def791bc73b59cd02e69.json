{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/WebstormProjects/Exercise_App/Exercise_Logger/client/src/components/log/ViewLogList.js\";\nimport React, { useState, useEffect, createRef } from \"react\";\nimport axios from \"axios\";\nimport { Accordion, Card } from \"react-bootstrap\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport SetNewWorkout from \"./exercises/actions/create/SetNewWorkout\";\nimport ViewWorkoutList from \"./exercises/ViewWorkoutList\";\nimport NewLogList from \"./actions/create/NewLogList\";\nimport SubmitRemoveLog from \"./actions/remove/SubmitRemoveLog\";\nimport RemoveLogList from \"./actions/remove/RemoveLogList\";\nimport { isMobile } from \"react-device-detect\";\nimport Swipe from \"react-easy-swipe\";\nimport update from \"immutability-helper\";\nimport ToggleEditLog from \"./actions/edit/ToggleEditLog\";\nimport EditLogList from \"./actions/edit/EditLogList\";\n\nconst ViewLogList = () => {\n  const {\n    user,\n    isAuthenticated\n  } = useAuth0();\n  const [isShown, SetShown] = useState([]);\n  const [isEdit, SetEdit] = useState([]);\n  const [isDisplayList, SetDisplayList] = useState([]);\n  const [isCurrID, SetCurrID] = useState([]);\n  const [isDeleteList, SetDeleteList] = useState([]);\n  const [isDelete, SetDelete] = useState(false);\n  const [isSwipedRight, SetOnSwipeRight] = useState(false);\n  useEffect(() => {\n    if (isAuthenticated) {\n      fetchData();\n    }\n  }, []);\n\n  const fetchData = (newLog = false, newWorkout = null) => {\n    if (!newLog && newWorkout === null) {\n      axios.get(`api/logs`).then(res => {\n        res.data.forEach((el, idx) => {\n          if (el.username === user.email) {\n            let currList = [];\n\n            for (let attr in el) {\n              if (el.hasOwnProperty(attr)) {\n                if (attr === \"_id\") SetCurrID(isCurrID => [...isCurrID, el[attr]]);\n                currList.push({\n                  key: attr,\n                  val: el[attr]\n                });\n              }\n            }\n\n            SetShown(isShown => [...isShown, false]);\n            SetDeleteList(isDeleteList => [...isDeleteList, createRef()]);\n            SetDisplayList(isDisplayList => [...isDisplayList, currList]);\n          }\n        });\n      });\n    } else if (newLog && newWorkout === null) {\n      axios.get(`api/logs/`).then(res => {\n        res.data.forEach((el, idx) => {\n          if (el.username === user.email) {\n            if (!isCurrID.includes(el._id)) {\n              let currList = [];\n\n              for (let attr in el) {\n                if (el.hasOwnProperty(attr)) {\n                  if (attr === \"_id\") SetCurrID(isCurrID => [...isCurrID, el[attr]]);\n                  currList.push({\n                    key: attr,\n                    val: el[attr]\n                  });\n                }\n              }\n\n              SetShown(isShown => [...isShown, false]);\n              SetEdit(isEdit => [...isEdit, false]);\n              SetDeleteList(isDeleteList => [...isDeleteList, createRef()]);\n              SetDisplayList(isDisplayList => [...isDisplayList, currList]);\n            }\n          }\n        });\n      });\n    } else {\n      axios.get(`api/logs/${newWorkout}`).then(res => {\n        console.log(res.data);\n        let newExerciseList = [];\n        newExerciseList = res.data.exercises;\n        let logLocation = isCurrID.indexOf(newWorkout);\n        console.log(logLocation);\n\n        if (!newLog) {\n          SetDisplayList(isDisplayList => [...isDisplayList.slice(0, logLocation), update(isDisplayList[logLocation], {\n            0: {\n              $set: {\n                key: \"exercises\",\n                val: newExerciseList\n              }\n            }\n          }), ...isDisplayList.slice(logLocation + 1)]);\n        } else {\n          SetDisplayList(isDisplayList => [...isDisplayList.slice(0, logLocation), update(isDisplayList[logLocation], {\n            $set: {\n              0: {\n                key: \"exercises\",\n                val: res.data.exercises\n              },\n              2: {\n                key: \"username\",\n                val: res.data.username\n              },\n              3: {\n                key: \"title\",\n                val: res.data.title\n              },\n              4: {\n                key: \"description\",\n                val: res.data.description\n              },\n              5: {\n                key: \"date\",\n                val: new Date(res.data.date)\n              }\n            }\n          }), ...isDisplayList.slice(logLocation + 1)]);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  };\n\n  const onDelete = () => {\n    SetDelete(!isDelete);\n  };\n\n  const onSwipeRight = (pos, event) => {\n    if (isDelete) {\n      console.log(`Moved to the right`, event);\n      SetOnSwipeRight(true);\n    }\n  };\n\n  const onSwipeEnd = event => {\n    if (isSwipedRight) {\n      handleDelete(Number(event.target.id.replace(/log-title-/g, \"\")));\n    }\n  };\n\n  const handleDelete = index => {\n    isDeleteList[index].current.classList.add(\"animate__animated\", \"animate__fadeOutRight\");\n    isDeleteList[index].current.addEventListener(\"animationend\", () => {\n      axios.delete(`api/logs/${isCurrID[index]}`).then(res => {\n        console.log(res.data);\n      }).catch(err => {\n        console.log(err);\n      });\n      SetCurrID(isCurrID => [...isCurrID.slice(0, index), null, ...isCurrID.slice(index + 1)]);\n      SetDisplayList(isDisplayList => [...isDisplayList.slice(0, index), null, ...isDisplayList.slice(index + 1)]);\n      SetDeleteList(isDeleteList => [...isDeleteList.slice(0, index), null, ...isDeleteList.slice(index + 1)]);\n    });\n    SetOnSwipeRight(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, isDisplayList.map((el, index) => {\n    if (el === null) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null);\n    }\n\n    return /*#__PURE__*/React.createElement(Swipe, {\n      onSwipeRight: onSwipeRight,\n      onSwipeEnd: onSwipeEnd,\n      allowMouseEvents: true,\n      key: \"log-disp\" + index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Accordion, {\n      className: \"p-2\",\n      ref: isDeleteList[index],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(RemoveLogList, {\n      isDeleteList: isDelete,\n      index: index,\n      deleteData: handleDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 25\n      }\n    })), Object.entries(el).map(log => {\n      if (log[1].key === \"title\") {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n          as: Card.Header,\n          eventKey: \"0\",\n          id: \"log-title-\" + `${index}`,\n          style: {\n            transition: \"1s\",\n            paddingLeft: !isDelete ? \"1vw\" : isMobile ? \"13vw\" : \"6vw\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 31\n          }\n        }, isEdit[index] ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"ml-3 d-flex\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(\"h5\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 37\n          }\n        }, \"Log Title: \"), /*#__PURE__*/React.createElement(\"input\", {\n          id: \"edit-log-title-\" + `${index}`,\n          className: \"ml-2\",\n          size: 10,\n          placeholder: log[1].val,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 37\n          }\n        })) : /*#__PURE__*/React.createElement(\"div\", {\n          className: isMobile ? \"p-2\" : \"ml-3 d-flex\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(\"h5\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 37\n          }\n        }, log[1].val))));\n      } else if (log[1].key === \"description\") {\n        return /*#__PURE__*/React.createElement(Accordion.Collapse, {\n          eventKey: \"0\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Card.Body, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"p-2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 33\n          }\n        }, isEdit[index] ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"container\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"h5\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 39\n          }\n        }, \"Log Description: \"), /*#__PURE__*/React.createElement(\"hr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 39\n          }\n        }), /*#__PURE__*/React.createElement(\"textarea\", {\n          id: `edit-log-desc-${index}`,\n          cols: 20,\n          rows: 2,\n          placeholder: log[1].key === \"description\" && log[1].val,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 39\n          }\n        })) : /*#__PURE__*/React.createElement(\"p\", {\n          id: `log-desc-${index}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 37\n          }\n        }, log[1].key === \"description\" && log[1].val)), /*#__PURE__*/React.createElement(\"hr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(React.Fragment, null, isEdit[index] ? /*#__PURE__*/React.createElement(EditLogList, {\n          el: el,\n          index: index,\n          isCurrID: isCurrID,\n          isEdit: isEdit,\n          SetEdit: SetEdit,\n          updateData: fetchData,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 37\n          }\n        }) : /*#__PURE__*/React.createElement(ViewWorkoutList, {\n          el: el,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 37\n          }\n        })), /*#__PURE__*/React.createElement(\"hr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(SetNewWorkout, {\n          index: index,\n          isShown: isShown,\n          SetShown: SetShown,\n          isCurrID: isCurrID,\n          updateData: fetchData,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(ToggleEditLog, {\n          isEdit: isEdit,\n          SetEdit: SetEdit,\n          index: index,\n          isCurrID: isCurrID,\n          SetDisplayList: SetDisplayList,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 33\n          }\n        })));\n      }\n    }))), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }\n    }, Object.entries(el).map(log => {\n      if (log[1].key === \"date\") {\n        let date = new Date(log[1].val);\n        return date.toDateString();\n      }\n    }))));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-inline-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NewLogList, {\n    updateData: fetchData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(SubmitRemoveLog, {\n    isDelete: isDelete,\n    onDelete: onDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default ViewLogList;","map":{"version":3,"sources":["/Users/daniel/WebstormProjects/Exercise_App/Exercise_Logger/client/src/components/log/ViewLogList.js"],"names":["React","useState","useEffect","createRef","axios","Accordion","Card","useAuth0","SetNewWorkout","ViewWorkoutList","NewLogList","SubmitRemoveLog","RemoveLogList","isMobile","Swipe","update","ToggleEditLog","EditLogList","ViewLogList","user","isAuthenticated","isShown","SetShown","isEdit","SetEdit","isDisplayList","SetDisplayList","isCurrID","SetCurrID","isDeleteList","SetDeleteList","isDelete","SetDelete","isSwipedRight","SetOnSwipeRight","fetchData","newLog","newWorkout","get","then","res","data","forEach","el","idx","username","email","currList","attr","hasOwnProperty","push","key","val","includes","_id","console","log","newExerciseList","exercises","logLocation","indexOf","slice","$set","title","description","Date","date","catch","err","onDelete","onSwipeRight","pos","event","onSwipeEnd","handleDelete","Number","target","id","replace","index","current","classList","add","addEventListener","delete","map","Object","entries","Header","transition","paddingLeft","toDateString"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, createRef } from \"react\";\nimport axios from \"axios\";\nimport { Accordion, Card } from \"react-bootstrap\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport SetNewWorkout from \"./exercises/actions/create/SetNewWorkout\";\nimport ViewWorkoutList from \"./exercises/ViewWorkoutList\";\nimport NewLogList from \"./actions/create/NewLogList\";\nimport SubmitRemoveLog from \"./actions/remove/SubmitRemoveLog\";\nimport RemoveLogList from \"./actions/remove/RemoveLogList\";\nimport { isMobile } from \"react-device-detect\";\nimport Swipe from \"react-easy-swipe\";\nimport update from \"immutability-helper\";\nimport ToggleEditLog from \"./actions/edit/ToggleEditLog\";\nimport EditLogList from \"./actions/edit/EditLogList\";\n\nconst ViewLogList = () => {\n  const { user, isAuthenticated } = useAuth0();\n  const [isShown, SetShown] = useState([]);\n  const [isEdit, SetEdit] = useState([]);\n  const [isDisplayList, SetDisplayList] = useState([]);\n  const [isCurrID, SetCurrID] = useState([]);\n  const [isDeleteList, SetDeleteList] = useState([]);\n  const [isDelete, SetDelete] = useState(false);\n  const [isSwipedRight, SetOnSwipeRight] = useState(false);\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      fetchData();\n    }\n  }, []);\n\n  const fetchData = (newLog = false, newWorkout = null) => {\n    if (!newLog && newWorkout === null) {\n      axios.get(`api/logs`).then((res) => {\n        res.data.forEach((el, idx) => {\n          if (el.username === user.email) {\n            let currList = [];\n            for (let attr in el) {\n              if (el.hasOwnProperty(attr)) {\n                if (attr === \"_id\")\n                  SetCurrID((isCurrID) => [...isCurrID, el[attr]]);\n                currList.push({ key: attr, val: el[attr] });\n              }\n            }\n            SetShown((isShown) => [...isShown, false]);\n            SetDeleteList((isDeleteList) => [...isDeleteList, createRef()]);\n            SetDisplayList((isDisplayList) => [...isDisplayList, currList]);\n          }\n        });\n      });\n    } else if (newLog && newWorkout === null) {\n      axios.get(`api/logs/`).then((res) => {\n        res.data.forEach((el, idx) => {\n          if (el.username === user.email) {\n            if (!isCurrID.includes(el._id)) {\n              let currList = [];\n              for (let attr in el) {\n                if (el.hasOwnProperty(attr)) {\n                  if (attr === \"_id\")\n                    SetCurrID((isCurrID) => [...isCurrID, el[attr]]);\n                  currList.push({ key: attr, val: el[attr] });\n                }\n              }\n              SetShown((isShown) => [...isShown, false]);\n              SetEdit((isEdit) => [...isEdit, false]);\n\n              SetDeleteList((isDeleteList) => [...isDeleteList, createRef()]);\n              SetDisplayList((isDisplayList) => [...isDisplayList, currList]);\n            }\n          }\n        });\n      });\n    } else {\n      axios\n        .get(`api/logs/${newWorkout}`)\n        .then((res) => {\n          console.log(res.data);\n          let newExerciseList = [];\n          newExerciseList = res.data.exercises;\n\n          let logLocation = isCurrID.indexOf(newWorkout);\n          console.log(logLocation);\n          if (!newLog) {\n            SetDisplayList((isDisplayList) => [\n              ...isDisplayList.slice(0, logLocation),\n              update(isDisplayList[logLocation], {\n                0: { $set: { key: \"exercises\", val: newExerciseList } },\n              }),\n              ...isDisplayList.slice(logLocation + 1),\n            ]);\n          } else {\n            SetDisplayList((isDisplayList) => [\n              ...isDisplayList.slice(0, logLocation),\n              update(isDisplayList[logLocation], {\n                $set: {\n                  0: { key: \"exercises\", val: res.data.exercises },\n                  2: { key: \"username\", val: res.data.username },\n                  3: { key: \"title\", val: res.data.title },\n                  4: { key: \"description\", val: res.data.description },\n                  5: { key: \"date\", val: new Date(res.data.date) },\n                },\n              }),\n              ...isDisplayList.slice(logLocation + 1),\n            ]);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  const onDelete = () => {\n    SetDelete(!isDelete);\n  };\n\n  const onSwipeRight = (pos, event) => {\n    if (isDelete) {\n      console.log(`Moved to the right`, event);\n      SetOnSwipeRight(true);\n    }\n  };\n  const onSwipeEnd = (event) => {\n    if (isSwipedRight) {\n      handleDelete(Number(event.target.id.replace(/log-title-/g, \"\")));\n    }\n  };\n\n  const handleDelete = (index) => {\n    isDeleteList[index].current.classList.add(\n      \"animate__animated\",\n      \"animate__fadeOutRight\"\n    );\n    isDeleteList[index].current.addEventListener(\"animationend\", () => {\n      axios\n        .delete(`api/logs/${isCurrID[index]}`)\n        .then((res) => {\n          console.log(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n      SetCurrID((isCurrID) => [\n        ...isCurrID.slice(0, index),\n        null,\n        ...isCurrID.slice(index + 1),\n      ]);\n      SetDisplayList((isDisplayList) => [\n        ...isDisplayList.slice(0, index),\n        null,\n        ...isDisplayList.slice(index + 1),\n      ]);\n      SetDeleteList((isDeleteList) => [\n        ...isDeleteList.slice(0, index),\n        null,\n        ...isDeleteList.slice(index + 1),\n      ]);\n    });\n    SetOnSwipeRight(false);\n  };\n\n  return (\n    <>\n      <div>\n        {isDisplayList.map((el, index) => {\n          if (el === null) {\n            return <></>;\n          }\n          return (\n            <Swipe\n              onSwipeRight={onSwipeRight}\n              onSwipeEnd={onSwipeEnd}\n              allowMouseEvents={true}\n              key={\"log-disp\" + index}\n            >\n              <Accordion className={\"p-2\"} ref={isDeleteList[index]}>\n                <Card>\n                  {\n                    <>\n                      <>\n                        <RemoveLogList\n                          isDeleteList={isDelete}\n                          index={index}\n                          deleteData={handleDelete}\n                        />\n                      </>\n                      {Object.entries(el).map((log) => {\n                        if (log[1].key === \"title\") {\n                          return (\n                            <>\n                              <Accordion.Toggle\n                                as={Card.Header}\n                                eventKey=\"0\"\n                                id={\"log-title-\" + `${index}`}\n                                style={{\n                                  transition: \"1s\",\n                                  paddingLeft: !isDelete\n                                    ? \"1vw\"\n                                    : isMobile\n                                    ? \"13vw\"\n                                    : \"6vw\",\n                                }}\n                              >\n                                {isEdit[index] ? (\n                                  <div className={\"ml-3 d-flex\"}>\n                                    <h5>Log Title: </h5>\n                                    <input\n                                      id={\"edit-log-title-\" + `${index}`}\n                                      className={\"ml-2\"}\n                                      size={10}\n                                      placeholder={log[1].val}\n                                    />\n                                  </div>\n                                ) : (\n                                  <div\n                                    className={isMobile ? \"p-2\" : \"ml-3 d-flex\"}\n                                  >\n                                    <h5>{log[1].val}</h5>\n                                  </div>\n                                )}\n                              </Accordion.Toggle>\n                            </>\n                          );\n                        } else if (log[1].key === \"description\") {\n                          return (\n                            <Accordion.Collapse eventKey=\"0\">\n                              <Card.Body>\n                                <div className={\"p-2\"}>\n                                  {isEdit[index] ? (\n                                    <div className={\"container\"}>\n                                      <h5>Log Description: </h5>\n                                      <hr />\n                                      <textarea\n                                        id={`edit-log-desc-${index}`}\n                                        cols={20}\n                                        rows={2}\n                                        placeholder={\n                                          log[1].key === \"description\" &&\n                                          log[1].val\n                                        }\n                                      />\n                                    </div>\n                                  ) : (\n                                    <p id={`log-desc-${index}`}>\n                                      {log[1].key === \"description\" &&\n                                        log[1].val}\n                                    </p>\n                                  )}\n                                </div>\n                                <hr />\n                                <>\n                                  {isEdit[index] ? (\n                                    <EditLogList\n                                      el={el}\n                                      index={index}\n                                      isCurrID={isCurrID}\n                                      isEdit={isEdit}\n                                      SetEdit={SetEdit}\n                                      updateData={fetchData}\n                                    />\n                                  ) : (\n                                    <ViewWorkoutList el={el} />\n                                  )}\n                                </>\n                                <hr />\n                                <SetNewWorkout\n                                  index={index}\n                                  isShown={isShown}\n                                  SetShown={SetShown}\n                                  isCurrID={isCurrID}\n                                  updateData={fetchData}\n                                />\n                                <ToggleEditLog\n                                  isEdit={isEdit}\n                                  SetEdit={SetEdit}\n                                  index={index}\n                                  isCurrID={isCurrID}\n                                  SetDisplayList={SetDisplayList}\n                                />\n                              </Card.Body>\n                            </Accordion.Collapse>\n                          );\n                        }\n                      })}\n                    </>\n                  }\n                </Card>\n\n                <Card>\n                  {Object.entries(el).map((log) => {\n                    if (log[1].key === \"date\") {\n                      let date = new Date(log[1].val);\n                      return date.toDateString();\n                    }\n                  })}\n                </Card>\n              </Accordion>\n            </Swipe>\n          );\n        })}\n      </div>\n      <div className={\"d-inline-start\"}>\n        <NewLogList updateData={fetchData} />\n        <SubmitRemoveLog isDelete={isDelete} onDelete={onDelete} />\n      </div>\n    </>\n  );\n};\nexport default ViewLogList;\n"]},"metadata":{},"sourceType":"module"}