{"ast":null,"code":"import _defineProperty from\"/var/www/Exercise_Logger/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import React from\"react\";import{isMobile}from\"react-device-detect\";import update from\"immutability-helper\";var EditWorkout=function EditWorkout(_ref){var isEditList=_ref.isEditList,SetEditList=_ref.SetEditList,ex=_ref.ex,li=_ref.li;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex d-inline-flex\",style:{overflowX:\"scroll\"}},/*#__PURE__*/React.createElement(\"h5\",null,\"Name: \")),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex d-inline-flex\"},/*#__PURE__*/React.createElement(\"input\",{id:li,type:\"text\",size:isMobile?20:30,placeholder:ex.name,onChange:function onChange(e){var index=Number(e.target.id);var val=e.target.value;SetEditList(function(isEditList){return update(isEditList,{0:{val:_defineProperty({},index,{name:{$set:val}})}});});}})),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex d-inline-flex\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Description:\"),/*#__PURE__*/React.createElement(\"br\",null)),/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex d-inline-flex\",style:{overflowX:\"scroll\"}},/*#__PURE__*/React.createElement(\"textarea\",{id:li,className:\"mb-2\",placeholder:ex.description,cols:isMobile?25:50,rows:10,onChange:function onChange(e){var index=Number(e.target.id);var val=e.target.value;SetEditList(function(isEditList){return update(isEditList,{0:{val:_defineProperty({},index,{description:{$set:val}})}});});}})));};export default EditWorkout;","map":{"version":3,"sources":["/var/www/Exercise_Logger/client/src/components/log/exercises/actions/edit/EditWorkout.js"],"names":["React","isMobile","update","EditWorkout","isEditList","SetEditList","ex","li","overflowX","name","e","index","Number","target","id","val","value","$set","description"],"mappings":"wJAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,qBAAzB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAAyC,IAAtCC,CAAAA,UAAsC,MAAtCA,UAAsC,CAA1BC,WAA0B,MAA1BA,WAA0B,CAAbC,EAAa,MAAbA,EAAa,CAATC,EAAS,MAATA,EAAS,CAC3D,mBACE,qDACE,2BAAK,SAAS,CAAE,sBAAhB,CAAwC,KAAK,CAAE,CAAEC,SAAS,CAAE,QAAb,CAA/C,eACE,uCADF,CADF,cAIE,8BAJF,cAKE,2BAAK,SAAS,CAAE,sBAAhB,eACE,6BACE,EAAE,CAAED,EADN,CAEE,IAAI,CAAC,MAFP,CAGE,IAAI,CAAEN,QAAQ,CAAG,EAAH,CAAQ,EAHxB,CAIE,WAAW,CAAEK,EAAE,CAACG,IAJlB,CAKE,QAAQ,CAAE,kBAACC,CAAD,CAAO,CACf,GAAMC,CAAAA,KAAK,CAAGC,MAAM,CAACF,CAAC,CAACG,MAAF,CAASC,EAAV,CAApB,CACA,GAAMC,CAAAA,GAAG,CAAGL,CAAC,CAACG,MAAF,CAASG,KAArB,CACAX,WAAW,CAAC,SAACD,UAAD,QACVF,CAAAA,MAAM,CAACE,UAAD,CAAa,CACjB,EAAG,CACDW,GAAG,oBACAJ,KADA,CACQ,CAAEF,IAAI,CAAE,CAAEQ,IAAI,CAAEF,GAAR,CAAR,CADR,CADF,CADc,CAAb,CADI,EAAD,CAAX,CASD,CAjBH,EADF,CALF,cA0BE,8BA1BF,cA2BE,2BAAK,SAAS,CAAE,sBAAhB,eACE,6CADF,cAEE,8BAFF,CA3BF,cA+BE,2BAAK,SAAS,CAAE,sBAAhB,CAAwC,KAAK,CAAE,CAAEP,SAAS,CAAE,QAAb,CAA/C,eACE,gCACE,EAAE,CAAED,EADN,CAEE,SAAS,CAAE,MAFb,CAGE,WAAW,CAAED,EAAE,CAACY,WAHlB,CAIE,IAAI,CAAEjB,QAAQ,CAAG,EAAH,CAAQ,EAJxB,CAKE,IAAI,CAAE,EALR,CAME,QAAQ,CAAE,kBAACS,CAAD,CAAO,CACf,GAAMC,CAAAA,KAAK,CAAGC,MAAM,CAACF,CAAC,CAACG,MAAF,CAASC,EAAV,CAApB,CACA,GAAIC,CAAAA,GAAG,CAAGL,CAAC,CAACG,MAAF,CAASG,KAAnB,CACAX,WAAW,CAAC,SAACD,UAAD,QACVF,CAAAA,MAAM,CAACE,UAAD,CAAa,CACjB,EAAG,CACDW,GAAG,oBACAJ,KADA,CACQ,CACPO,WAAW,CAAE,CAAED,IAAI,CAAEF,GAAR,CADN,CADR,CADF,CADc,CAAb,CADI,EAAD,CAAX,CAWD,CApBH,EADF,CA/BF,CADF,CA0DD,CA3DD,CA4DA,cAAeZ,CAAAA,WAAf","sourcesContent":["import React from \"react\";\nimport { isMobile } from \"react-device-detect\";\nimport update from \"immutability-helper\";\nconst EditWorkout = ({ isEditList, SetEditList, ex, li }) => {\n  return (\n    <>\n      <div className={\"d-flex d-inline-flex\"} style={{ overflowX: \"scroll\" }}>\n        <h5>Name: </h5>\n      </div>\n      <br />\n      <div className={\"d-flex d-inline-flex\"}>\n        <input\n          id={li}\n          type=\"text\"\n          size={isMobile ? 20 : 30}\n          placeholder={ex.name}\n          onChange={(e) => {\n            const index = Number(e.target.id);\n            const val = e.target.value;\n            SetEditList((isEditList) =>\n              update(isEditList, {\n                0: {\n                  val: {\n                    [index]: { name: { $set: val } },\n                  },\n                },\n              })\n            );\n          }}\n        />\n      </div>\n      <hr />\n      <div className={\"d-flex d-inline-flex\"}>\n        <h5>Description:</h5>\n        <br />\n      </div>\n      <div className={\"d-flex d-inline-flex\"} style={{ overflowX: \"scroll\" }}>\n        <textarea\n          id={li}\n          className={\"mb-2\"}\n          placeholder={ex.description}\n          cols={isMobile ? 25 : 50}\n          rows={10}\n          onChange={(e) => {\n            const index = Number(e.target.id);\n            let val = e.target.value;\n            SetEditList((isEditList) =>\n              update(isEditList, {\n                0: {\n                  val: {\n                    [index]: {\n                      description: { $set: val },\n                    },\n                  },\n                },\n              })\n            );\n          }}\n        />\n      </div>\n    </>\n  );\n};\nexport default EditWorkout;\n"]},"metadata":{},"sourceType":"module"}