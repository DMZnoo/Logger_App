{"ast":null,"code":"import _toConsumableArray from\"/var/www/Exercise_Logger/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/var/www/Exercise_Logger/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{BrowserView,MobileView}from\"react-device-detect\";import EditableTable from\"../../../../partials/EditableTable\";import SubmitWorkout from\"./SubmitWorkout\";import{Modal}from\"react-bootstrap\";import{FcPlus}from\"react-icons/fc\";import axios from\"axios\";var SetNewWorkout=function SetNewWorkout(_ref){var logIndex=_ref.logIndex,isShown=_ref.isShown,SetShown=_ref.SetShown,isCurrID=_ref.isCurrID,SetNewExercise=_ref.SetNewExercise;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),isWorkoutDesc=_useState2[0],SetWorkoutDesc=_useState2[1];var submitNewWorkout=function submitNewWorkout(e,idx){var exerciseName=document.querySelector(\"#new-workout-name-\".concat(idx)).value;var exerciseDesc=document.querySelector(\"#new-workout-desc-\".concat(idx)).value;if(exerciseName===null||exerciseName===\"\"){alert(\"Please provide the name\");return;}axios.post(\"api/logs/add/\".concat(isCurrID[idx]),{name:exerciseName,description:exerciseDesc,set:isWorkoutDesc[idx].set,reps:isWorkoutDesc[idx].reps,weight:isWorkoutDesc[idx].weight}).then(function(response){SetNewExercise(response.data,idx);toggleNewWorkout(e,idx);}).catch(function(err){console.log(err);});};var SetExerciseDescription=function SetExerciseDescription(state,idx){SetWorkoutDesc(function(isWorkoutDesc){return[].concat(_toConsumableArray(isWorkoutDesc.slice(0,idx)),[state],_toConsumableArray(isWorkoutDesc.slice(idx+1)));});};var toggleNewWorkout=function toggleNewWorkout(e,index){e.preventDefault();SetShown(function(isShown){return[].concat(_toConsumableArray(isShown.slice(0,index)),[!isShown[index]],_toConsumableArray(isShown.slice(index+1)));});};return/*#__PURE__*/React.createElement(React.Fragment,null,isShown[logIndex]&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(BrowserView,null,/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{for:\"new-workout-name-\".concat(logIndex),className:\"bmd-label-floating\"},\"Name:\"),/*#__PURE__*/React.createElement(\"input\",{size:25,className:\"form-control\",id:\"new-workout-name-\".concat(logIndex)})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{for:\"new-workout-desc-\".concat(logIndex),className:\"bmd-label-floating\"},\"Description:\",\" \"),\" \",/*#__PURE__*/React.createElement(\"textarea\",{className:\"form-control\",rows:5,id:\"new-workout-desc-\".concat(logIndex)})),/*#__PURE__*/React.createElement(\"div\",{className:\"container\",style:{overflowX:\"auto\"}},/*#__PURE__*/React.createElement(EditableTable,{index:logIndex,thead:[\"Set\",\"Reps\",\"Weight\"],SetData:SetExerciseDescription,style:{color:\"black\",width:\"100%\"},dataAvailable:[[1],[5],[5]]}),/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex d-inline-flex\",style:{float:\"right\"}},/*#__PURE__*/React.createElement(SubmitWorkout,{submitNewWorkout:submitNewWorkout,cancelNewWorkout:toggleNewWorkout,index:logIndex})))),/*#__PURE__*/React.createElement(MobileView,null,/*#__PURE__*/React.createElement(\"div\",{className:\"container\",style:{overflowX:\"scroll\"}},/*#__PURE__*/React.createElement(Modal,{show:isShown[logIndex]},/*#__PURE__*/React.createElement(Modal.Header,{closeButton:true},/*#__PURE__*/React.createElement(Modal.Title,null,\"Add new workout\")),/*#__PURE__*/React.createElement(Modal.Body,{className:\"container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"new-workout-name-\".concat(logIndex),className:\"bmd-label-floating\"},\"Name:\"),/*#__PURE__*/React.createElement(\"input\",{size:25,className:\"form-control\",id:\"new-workout-name-\".concat(logIndex)})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"new-workout-desc-\".concat(logIndex),className:\"bmd-label-floating\"},\"Description:\",\" \"),\" \",/*#__PURE__*/React.createElement(\"textarea\",{className:\"form-control\",rows:5,id:\"new-workout-desc-\".concat(logIndex)})),/*#__PURE__*/React.createElement(EditableTable,{index:logIndex,thead:[\"Set\",\"Reps\",\"Weight\"],SetData:SetExerciseDescription,style:{color:\"black\",width:\"100%\"},dataAvailable:[[1],[5],[5]]})),/*#__PURE__*/React.createElement(Modal.Footer,null,/*#__PURE__*/React.createElement(SubmitWorkout,{submitNewWorkout:submitNewWorkout,cancelNewWorkout:toggleNewWorkout,index:logIndex})))))),/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex d-inline-flex\",style:{textAlign:\"center\"}},/*#__PURE__*/React.createElement(\"button\",{id:logIndex,style:{borderRadius:\"10vw\",background:\"none\",borderStyle:\"hidden\"},onClick:function onClick(e){e.preventDefault();SetShown(function(isShown){return[].concat(_toConsumableArray(isShown.slice(0,logIndex)),[!isShown[logIndex]],_toConsumableArray(isShown.slice(logIndex+1)));});}},/*#__PURE__*/React.createElement(FcPlus,{size:\"2em\"}),/*#__PURE__*/React.createElement(\"span\",{className:\"p-2 font-weight-bold\",style:{color:\"black\"}},\"Add New Exercise\")),/*#__PURE__*/React.createElement(\"br\",null)));};export default SetNewWorkout;","map":{"version":3,"sources":["/var/www/Exercise_Logger/client/src/components/log/exercises/actions/create/SetNewWorkout.js"],"names":["React","useState","BrowserView","MobileView","EditableTable","SubmitWorkout","Modal","FcPlus","axios","SetNewWorkout","logIndex","isShown","SetShown","isCurrID","SetNewExercise","isWorkoutDesc","SetWorkoutDesc","submitNewWorkout","e","idx","exerciseName","document","querySelector","value","exerciseDesc","alert","post","name","description","set","reps","weight","then","response","data","toggleNewWorkout","catch","err","console","log","SetExerciseDescription","state","slice","index","preventDefault","overflowX","color","width","float","textAlign","borderRadius","background","borderStyle"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { BrowserView, MobileView } from \"react-device-detect\";\nimport EditableTable from \"../../../../partials/EditableTable\";\nimport SubmitWorkout from \"./SubmitWorkout\";\nimport { Modal } from \"react-bootstrap\";\nimport { FcPlus } from \"react-icons/fc\";\nimport axios from \"axios\";\n\nconst SetNewWorkout = ({\n  logIndex,\n  isShown,\n  SetShown,\n  isCurrID,\n  SetNewExercise,\n}) => {\n  const [isWorkoutDesc, SetWorkoutDesc] = useState([]);\n  const submitNewWorkout = (e, idx) => {\n    let exerciseName = document.querySelector(`#new-workout-name-${idx}`).value;\n    let exerciseDesc = document.querySelector(`#new-workout-desc-${idx}`).value;\n    if (exerciseName === null || exerciseName === \"\") {\n      alert(\"Please provide the name\");\n      return;\n    }\n    axios\n      .post(`api/logs/add/${isCurrID[idx]}`, {\n        name: exerciseName,\n        description: exerciseDesc,\n        set: isWorkoutDesc[idx].set,\n        reps: isWorkoutDesc[idx].reps,\n        weight: isWorkoutDesc[idx].weight,\n      })\n      .then((response) => {\n        SetNewExercise(response.data, idx);\n        toggleNewWorkout(e, idx);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const SetExerciseDescription = (state, idx) => {\n    SetWorkoutDesc((isWorkoutDesc) => [\n      ...isWorkoutDesc.slice(0, idx),\n      state,\n      ...isWorkoutDesc.slice(idx + 1),\n    ]);\n  };\n  const toggleNewWorkout = (e, index) => {\n    e.preventDefault();\n    SetShown((isShown) => [\n      ...isShown.slice(0, index),\n      !isShown[index],\n      ...isShown.slice(index + 1),\n    ]);\n  };\n  return (\n    <>\n      {isShown[logIndex] && (\n        <>\n          <BrowserView>\n            <div className={\"form-group\"}>\n              <label\n                for={`new-workout-name-${logIndex}`}\n                className={\"bmd-label-floating\"}\n              >\n                Name:\n              </label>\n              <input\n                size={25}\n                className={\"form-control\"}\n                id={`new-workout-name-${logIndex}`}\n              />\n            </div>\n            <div className={\"form-group\"}>\n              <label\n                for={`new-workout-desc-${logIndex}`}\n                className={\"bmd-label-floating\"}\n              >\n                Description:{\" \"}\n              </label>{\" \"}\n              <textarea\n                className={\"form-control\"}\n                rows={5}\n                id={`new-workout-desc-${logIndex}`}\n              />\n            </div>\n            <div className={\"container\"} style={{ overflowX: \"auto\" }}>\n              <EditableTable\n                index={logIndex}\n                thead={[\"Set\", \"Reps\", \"Weight\"]}\n                SetData={SetExerciseDescription}\n                style={{\n                  color: \"black\",\n                  width: \"100%\",\n                }}\n                dataAvailable={[[1], [5], [5]]}\n              />\n              <div\n                className={\"d-flex d-inline-flex\"}\n                style={{ float: \"right\" }}\n              >\n                <SubmitWorkout\n                  submitNewWorkout={submitNewWorkout}\n                  cancelNewWorkout={toggleNewWorkout}\n                  index={logIndex}\n                />\n              </div>\n            </div>\n          </BrowserView>\n          <MobileView>\n            <div className={\"container\"} style={{ overflowX: \"scroll\" }}>\n              <Modal show={isShown[logIndex]}>\n                <Modal.Header closeButton>\n                  <Modal.Title>Add new workout</Modal.Title>\n                </Modal.Header>\n                <Modal.Body className={\"container\"}>\n                  <div className={\"form-group\"}>\n                    <label\n                      htmlFor={`new-workout-name-${logIndex}`}\n                      className={\"bmd-label-floating\"}\n                    >\n                      Name:\n                    </label>\n                    <input\n                      size={25}\n                      className={\"form-control\"}\n                      id={`new-workout-name-${logIndex}`}\n                    />\n                  </div>\n                  <div className={\"form-group\"}>\n                    <label\n                      htmlFor={`new-workout-desc-${logIndex}`}\n                      className={\"bmd-label-floating\"}\n                    >\n                      Description:{\" \"}\n                    </label>{\" \"}\n                    <textarea\n                      className={\"form-control\"}\n                      rows={5}\n                      id={`new-workout-desc-${logIndex}`}\n                    />\n                  </div>\n                  <EditableTable\n                    index={logIndex}\n                    thead={[\"Set\", \"Reps\", \"Weight\"]}\n                    SetData={SetExerciseDescription}\n                    style={{\n                      color: \"black\",\n                      width: \"100%\",\n                    }}\n                    dataAvailable={[[1], [5], [5]]}\n                  />\n                </Modal.Body>\n                <Modal.Footer>\n                  <SubmitWorkout\n                    submitNewWorkout={submitNewWorkout}\n                    cancelNewWorkout={toggleNewWorkout}\n                    index={logIndex}\n                  />\n                </Modal.Footer>\n              </Modal>\n            </div>\n          </MobileView>\n        </>\n      )}\n      <div className={\"d-flex d-inline-flex\"} style={{ textAlign: \"center\" }}>\n        <button\n          id={logIndex}\n          style={{\n            borderRadius: \"10vw\",\n            background: \"none\",\n            borderStyle: \"hidden\",\n          }}\n          onClick={(e) => {\n            e.preventDefault();\n            SetShown((isShown) => [\n              ...isShown.slice(0, logIndex),\n              !isShown[logIndex],\n              ...isShown.slice(logIndex + 1),\n            ]);\n          }}\n        >\n          <FcPlus size={\"2em\"} />\n          <span className=\"p-2 font-weight-bold\" style={{ color: \"black\" }}>\n            Add New Exercise\n          </span>\n        </button>\n        <br />\n      </div>\n    </>\n  );\n};\nexport default SetNewWorkout;\n"]},"metadata":{},"sourceType":"module"}