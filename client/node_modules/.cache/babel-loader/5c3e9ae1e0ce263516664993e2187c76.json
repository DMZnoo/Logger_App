{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/WebstormProjects/Exercise_App/Exercise_Logger/client/src/components/exercise/ExerciseResults.js\";\nimport React, { useState } from \"react\";\nimport { OverlayTrigger, Tooltip, Collapse, Pagination, Card } from \"react-bootstrap\";\nimport PaginateResult from \"./PaginateResult\";\n\nconst data = require(\"../data/exerciseListData.json\");\n\nconst ExerciseResults = () => {\n  const [isOpen, setOpen] = useState(0);\n  const processedData = data.map((el, index) => {\n    return /*#__PURE__*/React.createElement(Card, {\n      key: el.Exercise,\n      onClick: () => {\n        setOpen(index);\n      },\n      \"aria-controls\": \"collapse-text\",\n      \"aria-expanded\": isOpen,\n      style: {\n        background: `#24154a`,\n        backgroundSize: \"cover\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }, el.Exercise), /*#__PURE__*/React.createElement(Collapse, {\n      key: index,\n      in: isOpen === index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"collapse-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      style: {\n        listStyleType: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, \"Muscle Group: \", el[\"Muscle Group\"]), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, \"Level: \", el.Level), /*#__PURE__*/React.createElement(OverlayTrigger, {\n      placement: \"right\",\n      delay: {\n        show: 250,\n        hide: 400\n      },\n      overlay: /*#__PURE__*/React.createElement(Tooltip, {\n        id: \"button-tooltip\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        style: {\n          fontSize: \"0.8em\",\n          paddingLeft: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }\n      }, \"U\\u2013Upper Body\"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }\n      }, \"L\\u2013Lower Body\"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }\n      }, \"C\\u2013Core\"))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, ({\n      ref,\n      ...triggerHandler\n    }) => /*#__PURE__*/React.createElement(\"li\", Object.assign({}, triggerHandler, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      ref: ref,\n      style: {\n        paddingRight: \"2rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 23\n      }\n    }, \"U/L/C: \", el[\"U/L/C\"]))), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, \"Push/Pull: \", el[\"P / P\"]), /*#__PURE__*/React.createElement(OverlayTrigger, {\n      placement: \"right\",\n      delay: {\n        show: 250,\n        hide: 400\n      },\n      overlay: /*#__PURE__*/React.createElement(Tooltip, {\n        id: \"button-tooltip\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        style: {\n          fontSize: \"0.8em\",\n          paddingLeft: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }\n      }, \"FW\\u2013Free Weights\"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }\n      }, \"C\\u2013Cables\"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }\n      }, \"M\\u2013Machine\"))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, ({\n      ref,\n      ...triggerHandler\n    }) => /*#__PURE__*/React.createElement(\"li\", Object.assign({}, triggerHandler, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      ref: ref,\n      style: {\n        paddingRight: \"2rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 23\n      }\n    }, \"Modality: \", el.Modality))), /*#__PURE__*/React.createElement(OverlayTrigger, {\n      placement: \"right\",\n      delay: {\n        show: 250,\n        hide: 400\n      },\n      overlay: /*#__PURE__*/React.createElement(Tooltip, {\n        id: \"button-tooltip\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        style: {\n          fontSize: \"0.8em\",\n          paddingLeft: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }\n      }, \"M\\u2013Multi-Joint Exercise\"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }\n      }, \"S\\u2013Single-Joint Exercise\"))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, ({\n      ref,\n      ...triggerHandler\n    }) => /*#__PURE__*/React.createElement(\"li\", Object.assign({}, triggerHandler, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      ref: ref,\n      style: {\n        paddingRight: \"2rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 23\n      }\n    }, \"Joint: \", el.Joint))))))));\n  });\n  const [isDisplayData, SetDisplayData] = useState(processedData.slice(0, 10));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    id: \"ex-list-desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, isDisplayData), /*#__PURE__*/React.createElement(Pagination, {\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PaginateResult, {\n    href: \"/exlist/weight_lifting\",\n    isOpen: isOpen,\n    processedData: processedData,\n    SetDisplayData: SetDisplayData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default ExerciseResults;","map":{"version":3,"sources":["/Users/daniel/WebstormProjects/Exercise_App/Exercise_Logger/client/src/components/exercise/ExerciseResults.js"],"names":["React","useState","OverlayTrigger","Tooltip","Collapse","Pagination","Card","PaginateResult","data","require","ExerciseResults","isOpen","setOpen","processedData","map","el","index","Exercise","background","backgroundSize","listStyleType","Level","show","hide","fontSize","paddingLeft","ref","triggerHandler","paddingRight","Modality","Joint","isDisplayData","SetDisplayData","slice"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  OverlayTrigger,\n  Tooltip,\n  Collapse,\n  Pagination,\n  Card,\n} from \"react-bootstrap\";\nimport PaginateResult from \"./PaginateResult\";\nconst data = require(\"../data/exerciseListData.json\");\n\nconst ExerciseResults = () => {\n  const [isOpen, setOpen] = useState(0);\n\n  const processedData = data.map((el, index) => {\n    return (\n      <Card\n        key={el.Exercise}\n        onClick={() => {\n          setOpen(index);\n        }}\n        aria-controls=\"collapse-text\"\n        aria-expanded={isOpen}\n        style={{ background: `#24154a`, backgroundSize: \"cover\" }}\n      >\n        <Card.Body>\n          <Card.Title>{el.Exercise}</Card.Title>\n          <Collapse key={index} in={isOpen === index}>\n            <div id=\"collapse-text\">\n              <ul style={{ listStyleType: \"none\" }}>\n                <li>Muscle Group: {el[\"Muscle Group\"]}</li>\n                <li>Level: {el.Level}</li>\n                <OverlayTrigger\n                  placement=\"right\"\n                  delay={{ show: 250, hide: 400 }}\n                  overlay={\n                    <Tooltip id=\"button-tooltip\">\n                      <ul style={{ fontSize: \"0.8em\", paddingLeft: 0 }}>\n                        <li>U–Upper Body</li>\n                        <li>L–Lower Body</li>\n                        <li>C–Core</li>\n                      </ul>\n                    </Tooltip>\n                  }\n                >\n                  {({ ref, ...triggerHandler }) => (\n                    <li {...triggerHandler}>\n                      <span ref={ref} style={{ paddingRight: \"2rem\" }}>\n                        U/L/C: {el[\"U/L/C\"]}\n                      </span>\n                    </li>\n                  )}\n                </OverlayTrigger>\n                <li>Push/Pull: {el[\"P / P\"]}</li>\n                <OverlayTrigger\n                  placement=\"right\"\n                  delay={{ show: 250, hide: 400 }}\n                  overlay={\n                    <Tooltip id=\"button-tooltip\">\n                      <ul style={{ fontSize: \"0.8em\", paddingLeft: 0 }}>\n                        <li>FW–Free Weights</li>\n                        <li>C–Cables</li>\n                        <li>M–Machine</li>\n                      </ul>\n                    </Tooltip>\n                  }\n                >\n                  {({ ref, ...triggerHandler }) => (\n                    <li {...triggerHandler}>\n                      <span ref={ref} style={{ paddingRight: \"2rem\" }}>\n                        Modality: {el.Modality}\n                      </span>\n                    </li>\n                  )}\n                </OverlayTrigger>\n                <OverlayTrigger\n                  placement=\"right\"\n                  delay={{ show: 250, hide: 400 }}\n                  overlay={\n                    <Tooltip id=\"button-tooltip\">\n                      <ul style={{ fontSize: \"0.8em\", paddingLeft: 0 }}>\n                        <li>M–Multi-Joint Exercise</li>\n                        <li>S–Single-Joint Exercise</li>\n                      </ul>\n                    </Tooltip>\n                  }\n                >\n                  {({ ref, ...triggerHandler }) => (\n                    <li {...triggerHandler}>\n                      <span ref={ref} style={{ paddingRight: \"2rem\" }}>\n                        Joint: {el.Joint}\n                      </span>\n                    </li>\n                  )}\n                </OverlayTrigger>\n              </ul>\n            </div>\n          </Collapse>\n        </Card.Body>\n      </Card>\n    );\n  });\n  const [isDisplayData, SetDisplayData] = useState(processedData.slice(0, 10));\n\n  return (\n    <div className=\"grid\">\n      <div className=\"col\" id=\"ex-list-desc\">\n        {isDisplayData}\n      </div>\n      <Pagination size=\"sm\">\n        <PaginateResult\n          href={\"/exlist/weight_lifting\"}\n          isOpen={isOpen}\n          processedData={processedData}\n          SetDisplayData={SetDisplayData}\n        />\n      </Pagination>\n    </div>\n  );\n};\nexport default ExerciseResults;\n"]},"metadata":{},"sourceType":"module"}