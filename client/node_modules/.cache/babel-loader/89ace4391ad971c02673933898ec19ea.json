{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/WebstormProjects/Exercise_App/Exercise_Logger/client/src/components/exercise/PaginateResult.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Pagination from \"react-bootstrap/Pagination\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nconst PaginateResult = ({\n  href,\n  processedData,\n  SetDisplayData,\n  isOpen\n}) => {\n  const location = useLocation();\n  const pages = [];\n  const [isCurrPage, SetCurrPage] = useState(1);\n  const [isPageRange, SetPageRange] = useState([1, 10]);\n  useEffect(() => {\n    SetCurrPage(Number(location.pathname.match(/\\d+/g)));\n    SetDisplayData(processedData.slice(isCurrPage * 10 - 10, isCurrPage * 10));\n    let baseNum = Math.trunc(isCurrPage / 10) + 1;\n    SetPageRange([baseNum * 10 - 9, baseNum * 10]);\n  }, [isOpen, isCurrPage, location]);\n  pages.push( /*#__PURE__*/React.createElement(\"li\", {\n    className: \"page-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"page-link\",\n    to: `${href}/1`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, \"\\xAB\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, \"First\"))));\n  if (isPageRange[0] - 1 > 0) pages.push( /*#__PURE__*/React.createElement(Pagination.Prev, {\n    onClick: () => {\n      SetPageRange([isPageRange[0] - 10, isPageRange[1] - 10]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }));\n\n  if (isPageRange[0] > 3) {\n    pages.push( /*#__PURE__*/React.createElement(Pagination.Ellipsis, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 16\n      }\n    }));\n  }\n\n  for (let i = isPageRange[0]; i <= isPageRange[1]; i++) {\n    if (i <= Math.trunc(processedData.length / 10) + (processedData.length % 10 >= 1 ? 1 : 0)) {\n      if (i === isCurrPage) {\n        pages.push( /*#__PURE__*/React.createElement(\"li\", {\n          className: \"page-item active\",\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          className: \"page-link\",\n          to: `${href}/${i}/`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }\n        }, i)));\n      } else {\n        pages.push( /*#__PURE__*/React.createElement(\"li\", {\n          className: \"page-item\",\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          className: \"page-link\",\n          to: `${href}/${i}/`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }\n        }, i)));\n      }\n    }\n  }\n\n  if (isPageRange[1] < Math.trunc(processedData.length / 10) + (processedData.length % 10 >= 1 ? 1 : 0)) {\n    pages.push( /*#__PURE__*/React.createElement(Pagination.Ellipsis, {\n      key: \"page-ellipsis\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 16\n      }\n    }));\n    pages.push( /*#__PURE__*/React.createElement(Pagination.Next, {\n      onClick: () => {\n        SetPageRange([isPageRange[0] + 10, isPageRange[1] + 10]);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  pages.push( /*#__PURE__*/React.createElement(\"li\", {\n    className: \"page-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"page-link\",\n    to: `${href}/${Math.trunc(processedData.length / 10) + (processedData.length % 10 >= 1 ? 1 : 0)}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"\\xBB\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, \"Last\"))));\n  return pages;\n};\n\nexport default PaginateResult;","map":{"version":3,"sources":["/Users/daniel/WebstormProjects/Exercise_App/Exercise_Logger/client/src/components/exercise/PaginateResult.js"],"names":["React","useEffect","useState","Pagination","Link","useLocation","PaginateResult","href","processedData","SetDisplayData","isOpen","location","pages","isCurrPage","SetCurrPage","isPageRange","SetPageRange","Number","pathname","match","slice","baseNum","Math","trunc","push","i","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Pagination from \"react-bootstrap/Pagination\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nconst PaginateResult = ({ href, processedData, SetDisplayData, isOpen }) => {\n  const location = useLocation();\n  const pages = [];\n  const [isCurrPage, SetCurrPage] = useState(1);\n  const [isPageRange, SetPageRange] = useState([1, 10]);\n  useEffect(() => {\n    SetCurrPage(Number(location.pathname.match(/\\d+/g)));\n    SetDisplayData(processedData.slice(isCurrPage * 10 - 10, isCurrPage * 10));\n    let baseNum = Math.trunc(isCurrPage / 10) + 1;\n    SetPageRange([baseNum * 10 - 9, baseNum * 10]);\n  }, [isOpen, isCurrPage, location]);\n  pages.push(\n    <li className={\"page-item\"}>\n      <Link className={\"page-link\"} to={`${href}/1`}>\n        <span aria-hidden=\"true\">«</span>\n        <span className=\"sr-only\">First</span>\n      </Link>\n    </li>\n  );\n  if (isPageRange[0] - 1 > 0)\n    pages.push(\n      <Pagination.Prev\n        onClick={() => {\n          SetPageRange([isPageRange[0] - 10, isPageRange[1] - 10]);\n        }}\n      />\n    );\n\n  if (isPageRange[0] > 3) {\n    pages.push(<Pagination.Ellipsis />);\n  }\n  for (let i = isPageRange[0]; i <= isPageRange[1]; i++) {\n    if (\n      i <=\n      Math.trunc(processedData.length / 10) +\n        (processedData.length % 10 >= 1 ? 1 : 0)\n    ) {\n      if (i === isCurrPage) {\n        pages.push(\n          <li className={\"page-item active\"} key={i}>\n            <Link className={\"page-link\"} to={`${href}/${i}/`}>\n              {i}\n            </Link>\n          </li>\n        );\n      } else {\n        pages.push(\n          <li className={\"page-item\"} key={i}>\n            <Link className={\"page-link\"} to={`${href}/${i}/`}>\n              {i}\n            </Link>\n          </li>\n        );\n      }\n    }\n  }\n\n  if (\n    isPageRange[1] <\n    Math.trunc(processedData.length / 10) +\n      (processedData.length % 10 >= 1 ? 1 : 0)\n  ) {\n    pages.push(<Pagination.Ellipsis key={\"page-ellipsis\"} />);\n    pages.push(\n      <Pagination.Next\n        onClick={() => {\n          SetPageRange([isPageRange[0] + 10, isPageRange[1] + 10]);\n        }}\n      />\n    );\n  }\n  pages.push(\n    <li className={\"page-item\"}>\n      <Link\n        className={\"page-link\"}\n        to={`${href}/${\n          Math.trunc(processedData.length / 10) +\n          (processedData.length % 10 >= 1 ? 1 : 0)\n        }`}\n      >\n        <span aria-hidden=\"true\">»</span>\n        <span className=\"sr-only\">Last</span>\n      </Link>\n    </li>\n  );\n\n  return pages;\n};\nexport default PaginateResult;\n"]},"metadata":{},"sourceType":"module"}