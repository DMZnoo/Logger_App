{"ast":null,"code":"import _defineProperty from\"/var/www/Exercise_Logger/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/var/www/Exercise_Logger/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import SubmitUpdate from\"../../../partials/SubmitUpdate\";import EditWorkout from\"../../exercises/actions/edit/EditWorkout\";import update from\"immutability-helper\";import EditableTable from\"../../../partials/EditableTable\";var EditLogList=function EditLogList(_ref){var el=_ref.el,index=_ref.index,isEdit=_ref.isEdit,isCurrID=_ref.isCurrID,updateData=_ref.updateData,SetEdit=_ref.SetEdit;var _useState=useState(el),_useState2=_slicedToArray(_useState,2),isEditList=_useState2[0],SetEditList=_useState2[1];var SetData=function SetData(state,idx){SetEditList(function(isEditList){return update(isEditList,{0:{1:_defineProperty({},index,{set:{$set:state.set},reps:{$set:state.reps},weight:{$set:state.weight}})}});});};return el.map(function(log){if(log[0]===\"exercises\"){return/*#__PURE__*/React.createElement(React.Fragment,null,log[1].map(function(ex,li){return/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(EditWorkout,{isEditList:isEditList,SetEditList:SetEditList,ex:ex,li:li}),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(EditableTable,{index:li,thead:[\"Set\",\"Reps\",\"Weight\"],SetData:SetData,style:{color:\"black\",width:\"inherit\",fontSize:\"1.5vh\",margin:\"0\"},dataAvailable:[ex.set,ex.reps,ex.weight]}),/*#__PURE__*/React.createElement(\"hr\",null));}),isEdit[index]&&/*#__PURE__*/React.createElement(SubmitUpdate,{index:index,isCurrID:isCurrID,isEdit:isEdit,SetEdit:SetEdit,isEditList:isEditList,updateData:updateData,target:\"Log\"}));}});};export default EditLogList;","map":{"version":3,"sources":["/var/www/Exercise_Logger/client/src/components/log/actions/edit/EditLogList.js"],"names":["React","useState","SubmitUpdate","EditWorkout","update","EditableTable","EditLogList","el","index","isEdit","isCurrID","updateData","SetEdit","isEditList","SetEditList","SetData","state","idx","set","$set","reps","weight","map","log","ex","li","color","width","fontSize","margin"],"mappings":"8SAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,YAAP,KAAyB,gCAAzB,CACA,MAAOC,CAAAA,WAAP,KAAwB,0CAAxB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iCAA1B,CACA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAA0D,IAAvDC,CAAAA,EAAuD,MAAvDA,EAAuD,CAAnDC,KAAmD,MAAnDA,KAAmD,CAA5CC,MAA4C,MAA5CA,MAA4C,CAApCC,QAAoC,MAApCA,QAAoC,CAA1BC,UAA0B,MAA1BA,UAA0B,CAAdC,OAAc,MAAdA,OAAc,eAC1CX,QAAQ,CAACM,EAAD,CADkC,wCACrEM,UADqE,eACzDC,WADyD,eAE5E,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAQC,GAAR,CAAgB,CAC9BH,WAAW,CAAC,SAACD,UAAD,QACVT,CAAAA,MAAM,CAACS,UAAD,CAAa,CACjB,EAAG,CACD,qBACGL,KADH,CACW,CACPU,GAAG,CAAE,CAAEC,IAAI,CAAEH,KAAK,CAACE,GAAd,CADE,CAEPE,IAAI,CAAE,CAAED,IAAI,CAAEH,KAAK,CAACI,IAAd,CAFC,CAGPC,MAAM,CAAE,CAAEF,IAAI,CAAEH,KAAK,CAACK,MAAd,CAHD,CADX,CADC,CADc,CAAb,CADI,EAAD,CAAX,CAaD,CAdD,CAeA,MAAOd,CAAAA,EAAE,CAACe,GAAH,CAAO,SAACC,GAAD,CAAS,CACrB,GAAIA,GAAG,CAAC,CAAD,CAAH,GAAW,WAAf,CAA4B,CAC1B,mBACE,wCACGA,GAAG,CAAC,CAAD,CAAH,CAAOD,GAAP,CAAW,SAACE,EAAD,CAAKC,EAAL,CAAY,CACtB,mBACE,2BAAK,SAAS,CAAE,WAAhB,eACE,oBAAC,WAAD,EACE,UAAU,CAAEZ,UADd,CAEE,WAAW,CAAEC,WAFf,CAGE,EAAE,CAAEU,EAHN,CAIE,EAAE,CAAEC,EAJN,EADF,cAOE,8BAPF,cAQE,oBAAC,aAAD,EACE,KAAK,CAAEA,EADT,CAEE,KAAK,CAAE,CAAC,KAAD,CAAQ,MAAR,CAAgB,QAAhB,CAFT,CAGE,OAAO,CAAEV,OAHX,CAIE,KAAK,CAAE,CACLW,KAAK,CAAE,OADF,CAELC,KAAK,CAAE,SAFF,CAGLC,QAAQ,CAAE,OAHL,CAILC,MAAM,CAAE,GAJH,CAJT,CAUE,aAAa,CAAE,CAACL,EAAE,CAACN,GAAJ,CAASM,EAAE,CAACJ,IAAZ,CAAkBI,EAAE,CAACH,MAArB,CAVjB,EARF,cAoBE,8BApBF,CADF,CAwBD,CAzBA,CADH,CA2BGZ,MAAM,CAACD,KAAD,CAAN,eACC,oBAAC,YAAD,EACE,KAAK,CAAEA,KADT,CAEE,QAAQ,CAAEE,QAFZ,CAGE,MAAM,CAAED,MAHV,CAIE,OAAO,CAAEG,OAJX,CAKE,UAAU,CAAEC,UALd,CAME,UAAU,CAAEF,UANd,CAOE,MAAM,CAAE,KAPV,EA5BJ,CADF,CAyCD,CACF,CA5CM,CAAP,CA6CD,CA9DD,CA+DA,cAAeL,CAAAA,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport SubmitUpdate from \"../../../partials/SubmitUpdate\";\nimport EditWorkout from \"../../exercises/actions/edit/EditWorkout\";\nimport update from \"immutability-helper\";\nimport EditableTable from \"../../../partials/EditableTable\";\nconst EditLogList = ({ el, index, isEdit, isCurrID, updateData, SetEdit }) => {\n  const [isEditList, SetEditList] = useState(el);\n  const SetData = (state, idx) => {\n    SetEditList((isEditList) =>\n      update(isEditList, {\n        0: {\n          1: {\n            [index]: {\n              set: { $set: state.set },\n              reps: { $set: state.reps },\n              weight: { $set: state.weight },\n            },\n          },\n        },\n      })\n    );\n  };\n  return el.map((log) => {\n    if (log[0] === \"exercises\") {\n      return (\n        <>\n          {log[1].map((ex, li) => {\n            return (\n              <div className={\"container\"}>\n                <EditWorkout\n                  isEditList={isEditList}\n                  SetEditList={SetEditList}\n                  ex={ex}\n                  li={li}\n                />\n                <hr />\n                <EditableTable\n                  index={li}\n                  thead={[\"Set\", \"Reps\", \"Weight\"]}\n                  SetData={SetData}\n                  style={{\n                    color: \"black\",\n                    width: \"inherit\",\n                    fontSize: \"1.5vh\",\n                    margin: \"0\",\n                  }}\n                  dataAvailable={[ex.set, ex.reps, ex.weight]}\n                />\n                <hr />\n              </div>\n            );\n          })}\n          {isEdit[index] && (\n            <SubmitUpdate\n              index={index}\n              isCurrID={isCurrID}\n              isEdit={isEdit}\n              SetEdit={SetEdit}\n              isEditList={isEditList}\n              updateData={updateData}\n              target={\"Log\"}\n            />\n          )}\n        </>\n      );\n    }\n  });\n};\nexport default EditLogList;\n"]},"metadata":{},"sourceType":"module"}