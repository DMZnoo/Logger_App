{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/WebstormProjects/Exercise_App/Exercise_Logger/client/src/components/log/exercises/ViewWorkoutList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport ToggleEdit from \"../../partials/ToggleEdit\";\nimport SubmitUpdate from \"../../partials/SubmitUpdate\";\nimport EditWorkout from \"./actions/edit/EditWorkout\";\nimport RemoveWorkout from \"./actions/remove/RemoveWorkout\";\nimport EditableTable from \"../../partials/EditableTable\";\nimport update from \"immutability-helper\";\n\nconst ViewWorkoutList = ({\n  el,\n  isCurrID,\n  updateData,\n  logIndex,\n  user\n}) => {\n  const [isEdit, SetEdit] = useState([]);\n  const [isDelete, SetDelete] = useState([]);\n  const [isEditList, SetEditList] = useState(el);\n  useEffect(() => {\n    for (let i = 0; i < el[0][1].length; i++) {\n      SetEdit(isEdit => [...isEdit, false]);\n      SetDelete(isDelete => [...isDelete, false]);\n    }\n  }, []);\n\n  const SetData = (state, idx) => {\n    SetEditList(isEditList => update(isEditList, {\n      0: {\n        1: {\n          [idx]: {\n            set: {\n              $set: state.set\n            },\n            reps: {\n              $set: state.reps\n            },\n            weight: {\n              $set: state.weight\n            }\n          }\n        }\n      }\n    }));\n  };\n\n  return el.map(log => {\n    if (log[0] === \"exercises\") {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, log[1].map((ex, index) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }\n        }, !isEdit[index] ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }\n        }, ex.name), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }\n        }, ex.description), /*#__PURE__*/React.createElement(Table, {\n          striped: true,\n          borderless: true,\n          variant: \"dark\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"thead\", {\n          className: \"thead-dark\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"tr\", {\n          id: \"table-thead-tr\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"th\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 27\n          }\n        }), /*#__PURE__*/React.createElement(\"th\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 27\n          }\n        }, \"Set\"), /*#__PURE__*/React.createElement(\"th\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 27\n          }\n        }, \"Reps\"), /*#__PURE__*/React.createElement(\"th\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 27\n          }\n        }, \"Weight\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 23\n          }\n        }, ex.set.map((set, idx) => {\n          return /*#__PURE__*/React.createElement(\"tr\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 31\n            }\n          }), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 31\n            }\n          }, set), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 31\n            }\n          }, ex.reps[idx]), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 31\n            }\n          }, ex.weight[idx]));\n        })))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(EditWorkout, {\n          SetEditList: SetEditList,\n          isEditList: isEditList,\n          li: index,\n          ex: ex,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(EditableTable, {\n          index: index,\n          thead: [\"Set\", \"Reps\", \"Weight\"],\n          SetData: SetData,\n          style: {\n            color: \"black\",\n            width: \"inherit\",\n            fontSize: \"1.5vh\",\n            margin: \"0\"\n          },\n          dataAvailable: [ex.set, ex.reps, ex.weight],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(\"hr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(SubmitUpdate, {\n          index: logIndex,\n          workoutIndex: index,\n          isCurrID: isCurrID,\n          isEdit: isEdit,\n          SetEdit: SetEdit,\n          isEditList: isEditList,\n          updateData: updateData,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"d-flex d-inline-flex\",\n          style: {\n            fontSize: \"1.5vh\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(RemoveWorkout, {\n          exercise: ex,\n          logIndex: logIndex,\n          isCurrID: isCurrID,\n          SetEditList: SetEditList,\n          isEditList: isEditList,\n          updateData: updateData,\n          textColor: {\n            color: \"black\"\n          },\n          user: user,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 19\n          }\n        }), /*#__PURE__*/React.createElement(ToggleEdit, {\n          isEdit: isEdit,\n          SetEdit: SetEdit,\n          index: index,\n          target: \"Exercise\",\n          multiple: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 19\n          }\n        })), /*#__PURE__*/React.createElement(\"hr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }\n        }));\n      }));\n    }\n  });\n};\n\nexport default ViewWorkoutList;","map":{"version":3,"sources":["/Users/daniel/WebstormProjects/Exercise_App/Exercise_Logger/client/src/components/log/exercises/ViewWorkoutList.js"],"names":["React","useEffect","useState","Table","ToggleEdit","SubmitUpdate","EditWorkout","RemoveWorkout","EditableTable","update","ViewWorkoutList","el","isCurrID","updateData","logIndex","user","isEdit","SetEdit","isDelete","SetDelete","isEditList","SetEditList","i","length","SetData","state","idx","set","$set","reps","weight","map","log","ex","index","name","description","color","width","fontSize","margin"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport ToggleEdit from \"../../partials/ToggleEdit\";\nimport SubmitUpdate from \"../../partials/SubmitUpdate\";\nimport EditWorkout from \"./actions/edit/EditWorkout\";\nimport RemoveWorkout from \"./actions/remove/RemoveWorkout\";\nimport EditableTable from \"../../partials/EditableTable\";\nimport update from \"immutability-helper\";\n\nconst ViewWorkoutList = ({ el, isCurrID, updateData, logIndex, user }) => {\n  const [isEdit, SetEdit] = useState([]);\n  const [isDelete, SetDelete] = useState([]);\n  const [isEditList, SetEditList] = useState(el);\n  useEffect(() => {\n    for (let i = 0; i < el[0][1].length; i++) {\n      SetEdit((isEdit) => [...isEdit, false]);\n      SetDelete((isDelete) => [...isDelete, false]);\n    }\n  }, []);\n  const SetData = (state, idx) => {\n    SetEditList((isEditList) =>\n      update(isEditList, {\n        0: {\n          1: {\n            [idx]: {\n              set: { $set: state.set },\n              reps: { $set: state.reps },\n              weight: { $set: state.weight },\n            },\n          },\n        },\n      })\n    );\n  };\n  return el.map((log) => {\n    if (log[0] === \"exercises\") {\n      return (\n        <>\n          {log[1].map((ex, index) => {\n            return (\n              <div>\n                {!isEdit[index] ? (\n                  <>\n                    <h3>{ex.name}</h3>\n                    <p>{ex.description}</p>\n                    <Table striped borderless variant={\"dark\"}>\n                      <thead className=\"thead-dark\">\n                        <tr id=\"table-thead-tr\">\n                          <th />\n                          <th>Set</th>\n                          <th>Reps</th>\n                          <th>Weight</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {ex.set.map((set, idx) => {\n                          return (\n                            <tr>\n                              <td></td>\n                              <td>{set}</td>\n                              <td>{ex.reps[idx]}</td>\n                              <td>{ex.weight[idx]}</td>\n                            </tr>\n                          );\n                        })}\n                      </tbody>\n                    </Table>\n                  </>\n                ) : (\n                  <>\n                    <EditWorkout\n                      SetEditList={SetEditList}\n                      isEditList={isEditList}\n                      li={index}\n                      ex={ex}\n                    />\n                    <EditableTable\n                      index={index}\n                      thead={[\"Set\", \"Reps\", \"Weight\"]}\n                      SetData={SetData}\n                      style={{\n                        color: \"black\",\n                        width: \"inherit\",\n                        fontSize: \"1.5vh\",\n                        margin: \"0\",\n                      }}\n                      dataAvailable={[ex.set, ex.reps, ex.weight]}\n                    />\n                    <hr />\n                    <SubmitUpdate\n                      index={logIndex}\n                      workoutIndex={index}\n                      isCurrID={isCurrID}\n                      isEdit={isEdit}\n                      SetEdit={SetEdit}\n                      isEditList={isEditList}\n                      updateData={updateData}\n                    />\n                  </>\n                )}\n\n                <div\n                  className={\"d-flex d-inline-flex\"}\n                  style={{ fontSize: \"1.5vh\" }}\n                >\n                  <RemoveWorkout\n                    exercise={ex}\n                    logIndex={logIndex}\n                    isCurrID={isCurrID}\n                    SetEditList={SetEditList}\n                    isEditList={isEditList}\n                    updateData={updateData}\n                    textColor={{ color: \"black\" }}\n                    user={user}\n                  />\n                  <ToggleEdit\n                    isEdit={isEdit}\n                    SetEdit={SetEdit}\n                    index={index}\n                    target={\"Exercise\"}\n                    multiple={true}\n                  />\n                </div>\n                <hr />\n              </div>\n            );\n          })}\n        </>\n      );\n    }\n  });\n};\nexport default ViewWorkoutList;\n"]},"metadata":{},"sourceType":"module"}