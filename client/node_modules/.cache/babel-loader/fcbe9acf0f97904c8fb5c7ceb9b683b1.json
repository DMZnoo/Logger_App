{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/WebstormProjects/Exercise_App/Exercise_Logger/client/src/components/BreadCrumbs.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Redirect, useLocation } from \"react-router\";\nimport { Breadcrumb } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nconst BreadCrumbs = () => {\n  const location = useLocation();\n  const [isPath, SetPath] = useState(location.pathname.split(\"/\"));\n  useEffect(() => {\n    SetPath(location.pathname.split(\"/\"));\n  }, [location]);\n\n  if (location.pathname === \"/exlist/weight_lifting\") {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/exlist/weight_lifting/1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (location.pathname === \"/exlist/cardio\") {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/exlist/cardio/1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Breadcrumb, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, isPath.map((el, idx) => {\n    if (idx === 0) {\n      return /*#__PURE__*/React.createElement(LinkContainer, {\n        to: `/`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }\n      }, \"Home\"));\n    }\n\n    if (idx === isPath.length - 1) {\n      return /*#__PURE__*/React.createElement(LinkContainer, {\n        active: true,\n        to: `/${location.pathname}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }\n      }, el));\n    }\n\n    return /*#__PURE__*/React.createElement(LinkContainer, {\n      to: `${location.pathname.split(\"/\").slice(0, idx + 1).join(\"/\")}`,\n      replace: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, el));\n  }));\n};\n\nexport default BreadCrumbs;","map":{"version":3,"sources":["/Users/daniel/WebstormProjects/Exercise_App/Exercise_Logger/client/src/components/BreadCrumbs.js"],"names":["React","useEffect","useState","Redirect","useLocation","Breadcrumb","LinkContainer","BreadCrumbs","location","isPath","SetPath","pathname","split","map","el","idx","length","slice","join"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,cAAtC;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,aAAT,QAA8B,wBAA9B;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAM,CAACK,MAAD,EAASC,OAAT,IAAoBR,QAAQ,CAACM,QAAQ,CAACG,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,CAAD,CAAlC;AACAX,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,OAAO,CAACF,QAAQ,CAACG,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,CAAD,CAAP;AACD,GAFQ,EAEN,CAACJ,QAAD,CAFM,CAAT;;AAGA,MAAIA,QAAQ,CAACG,QAAT,KAAsB,wBAA1B,EAAoD;AAClD,wBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,MAAIH,QAAQ,CAACG,QAAT,KAAsB,gBAA1B,EAA4C;AAC1C,wBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,sBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,MAAM,CAACI,GAAP,CAAW,CAACC,EAAD,EAAKC,GAAL,KAAa;AACvB,QAAIA,GAAG,KAAK,CAAZ,EAAe;AACb,0BACE,oBAAC,aAAD;AAAe,QAAA,EAAE,EAAG,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,UAAD,CAAY,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADF;AAKD;;AACD,QAAIA,GAAG,KAAKN,MAAM,CAACO,MAAP,GAAgB,CAA5B,EAA+B;AAC7B,0BACE,oBAAC,aAAD;AAAe,QAAA,MAAM,MAArB;AAAsB,QAAA,EAAE,EAAG,IAAGR,QAAQ,CAACG,QAAS,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,UAAD,CAAY,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkBG,EAAlB,CADF,CADF;AAKD;;AACD,wBACE,oBAAC,aAAD;AACE,MAAA,EAAE,EAAG,GAAEN,QAAQ,CAACG,QAAT,CACJC,KADI,CACE,GADF,EAEJK,KAFI,CAEE,CAFF,EAEKF,GAAG,GAAG,CAFX,EAGJG,IAHI,CAGC,GAHD,CAGM,EAJf;AAKE,MAAA,OAAO,MALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOE,oBAAC,UAAD,CAAY,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkBJ,EAAlB,CAPF,CADF;AAWD,GA1BA,CADH,CADF;AA+BD,CA3CD;;AA4CA,eAAeP,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Redirect, useLocation } from \"react-router\";\nimport { Breadcrumb } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nconst BreadCrumbs = () => {\n  const location = useLocation();\n  const [isPath, SetPath] = useState(location.pathname.split(\"/\"));\n  useEffect(() => {\n    SetPath(location.pathname.split(\"/\"));\n  }, [location]);\n  if (location.pathname === \"/exlist/weight_lifting\") {\n    return <Redirect to={\"/exlist/weight_lifting/1\"} />;\n  }\n  if (location.pathname === \"/exlist/cardio\") {\n    return <Redirect to={\"/exlist/cardio/1\"} />;\n  }\n  return (\n    <Breadcrumb>\n      {isPath.map((el, idx) => {\n        if (idx === 0) {\n          return (\n            <LinkContainer to={`/`}>\n              <Breadcrumb.Item>Home</Breadcrumb.Item>\n            </LinkContainer>\n          );\n        }\n        if (idx === isPath.length - 1) {\n          return (\n            <LinkContainer active to={`/${location.pathname}`}>\n              <Breadcrumb.Item>{el}</Breadcrumb.Item>\n            </LinkContainer>\n          );\n        }\n        return (\n          <LinkContainer\n            to={`${location.pathname\n              .split(\"/\")\n              .slice(0, idx + 1)\n              .join(\"/\")}`}\n            replace\n          >\n            <Breadcrumb.Item>{el}</Breadcrumb.Item>\n          </LinkContainer>\n        );\n      })}\n    </Breadcrumb>\n  );\n};\nexport default BreadCrumbs;\n"]},"metadata":{},"sourceType":"module"}