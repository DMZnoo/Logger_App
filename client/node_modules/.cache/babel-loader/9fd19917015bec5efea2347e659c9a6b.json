{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/WebstormProjects/Exercise_App/Exercise_Logger/client/src/components/partials/SubmitUpdate.js\";\nimport React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { MdDone } from \"react-icons/md\";\n\nconst SubmitUpdate = ({\n  index,\n  workoutIndex = -1,\n  isEdit,\n  isEditList,\n  isCurrID,\n  updateData,\n  SetEdit,\n  target\n}) => {\n  const {\n    user\n  } = useAuth0();\n  const [isHover, SetHover] = useState(false);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-success\",\n    style: {\n      borderRadius: \"10vw\",\n      borderStyle: \"hidden\"\n    },\n    onClick: e => {\n      e.preventDefault();\n      let date = new Date();\n      let logTitle = document.querySelector(`#log-title-${index}`);\n      let logDesc = document.querySelector(`#log-desc-${index}`);\n\n      if (target === \"Log\") {\n        logTitle = logTitle.value === null || logTitle.value.length === 0 ? logTitle.getAttribute(\"placeholder\") : logTitle.value;\n        logDesc = logDesc.value === null || logDesc.value.length === 0 ? logDesc.getAttribute(\"placeholder\") : logDesc.value;\n      } else {\n        logTitle = logTitle.innerText;\n        logDesc = logDesc.innerText;\n      } //edit the log\n\n\n      axios.patch(`api/logs/update/${isCurrID[index]}`, {\n        username: user.email,\n        title: logTitle,\n        description: logDesc,\n        exercises: isEditList[0].val,\n        date: date\n      }).then(response => {\n        console.log(\"Log Updated\");\n\n        if (workoutIndex !== -1) {\n          SetEdit(isEdit => [...isEdit.slice(0, workoutIndex), !isEdit[workoutIndex], ...isEdit.slice(workoutIndex + 1)]);\n        } else {\n          SetEdit(isEdit => [...isEdit.slice(0, index), !isEdit[index], ...isEdit.slice(index + 1)]);\n        }\n\n        updateData(true, isCurrID[index]);\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MdDone, {\n    size: \"1.5em\",\n    style: {\n      color: \"green\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"p-2 font-weight-bold\",\n    onMouseEnter: () => {\n      SetHover(!isHover);\n    },\n    onMouseOut: () => {\n      SetHover(!isHover);\n    },\n    style: {\n      color: isHover ? \"white\" : \"green\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"Save?\")), /*#__PURE__*/React.createElement(Button, {\n    className: \"p-2\",\n    variant: \"outline-danger\",\n    style: {\n      borderRadius: \"10vw\",\n      borderStyle: \"hidden\"\n    },\n    onClick: e => {\n      if (workoutIndex !== -1) {\n        SetEdit(isEdit => [...isEdit.slice(0, workoutIndex), !isEdit[workoutIndex], ...isEdit.slice(workoutIndex + 1)]);\n      } else {\n        SetEdit(isEdit => [...isEdit.slice(0, index), !isEdit[index], ...isEdit.slice(index + 1)]);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default SubmitUpdate;","map":{"version":3,"sources":["/Users/daniel/WebstormProjects/Exercise_App/Exercise_Logger/client/src/components/partials/SubmitUpdate.js"],"names":["React","useState","Button","axios","useAuth0","MdDone","SubmitUpdate","index","workoutIndex","isEdit","isEditList","isCurrID","updateData","SetEdit","target","user","isHover","SetHover","borderRadius","borderStyle","e","preventDefault","date","Date","logTitle","document","querySelector","logDesc","value","length","getAttribute","innerText","patch","username","email","title","description","exercises","val","then","response","console","log","slice","catch","err","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { MdDone } from \"react-icons/md\";\nconst SubmitUpdate = ({\n  index,\n  workoutIndex = -1,\n  isEdit,\n  isEditList,\n  isCurrID,\n  updateData,\n  SetEdit,\n  target,\n}) => {\n  const { user } = useAuth0();\n  const [isHover, SetHover] = useState(false);\n  return (\n    <>\n      <Button\n        variant={\"outline-success\"}\n        style={{\n          borderRadius: \"10vw\",\n          borderStyle: \"hidden\",\n        }}\n        onClick={(e) => {\n          e.preventDefault();\n          let date = new Date();\n          let logTitle = document.querySelector(`#log-title-${index}`);\n          let logDesc = document.querySelector(`#log-desc-${index}`);\n          if (target === \"Log\") {\n            logTitle =\n              logTitle.value === null || logTitle.value.length === 0\n                ? logTitle.getAttribute(\"placeholder\")\n                : logTitle.value;\n            logDesc =\n              logDesc.value === null || logDesc.value.length === 0\n                ? logDesc.getAttribute(\"placeholder\")\n                : logDesc.value;\n          } else {\n            logTitle = logTitle.innerText;\n            logDesc = logDesc.innerText;\n          }\n          //edit the log\n          axios\n            .patch(`api/logs/update/${isCurrID[index]}`, {\n              username: user.email,\n              title: logTitle,\n              description: logDesc,\n              exercises: isEditList[0].val,\n              date: date,\n            })\n            .then((response) => {\n              console.log(\"Log Updated\");\n              if (workoutIndex !== -1) {\n                SetEdit((isEdit) => [\n                  ...isEdit.slice(0, workoutIndex),\n                  !isEdit[workoutIndex],\n                  ...isEdit.slice(workoutIndex + 1),\n                ]);\n              } else {\n                SetEdit((isEdit) => [\n                  ...isEdit.slice(0, index),\n                  !isEdit[index],\n                  ...isEdit.slice(index + 1),\n                ]);\n              }\n              updateData(true, isCurrID[index]);\n            })\n            .catch((err) => {\n              console.log(err);\n            });\n        }}\n      >\n        <MdDone size={\"1.5em\"} style={{ color: \"green\" }} />\n        <span\n          className=\"p-2 font-weight-bold\"\n          onMouseEnter={() => {\n            SetHover(!isHover);\n          }}\n          onMouseOut={() => {\n            SetHover(!isHover);\n          }}\n          style={{ color: isHover ? \"white\" : \"green\" }}\n        >\n          Save?\n        </span>\n      </Button>\n      <Button\n        className={\"p-2\"}\n        variant={\"outline-danger\"}\n        style={{\n          borderRadius: \"10vw\",\n          borderStyle: \"hidden\",\n        }}\n        onClick={(e) => {\n          if (workoutIndex !== -1) {\n            SetEdit((isEdit) => [\n              ...isEdit.slice(0, workoutIndex),\n              !isEdit[workoutIndex],\n              ...isEdit.slice(workoutIndex + 1),\n            ]);\n          } else {\n            SetEdit((isEdit) => [\n              ...isEdit.slice(0, index),\n              !isEdit[index],\n              ...isEdit.slice(index + 1),\n            ]);\n          }\n        }}\n      >\n        Cancel\n      </Button>\n      <hr />\n    </>\n  );\n};\nexport default SubmitUpdate;\n"]},"metadata":{},"sourceType":"module"}