{"ast":null,"code":"import _slicedToArray from\"/var/www/Exercise_Logger/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import Card from\"react-bootstrap/Card\";import Pagination from\"react-bootstrap/Pagination\";import{useLocation}from\"react-router-dom\";var data=require(\"../data/cardioListData.json\");var CardioResults=function CardioResults(){var location=useLocation();var pages=[];var _useState=useState(0),_useState2=_slicedToArray(_useState,2),isOpen=_useState2[0],setOpen=_useState2[1];var processedData=data.map(function(el,index){return/*#__PURE__*/React.createElement(Card,{key:el.Exercise,onClick:function onClick(){setOpen(index);},\"aria-controls\":\"collapse-text\",\"aria-expanded\":isOpen,style:{background:\"#24154a\",backgroundSize:\"cover\"}},/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Title,null,el.Exercise)));});var pageCount=processedData.length/10;var _useState3=useState(1),_useState4=_slicedToArray(_useState3,2),isCurrPage=_useState4[0],SetCurrPage=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),isPrevPage=_useState6[0],SetPrevPages=_useState6[1];var _useState7=useState(2),_useState8=_slicedToArray(_useState7,2),isNextPage=_useState8[0],SetNextPages=_useState8[1];var _useState9=useState([1,10]),_useState10=_slicedToArray(_useState9,2),isPageRange=_useState10[0],SetPageRange=_useState10[1];var _useState11=useState(processedData.slice(0,10)),_useState12=_slicedToArray(_useState11,2),isDisplayData=_useState12[0],SetDisplayData=_useState12[1];useEffect(function(){SetCurrPage(Number(location.pathname.match(/\\d+/g)));SetPrevPages(isCurrPage-1);SetNextPages(isCurrPage+1);SetDisplayData(processedData.slice(isCurrPage*10-10,isCurrPage*10));var baseNum=Math.trunc(isCurrPage/10)+1;SetPageRange([baseNum*10-9,baseNum*10]);},[isOpen,isCurrPage]);pages.push(/*#__PURE__*/React.createElement(Pagination.First,{key:\"page-1\",href:\"/exlist/cardio/1\"}));if(isPageRange[0]-1>0)pages.push(/*#__PURE__*/React.createElement(Pagination.Prev,{onClick:function onClick(){SetPageRange([isPageRange[0]-10,isPageRange[1]-10]);}}));if(isPageRange[0]>3){pages.push(/*#__PURE__*/React.createElement(Pagination.Ellipsis,null));}for(var i=isPageRange[0];i<=isPageRange[1];i++){if(i<=Math.trunc(processedData.length/10)+(processedData.length%10>=1?1:0)){pages.push(/*#__PURE__*/React.createElement(Pagination.Item,{key:i,href:\"/exlist/cardio/\".concat(i),active:i===isCurrPage},i));}}if(isPageRange[1]<Math.trunc(processedData.length/10)+(processedData.length%10>=1?1:0)){pages.push(/*#__PURE__*/React.createElement(Pagination.Ellipsis,{key:\"page-ellipsis\"}));pages.push(/*#__PURE__*/React.createElement(Pagination.Next,{onClick:function onClick(){SetPageRange([isPageRange[0]+10,isPageRange[1]+10]);}}));}pages.push(/*#__PURE__*/React.createElement(Pagination.Last,{href:\"/exlist/cardio/\".concat(Math.trunc(processedData.length/10)+(processedData.length%10>=1?1:0))}));return/*#__PURE__*/React.createElement(\"div\",{className:\"grid\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col\",id:\"ex-list-desc\"},isDisplayData),/*#__PURE__*/React.createElement(Pagination,{size:\"sm\"},pages));};export default CardioResults;","map":{"version":3,"sources":["/var/www/Exercise_Logger/client/src/components/exercise/CardioResults.js"],"names":["React","useEffect","useState","Card","Pagination","useLocation","data","require","CardioResults","location","pages","isOpen","setOpen","processedData","map","el","index","Exercise","background","backgroundSize","pageCount","length","isCurrPage","SetCurrPage","isPrevPage","SetPrevPages","isNextPage","SetNextPages","isPageRange","SetPageRange","slice","isDisplayData","SetDisplayData","Number","pathname","match","baseNum","Math","trunc","push","i"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Pagination from \"react-bootstrap/Pagination\";\nimport { useLocation } from \"react-router-dom\";\nconst data = require(\"../data/cardioListData.json\");\n\nconst CardioResults = () => {\n  const location = useLocation();\n  const pages = [];\n  const [isOpen, setOpen] = useState(0);\n\n  const processedData = data.map((el, index) => {\n    return (\n      <Card\n        key={el.Exercise}\n        onClick={() => {\n          setOpen(index);\n        }}\n        aria-controls=\"collapse-text\"\n        aria-expanded={isOpen}\n        style={{ background: `#24154a`, backgroundSize: \"cover\" }}\n      >\n        <Card.Body>\n          <Card.Title>{el.Exercise}</Card.Title>\n        </Card.Body>\n      </Card>\n    );\n  });\n  let pageCount = processedData.length / 10;\n  const [isCurrPage, SetCurrPage] = useState(1);\n  const [isPrevPage, SetPrevPages] = useState(0);\n  const [isNextPage, SetNextPages] = useState(2);\n  const [isPageRange, SetPageRange] = useState([1, 10]);\n  const [isDisplayData, SetDisplayData] = useState(processedData.slice(0, 10));\n  useEffect(() => {\n    SetCurrPage(Number(location.pathname.match(/\\d+/g)));\n    SetPrevPages(isCurrPage - 1);\n    SetNextPages(isCurrPage + 1);\n    SetDisplayData(processedData.slice(isCurrPage * 10 - 10, isCurrPage * 10));\n    let baseNum = Math.trunc(isCurrPage / 10) + 1;\n    SetPageRange([baseNum * 10 - 9, baseNum * 10]);\n  }, [isOpen, isCurrPage]);\n  pages.push(<Pagination.First key={\"page-1\"} href={\"/exlist/cardio/1\"} />);\n  if (isPageRange[0] - 1 > 0)\n    pages.push(\n      <Pagination.Prev\n        onClick={() => {\n          SetPageRange([isPageRange[0] - 10, isPageRange[1] - 10]);\n        }}\n      />\n    );\n\n  if (isPageRange[0] > 3) {\n    pages.push(<Pagination.Ellipsis />);\n  }\n  for (let i = isPageRange[0]; i <= isPageRange[1]; i++) {\n    if (\n      i <=\n      Math.trunc(processedData.length / 10) +\n        (processedData.length % 10 >= 1 ? 1 : 0)\n    ) {\n      pages.push(\n        <Pagination.Item\n          key={i}\n          href={`/exlist/cardio/${i}`}\n          active={i === isCurrPage}\n        >\n          {i}\n        </Pagination.Item>\n      );\n    }\n  }\n\n  if (\n    isPageRange[1] <\n    Math.trunc(processedData.length / 10) +\n      (processedData.length % 10 >= 1 ? 1 : 0)\n  ) {\n    pages.push(<Pagination.Ellipsis key={\"page-ellipsis\"} />);\n    pages.push(\n      <Pagination.Next\n        onClick={() => {\n          SetPageRange([isPageRange[0] + 10, isPageRange[1] + 10]);\n        }}\n      />\n    );\n  }\n  pages.push(\n    <Pagination.Last\n      href={`/exlist/cardio/${\n        Math.trunc(processedData.length / 10) +\n        (processedData.length % 10 >= 1 ? 1 : 0)\n      }`}\n    />\n  );\n\n  return (\n    <div className=\"grid\">\n      <div className=\"col\" id=\"ex-list-desc\">\n        {isDisplayData}\n      </div>\n      <Pagination size=\"sm\">{pages}</Pagination>\n    </div>\n  );\n};\nexport default CardioResults;\n"]},"metadata":{},"sourceType":"module"}