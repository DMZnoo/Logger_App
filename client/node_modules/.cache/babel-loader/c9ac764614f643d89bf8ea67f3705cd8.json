{"ast":null,"code":"import _slicedToArray from\"/var/www/Exercise_Logger/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import SubmitUpdate from\"../../../partials/SubmitUpdate\";import CustomTable from\"../../../partials/CustomTable\";import EditWorkout from\"../../exercises/actions/edit/EditWorkout\";var EditLogList=function EditLogList(_ref){var el=_ref.el,index=_ref.index,isEdit=_ref.isEdit,isCurrID=_ref.isCurrID,updateData=_ref.updateData,SetEdit=_ref.SetEdit;var _useState=useState(el),_useState2=_slicedToArray(_useState,2),isEditList=_useState2[0],SetEditList=_useState2[1];return Object.entries(el).map(function(log){if(log[1].key===\"exercises\"){return/*#__PURE__*/React.createElement(React.Fragment,null,log[1].val.map(function(ex,li){return/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(EditWorkout,{isEditList:isEditList,SetEditList:SetEditList,ex:ex,li:li}),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(CustomTable,{index:li,thead:[\"Set\",\"Reps\",\"Weight\"],data:[ex.set,ex.reps,ex.weight],SetNewList:SetEditList,isNewList:isEditList,editable:true,style:{fontSize:\"1.5vh\"}}),/*#__PURE__*/React.createElement(\"hr\",null));}),/*#__PURE__*/React.createElement(\"hr\",null),isEdit[index]&&/*#__PURE__*/React.createElement(SubmitUpdate,{index:index,isCurrID:isCurrID,isEdit:isEdit,SetEdit:SetEdit,isEditList:isEditList,updateData:updateData,target:\"Log\"}));}});};export default EditLogList;","map":{"version":3,"sources":["/var/www/Exercise_Logger/client/src/components/log/actions/edit/EditLogList.js"],"names":["React","useState","SubmitUpdate","CustomTable","EditWorkout","EditLogList","el","index","isEdit","isCurrID","updateData","SetEdit","isEditList","SetEditList","Object","entries","map","log","key","val","ex","li","set","reps","weight","fontSize"],"mappings":"sJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,YAAP,KAAyB,gCAAzB,CACA,MAAOC,CAAAA,WAAP,KAAwB,+BAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,0CAAxB,CACA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAA0D,IAAvDC,CAAAA,EAAuD,MAAvDA,EAAuD,CAAnDC,KAAmD,MAAnDA,KAAmD,CAA5CC,MAA4C,MAA5CA,MAA4C,CAApCC,QAAoC,MAApCA,QAAoC,CAA1BC,UAA0B,MAA1BA,UAA0B,CAAdC,OAAc,MAAdA,OAAc,eAC1CV,QAAQ,CAACK,EAAD,CADkC,wCACrEM,UADqE,eACzDC,WADyD,eAE5E,MAAOC,CAAAA,MAAM,CAACC,OAAP,CAAeT,EAAf,EAAmBU,GAAnB,CAAuB,SAACC,GAAD,CAAS,CACrC,GAAIA,GAAG,CAAC,CAAD,CAAH,CAAOC,GAAP,GAAe,WAAnB,CAAgC,CAC9B,mBACE,wCACGD,GAAG,CAAC,CAAD,CAAH,CAAOE,GAAP,CAAWH,GAAX,CAAe,SAACI,EAAD,CAAKC,EAAL,CAAY,CAC1B,mBACE,2BAAK,SAAS,CAAE,WAAhB,eACE,oBAAC,WAAD,EACE,UAAU,CAAET,UADd,CAEE,WAAW,CAAEC,WAFf,CAGE,EAAE,CAAEO,EAHN,CAIE,EAAE,CAAEC,EAJN,EADF,cAOE,8BAPF,cAQE,oBAAC,WAAD,EACE,KAAK,CAAEA,EADT,CAEE,KAAK,CAAE,CAAC,KAAD,CAAQ,MAAR,CAAgB,QAAhB,CAFT,CAGE,IAAI,CAAE,CAACD,EAAE,CAACE,GAAJ,CAASF,EAAE,CAACG,IAAZ,CAAkBH,EAAE,CAACI,MAArB,CAHR,CAIE,UAAU,CAAEX,WAJd,CAKE,SAAS,CAAED,UALb,CAME,QAAQ,CAAE,IANZ,CAOE,KAAK,CAAE,CAAEa,QAAQ,CAAE,OAAZ,CAPT,EARF,cAiBE,8BAjBF,CADF,CAqBD,CAtBA,CADH,cAwBE,8BAxBF,CAyBGjB,MAAM,CAACD,KAAD,CAAN,eACC,oBAAC,YAAD,EACE,KAAK,CAAEA,KADT,CAEE,QAAQ,CAAEE,QAFZ,CAGE,MAAM,CAAED,MAHV,CAIE,OAAO,CAAEG,OAJX,CAKE,UAAU,CAAEC,UALd,CAME,UAAU,CAAEF,UANd,CAOE,MAAM,CAAE,KAPV,EA1BJ,CADF,CAuCD,CACF,CA1CM,CAAP,CA2CD,CA7CD,CA8CA,cAAeL,CAAAA,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport SubmitUpdate from \"../../../partials/SubmitUpdate\";\nimport CustomTable from \"../../../partials/CustomTable\";\nimport EditWorkout from \"../../exercises/actions/edit/EditWorkout\";\nconst EditLogList = ({ el, index, isEdit, isCurrID, updateData, SetEdit }) => {\n  const [isEditList, SetEditList] = useState(el);\n  return Object.entries(el).map((log) => {\n    if (log[1].key === \"exercises\") {\n      return (\n        <>\n          {log[1].val.map((ex, li) => {\n            return (\n              <div className={\"container\"}>\n                <EditWorkout\n                  isEditList={isEditList}\n                  SetEditList={SetEditList}\n                  ex={ex}\n                  li={li}\n                />\n                <hr />\n                <CustomTable\n                  index={li}\n                  thead={[\"Set\", \"Reps\", \"Weight\"]}\n                  data={[ex.set, ex.reps, ex.weight]}\n                  SetNewList={SetEditList}\n                  isNewList={isEditList}\n                  editable={true}\n                  style={{ fontSize: \"1.5vh\" }}\n                />\n                <hr />\n              </div>\n            );\n          })}\n          <hr />\n          {isEdit[index] && (\n            <SubmitUpdate\n              index={index}\n              isCurrID={isCurrID}\n              isEdit={isEdit}\n              SetEdit={SetEdit}\n              isEditList={isEditList}\n              updateData={updateData}\n              target={\"Log\"}\n            />\n          )}\n        </>\n      );\n    }\n  });\n};\nexport default EditLogList;\n"]},"metadata":{},"sourceType":"module"}