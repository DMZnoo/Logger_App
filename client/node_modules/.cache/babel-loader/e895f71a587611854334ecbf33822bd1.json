{"ast":null,"code":"import _toConsumableArray from\"/var/www/Exercise_Logger/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/var/www/Exercise_Logger/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import axios from\"axios\";import{Accordion,Card}from\"react-bootstrap\";import{useAuth0}from\"@auth0/auth0-react\";import SetNewWorkout from\"./SetNewWorkout\";import ViewWorkoutList from\"./ViewWorkoutList\";import SetNewLog from\"./SetNewLog\";var ViewLogList=function ViewLogList(){var _useAuth=useAuth0(),user=_useAuth.user,isAuthenticated=_useAuth.isAuthenticated;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),isShown=_useState2[0],SetShown=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),isDisplayList=_useState4[0],SetDisplayList=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),isCurrID=_useState6[0],SetCurrID=_useState6[1];useEffect(function(){if(isAuthenticated){fetchData();}},[]);var fetchData=function fetchData(){axios.get(\"api/logs\").then(function(res){res.data.forEach(function(el,idx){if(el.username===user.email){var currList=[];var _loop=function _loop(attr){if(el.hasOwnProperty(attr)){if(attr===\"_id\")SetCurrID(function(isCurrID){return[].concat(_toConsumableArray(isCurrID),[el[attr]]);});currList.push({key:attr,val:el[attr]});}};for(var attr in el){_loop(attr);}SetShown(function(isShown){return[].concat(_toConsumableArray(isShown),[false]);});SetDisplayList(function(isDisplayList){return[].concat(_toConsumableArray(isDisplayList),[currList]);});}});});};// const handleDelete = (e, idx) => {\n//   e.preventDefault();\n//   if (isWorkoutDesc.set.length > 1) {\n//     let newIndexArr = [];\n//     isWorkoutDesc.set.forEach((el, index) => {\n//       if (index > idx) {\n//         newIndexArr.push(el - 1);\n//       }\n//     });\n//     SetWorkoutDesc({\n//       set: [...isWorkoutDesc.set.slice(0, idx), ...newIndexArr],\n//       reps: [\n//         ...isWorkoutDesc.reps.slice(0, idx),\n//         ...isWorkoutDesc.reps.slice(idx + 1),\n//       ],\n//       weight: [\n//         ...isWorkoutDesc.weight.slice(0, idx),\n//         ...isWorkoutDesc.weight.slice(idx + 1),\n//       ],\n//     });\n//   } else {\n//     SetWorkoutDesc({\n//       set: [\n//         ...isWorkoutDesc.set.slice(0, idx),\n//         ...isWorkoutDesc.set.slice(idx + 1),\n//       ],\n//       reps: [\n//         ...isWorkoutDesc.reps.slice(0, idx),\n//         ...isWorkoutDesc.reps.slice(idx + 1),\n//       ],\n//       weight: [\n//         ...isWorkoutDesc.weight.slice(0, idx),\n//         ...isWorkoutDesc.weight.slice(idx + 1),\n//       ],\n//     });\n//   }\n// };\nreturn/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",null,isDisplayList.map(function(el,index){return/*#__PURE__*/React.createElement(Accordion,{key:\"log-disp\"+index,className:\"p-2\",defaultActiveKey:\"0\"},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(React.Fragment,null,Object.entries(el).map(function(log){if(log[1].key===\"title\"){return/*#__PURE__*/React.createElement(Accordion.Toggle,{as:Card.Header,eventKey:\"0\",id:\"log-title-\"+\"\".concat(index)},log[1].val);}else if(log[1].key===\"description\"){return/*#__PURE__*/React.createElement(Accordion.Collapse,{eventKey:\"0\"},/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(\"div\",{className:\"p-2\"},/*#__PURE__*/React.createElement(\"p\",{id:\"log-desc-\"+\"\".concat(index)},log[1].key===\"description\"&&log[1].val)),/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ViewWorkoutList,{el:el})),/*#__PURE__*/React.createElement(SetNewWorkout,{index:index,isShown:isShown,SetShown:SetShown,isCurrID:isCurrID})));}}))),/*#__PURE__*/React.createElement(Card,null,Object.entries(el).map(function(log){if(log[1].key===\"date\"){return log[1].val;}})));})),/*#__PURE__*/React.createElement(SetNewLog,null));};export default ViewLogList;","map":{"version":3,"sources":["/var/www/Exercise_Logger/client/src/components/log/ViewLogList.js"],"names":["React","useState","useEffect","axios","Accordion","Card","useAuth0","SetNewWorkout","ViewWorkoutList","SetNewLog","ViewLogList","user","isAuthenticated","isShown","SetShown","isDisplayList","SetDisplayList","isCurrID","SetCurrID","fetchData","get","then","res","data","forEach","el","idx","username","email","currList","attr","hasOwnProperty","push","key","val","map","index","Object","entries","log","Header"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Accordion, Card } from \"react-bootstrap\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport SetNewWorkout from \"./SetNewWorkout\";\nimport ViewWorkoutList from \"./ViewWorkoutList\";\nimport SetNewLog from \"./SetNewLog\";\nconst ViewLogList = () => {\n  const { user, isAuthenticated } = useAuth0();\n  const [isShown, SetShown] = useState([]);\n  const [isDisplayList, SetDisplayList] = useState([]);\n  const [isCurrID, SetCurrID] = useState([]);\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      fetchData();\n    }\n  }, []);\n\n  const fetchData = () => {\n    axios.get(`api/logs`).then((res) => {\n      res.data.forEach((el, idx) => {\n        if (el.username === user.email) {\n          let currList = [];\n          for (let attr in el) {\n            if (el.hasOwnProperty(attr)) {\n              if (attr === \"_id\")\n                SetCurrID((isCurrID) => [...isCurrID, el[attr]]);\n              currList.push({ key: attr, val: el[attr] });\n            }\n          }\n          SetShown((isShown) => [...isShown, false]);\n          SetDisplayList((isDisplayList) => [...isDisplayList, currList]);\n        }\n      });\n    });\n  };\n\n  // const handleDelete = (e, idx) => {\n  //   e.preventDefault();\n  //   if (isWorkoutDesc.set.length > 1) {\n  //     let newIndexArr = [];\n  //     isWorkoutDesc.set.forEach((el, index) => {\n  //       if (index > idx) {\n  //         newIndexArr.push(el - 1);\n  //       }\n  //     });\n  //     SetWorkoutDesc({\n  //       set: [...isWorkoutDesc.set.slice(0, idx), ...newIndexArr],\n  //       reps: [\n  //         ...isWorkoutDesc.reps.slice(0, idx),\n  //         ...isWorkoutDesc.reps.slice(idx + 1),\n  //       ],\n  //       weight: [\n  //         ...isWorkoutDesc.weight.slice(0, idx),\n  //         ...isWorkoutDesc.weight.slice(idx + 1),\n  //       ],\n  //     });\n  //   } else {\n  //     SetWorkoutDesc({\n  //       set: [\n  //         ...isWorkoutDesc.set.slice(0, idx),\n  //         ...isWorkoutDesc.set.slice(idx + 1),\n  //       ],\n  //       reps: [\n  //         ...isWorkoutDesc.reps.slice(0, idx),\n  //         ...isWorkoutDesc.reps.slice(idx + 1),\n  //       ],\n  //       weight: [\n  //         ...isWorkoutDesc.weight.slice(0, idx),\n  //         ...isWorkoutDesc.weight.slice(idx + 1),\n  //       ],\n  //     });\n  //   }\n  // };\n\n  return (\n    <>\n      <div>\n        {isDisplayList.map((el, index) => {\n          return (\n            <Accordion\n              key={\"log-disp\" + index}\n              className={\"p-2\"}\n              defaultActiveKey=\"0\"\n            >\n              <Card>\n                {\n                  <>\n                    {Object.entries(el).map((log) => {\n                      if (log[1].key === \"title\") {\n                        return (\n                          <Accordion.Toggle\n                            as={Card.Header}\n                            eventKey=\"0\"\n                            id={\"log-title-\" + `${index}`}\n                          >\n                            {log[1].val}\n                          </Accordion.Toggle>\n                        );\n                      } else if (log[1].key === \"description\") {\n                        return (\n                          <Accordion.Collapse eventKey=\"0\">\n                            <Card.Body>\n                              <div className={\"p-2\"}>\n                                <p id={\"log-desc-\" + `${index}`}>\n                                  {log[1].key === \"description\" && log[1].val}\n                                </p>\n                              </div>\n                              <>\n                                <ViewWorkoutList el={el} />\n                              </>\n                              <SetNewWorkout\n                                index={index}\n                                isShown={isShown}\n                                SetShown={SetShown}\n                                isCurrID={isCurrID}\n                              />\n                            </Card.Body>\n                          </Accordion.Collapse>\n                        );\n                      }\n                    })}\n                  </>\n                }\n              </Card>\n\n              <Card>\n                {Object.entries(el).map((log) => {\n                  if (log[1].key === \"date\") {\n                    return log[1].val;\n                  }\n                })}\n              </Card>\n            </Accordion>\n          );\n        })}\n      </div>\n      <SetNewLog />\n    </>\n  );\n};\nexport default ViewLogList;\n"]},"metadata":{},"sourceType":"module"}