{"ast":null,"code":"import _objectWithoutProperties from\"/var/www/Exercise_Logger/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _slicedToArray from\"/var/www/Exercise_Logger/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{OverlayTrigger,Tooltip,Collapse,Pagination,Card}from\"react-bootstrap\";import{Link,useLocation}from\"react-router-dom\";import PaginateResult from\"./PaginateResult\";var data=require(\"../data/exerciseListData.json\");var ExerciseResults=function ExerciseResults(){var location=useLocation();var pages=[];var _useState=useState(0),_useState2=_slicedToArray(_useState,2),isOpen=_useState2[0],setOpen=_useState2[1];var processedData=data.map(function(el,index){return/*#__PURE__*/React.createElement(Card,{key:el.Exercise,onClick:function onClick(){setOpen(index);},\"aria-controls\":\"collapse-text\",\"aria-expanded\":isOpen,style:{background:\"#24154a\",backgroundSize:\"cover\"}},/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Title,null,el.Exercise),/*#__PURE__*/React.createElement(Collapse,{key:index,in:isOpen===index},/*#__PURE__*/React.createElement(\"div\",{id:\"collapse-text\"},/*#__PURE__*/React.createElement(\"ul\",{style:{listStyleType:\"none\"}},/*#__PURE__*/React.createElement(\"li\",null,\"Muscle Group: \",el[\"Muscle Group\"]),/*#__PURE__*/React.createElement(\"li\",null,\"Level: \",el.Level),/*#__PURE__*/React.createElement(OverlayTrigger,{placement:\"right\",delay:{show:250,hide:400},overlay:/*#__PURE__*/React.createElement(Tooltip,{id:\"button-tooltip\"},/*#__PURE__*/React.createElement(\"ul\",{style:{fontSize:\"0.8em\",paddingLeft:0}},/*#__PURE__*/React.createElement(\"li\",null,\"U\\u2013Upper Body\"),/*#__PURE__*/React.createElement(\"li\",null,\"L\\u2013Lower Body\"),/*#__PURE__*/React.createElement(\"li\",null,\"C\\u2013Core\")))},function(_ref){var ref=_ref.ref,triggerHandler=_objectWithoutProperties(_ref,[\"ref\"]);return/*#__PURE__*/React.createElement(\"li\",triggerHandler,/*#__PURE__*/React.createElement(\"span\",{ref:ref,style:{paddingRight:\"2rem\"}},\"U/L/C: \",el[\"U/L/C\"]));}),/*#__PURE__*/React.createElement(\"li\",null,\"Push/Pull: \",el[\"P / P\"]),/*#__PURE__*/React.createElement(OverlayTrigger,{placement:\"right\",delay:{show:250,hide:400},overlay:/*#__PURE__*/React.createElement(Tooltip,{id:\"button-tooltip\"},/*#__PURE__*/React.createElement(\"ul\",{style:{fontSize:\"0.8em\",paddingLeft:0}},/*#__PURE__*/React.createElement(\"li\",null,\"FW\\u2013Free Weights\"),/*#__PURE__*/React.createElement(\"li\",null,\"C\\u2013Cables\"),/*#__PURE__*/React.createElement(\"li\",null,\"M\\u2013Machine\")))},function(_ref2){var ref=_ref2.ref,triggerHandler=_objectWithoutProperties(_ref2,[\"ref\"]);return/*#__PURE__*/React.createElement(\"li\",triggerHandler,/*#__PURE__*/React.createElement(\"span\",{ref:ref,style:{paddingRight:\"2rem\"}},\"Modality: \",el.Modality));}),/*#__PURE__*/React.createElement(OverlayTrigger,{placement:\"right\",delay:{show:250,hide:400},overlay:/*#__PURE__*/React.createElement(Tooltip,{id:\"button-tooltip\"},/*#__PURE__*/React.createElement(\"ul\",{style:{fontSize:\"0.8em\",paddingLeft:0}},/*#__PURE__*/React.createElement(\"li\",null,\"M\\u2013Multi-Joint Exercise\"),/*#__PURE__*/React.createElement(\"li\",null,\"S\\u2013Single-Joint Exercise\")))},function(_ref3){var ref=_ref3.ref,triggerHandler=_objectWithoutProperties(_ref3,[\"ref\"]);return/*#__PURE__*/React.createElement(\"li\",triggerHandler,/*#__PURE__*/React.createElement(\"span\",{ref:ref,style:{paddingRight:\"2rem\"}},\"Joint: \",el.Joint));}))))));});var _useState3=useState(processedData.slice(0,10)),_useState4=_slicedToArray(_useState3,2),isDisplayData=_useState4[0],SetDisplayData=_useState4[1];return/*#__PURE__*/React.createElement(\"div\",{className:\"grid\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col\",id:\"ex-list-desc\"},isDisplayData),/*#__PURE__*/React.createElement(Pagination,{size:\"sm\"},/*#__PURE__*/React.createElement(PaginateResult,{href:\"/exlist/weight_lifting\",isOpen:isOpen,processedData:processedData,SetDisplayData:SetDisplayData})));};export default ExerciseResults;","map":{"version":3,"sources":["/var/www/Exercise_Logger/client/src/components/exercise/ExerciseResults.js"],"names":["React","useEffect","useState","OverlayTrigger","Tooltip","Collapse","Pagination","Card","Link","useLocation","PaginateResult","data","require","ExerciseResults","location","pages","isOpen","setOpen","processedData","map","el","index","Exercise","background","backgroundSize","listStyleType","Level","show","hide","fontSize","paddingLeft","ref","triggerHandler","paddingRight","Modality","Joint","slice","isDisplayData","SetDisplayData"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  OverlayTrigger,\n  Tooltip,\n  Collapse,\n  Pagination,\n  Card,\n} from \"react-bootstrap\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport PaginateResult from \"./PaginateResult\";\nconst data = require(\"../data/exerciseListData.json\");\n\nconst ExerciseResults = () => {\n  const location = useLocation();\n  const pages = [];\n  const [isOpen, setOpen] = useState(0);\n\n  const processedData = data.map((el, index) => {\n    return (\n      <Card\n        key={el.Exercise}\n        onClick={() => {\n          setOpen(index);\n        }}\n        aria-controls=\"collapse-text\"\n        aria-expanded={isOpen}\n        style={{ background: `#24154a`, backgroundSize: \"cover\" }}\n      >\n        <Card.Body>\n          <Card.Title>{el.Exercise}</Card.Title>\n          <Collapse key={index} in={isOpen === index}>\n            <div id=\"collapse-text\">\n              <ul style={{ listStyleType: \"none\" }}>\n                <li>Muscle Group: {el[\"Muscle Group\"]}</li>\n                <li>Level: {el.Level}</li>\n                <OverlayTrigger\n                  placement=\"right\"\n                  delay={{ show: 250, hide: 400 }}\n                  overlay={\n                    <Tooltip id=\"button-tooltip\">\n                      <ul style={{ fontSize: \"0.8em\", paddingLeft: 0 }}>\n                        <li>U–Upper Body</li>\n                        <li>L–Lower Body</li>\n                        <li>C–Core</li>\n                      </ul>\n                    </Tooltip>\n                  }\n                >\n                  {({ ref, ...triggerHandler }) => (\n                    <li {...triggerHandler}>\n                      <span ref={ref} style={{ paddingRight: \"2rem\" }}>\n                        U/L/C: {el[\"U/L/C\"]}\n                      </span>\n                    </li>\n                  )}\n                </OverlayTrigger>\n                <li>Push/Pull: {el[\"P / P\"]}</li>\n                <OverlayTrigger\n                  placement=\"right\"\n                  delay={{ show: 250, hide: 400 }}\n                  overlay={\n                    <Tooltip id=\"button-tooltip\">\n                      <ul style={{ fontSize: \"0.8em\", paddingLeft: 0 }}>\n                        <li>FW–Free Weights</li>\n                        <li>C–Cables</li>\n                        <li>M–Machine</li>\n                      </ul>\n                    </Tooltip>\n                  }\n                >\n                  {({ ref, ...triggerHandler }) => (\n                    <li {...triggerHandler}>\n                      <span ref={ref} style={{ paddingRight: \"2rem\" }}>\n                        Modality: {el.Modality}\n                      </span>\n                    </li>\n                  )}\n                </OverlayTrigger>\n                <OverlayTrigger\n                  placement=\"right\"\n                  delay={{ show: 250, hide: 400 }}\n                  overlay={\n                    <Tooltip id=\"button-tooltip\">\n                      <ul style={{ fontSize: \"0.8em\", paddingLeft: 0 }}>\n                        <li>M–Multi-Joint Exercise</li>\n                        <li>S–Single-Joint Exercise</li>\n                      </ul>\n                    </Tooltip>\n                  }\n                >\n                  {({ ref, ...triggerHandler }) => (\n                    <li {...triggerHandler}>\n                      <span ref={ref} style={{ paddingRight: \"2rem\" }}>\n                        Joint: {el.Joint}\n                      </span>\n                    </li>\n                  )}\n                </OverlayTrigger>\n              </ul>\n            </div>\n          </Collapse>\n        </Card.Body>\n      </Card>\n    );\n  });\n  const [isDisplayData, SetDisplayData] = useState(processedData.slice(0, 10));\n\n  return (\n    <div className=\"grid\">\n      <div className=\"col\" id=\"ex-list-desc\">\n        {isDisplayData}\n      </div>\n      <Pagination size=\"sm\">\n        <PaginateResult\n          href={\"/exlist/weight_lifting\"}\n          isOpen={isOpen}\n          processedData={processedData}\n          SetDisplayData={SetDisplayData}\n        />\n      </Pagination>\n    </div>\n  );\n};\nexport default ExerciseResults;\n"]},"metadata":{},"sourceType":"module"}