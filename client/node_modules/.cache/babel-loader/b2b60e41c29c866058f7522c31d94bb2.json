{"ast":null,"code":"import _defineProperty from\"/var/www/Exercise_Logger/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _toConsumableArray from\"/var/www/Exercise_Logger/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/var/www/Exercise_Logger/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{Table}from\"react-bootstrap\";import ToggleEdit from\"../../partials/ToggleEdit\";import SubmitUpdate from\"../../partials/SubmitUpdate\";import EditWorkout from\"./actions/edit/EditWorkout\";import RemoveWorkout from\"./actions/remove/RemoveWorkout\";import EditableTable from\"../../partials/EditableTable\";import update from\"immutability-helper\";var ViewWorkoutList=function ViewWorkoutList(_ref){var el=_ref.el,isCurrID=_ref.isCurrID,updateData=_ref.updateData,logIndex=_ref.logIndex,user=_ref.user;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),isEdit=_useState2[0],SetEdit=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),isDelete=_useState4[0],SetDelete=_useState4[1];var _useState5=useState(el),_useState6=_slicedToArray(_useState5,2),isEditList=_useState6[0],SetEditList=_useState6[1];useEffect(function(){for(var i=0;i<el[0].val.length;i++){SetEdit(function(isEdit){return[].concat(_toConsumableArray(isEdit),[false]);});SetDelete(function(isDelete){return[].concat(_toConsumableArray(isDelete),[false]);});}},[]);var SetData=function SetData(state,idx){SetEditList(function(isEditList){return update(isEditList,{0:{val:_defineProperty({},idx,{set:{$set:state.set},reps:{$set:state.reps},weight:{$set:state.weight}})}});});};return Object.entries(el).map(function(log){if(log[1].key===\"exercises\"){return/*#__PURE__*/React.createElement(React.Fragment,null,log[1].val.map(function(ex,index){return/*#__PURE__*/React.createElement(\"div\",{className:\"container\",style:{overflowX:\"auto\"}},!isEdit[index]?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h3\",null,ex.name),/*#__PURE__*/React.createElement(\"p\",null,ex.description),/*#__PURE__*/React.createElement(Table,{striped:true,borderless:true,variant:\"dark\"},/*#__PURE__*/React.createElement(\"thead\",{className:\"thead-dark\"},/*#__PURE__*/React.createElement(\"tr\",{id:\"table-thead-tr\"},/*#__PURE__*/React.createElement(\"th\",null),/*#__PURE__*/React.createElement(\"th\",null,\"Set\"),/*#__PURE__*/React.createElement(\"th\",null,\"Reps\"),/*#__PURE__*/React.createElement(\"th\",null,\"Weight\"))),/*#__PURE__*/React.createElement(\"tbody\",null,ex.set.map(function(set,idx){return/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null),/*#__PURE__*/React.createElement(\"td\",null,set),/*#__PURE__*/React.createElement(\"td\",null,ex.reps[idx]),/*#__PURE__*/React.createElement(\"td\",null,ex.weight[idx]));})))):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(EditWorkout,{SetEditList:SetEditList,isEditList:isEditList,li:index,ex:ex}),/*#__PURE__*/React.createElement(EditableTable,{index:index,thead:[\"Set\",\"Reps\",\"Weight\"],SetData:SetData,style:{color:\"black\",width:\"inherit\",fontSize:\"1.5vh\",margin:\"0\"},dataAvailable:[ex.set,ex.reps,ex.weight]}),/*#__PURE__*/React.createElement(SubmitUpdate,{index:logIndex,workoutIndex:index,isCurrID:isCurrID,isEdit:isEdit,SetEdit:SetEdit,isEditList:isEditList,updateData:updateData})),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex d-inline-flex\",style:{fontSize:\"1.5vh\"}},/*#__PURE__*/React.createElement(RemoveWorkout,{index:index,logIndex:logIndex,isCurrID:isCurrID,SetEditList:SetEditList,isEditList:isEditList,updateData:updateData,textColor:{color:\"black\"},user:user}),/*#__PURE__*/React.createElement(ToggleEdit,{isEdit:isEdit,SetEdit:SetEdit,index:index,target:\"Exercise\",multiple:true})),/*#__PURE__*/React.createElement(\"hr\",null));}));}});};export default ViewWorkoutList;","map":{"version":3,"sources":["/var/www/Exercise_Logger/client/src/components/log/exercises/ViewWorkoutList.js"],"names":["React","useEffect","useState","Table","ToggleEdit","SubmitUpdate","EditWorkout","RemoveWorkout","EditableTable","update","ViewWorkoutList","el","isCurrID","updateData","logIndex","user","isEdit","SetEdit","isDelete","SetDelete","isEditList","SetEditList","i","val","length","SetData","state","idx","set","$set","reps","weight","Object","entries","map","log","key","ex","index","overflowX","name","description","color","width","fontSize","margin"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport ToggleEdit from \"../../partials/ToggleEdit\";\nimport SubmitUpdate from \"../../partials/SubmitUpdate\";\nimport EditWorkout from \"./actions/edit/EditWorkout\";\nimport RemoveWorkout from \"./actions/remove/RemoveWorkout\";\nimport EditableTable from \"../../partials/EditableTable\";\nimport update from \"immutability-helper\";\n\nconst ViewWorkoutList = ({ el, isCurrID, updateData, logIndex, user }) => {\n  const [isEdit, SetEdit] = useState([]);\n  const [isDelete, SetDelete] = useState([]);\n  const [isEditList, SetEditList] = useState(el);\n  useEffect(() => {\n    for (let i = 0; i < el[0].val.length; i++) {\n      SetEdit((isEdit) => [...isEdit, false]);\n      SetDelete((isDelete) => [...isDelete, false]);\n    }\n  }, []);\n  const SetData = (state, idx) => {\n    SetEditList((isEditList) =>\n      update(isEditList, {\n        0: {\n          val: {\n            [idx]: {\n              set: { $set: state.set },\n              reps: { $set: state.reps },\n              weight: { $set: state.weight },\n            },\n          },\n        },\n      })\n    );\n  };\n  return Object.entries(el).map((log) => {\n    if (log[1].key === \"exercises\") {\n      return (\n        <>\n          {log[1].val.map((ex, index) => {\n            return (\n              <div className={\"container\"} style={{ overflowX: \"auto\" }}>\n                {!isEdit[index] ? (\n                  <>\n                    <h3>{ex.name}</h3>\n                    <p>{ex.description}</p>\n                    <Table striped borderless variant={\"dark\"}>\n                      <thead className=\"thead-dark\">\n                        <tr id=\"table-thead-tr\">\n                          <th />\n                          <th>Set</th>\n                          <th>Reps</th>\n                          <th>Weight</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {ex.set.map((set, idx) => {\n                          return (\n                            <tr>\n                              <td></td>\n                              <td>{set}</td>\n                              <td>{ex.reps[idx]}</td>\n                              <td>{ex.weight[idx]}</td>\n                            </tr>\n                          );\n                        })}\n                      </tbody>\n                    </Table>\n                  </>\n                ) : (\n                  <>\n                    <EditWorkout\n                      SetEditList={SetEditList}\n                      isEditList={isEditList}\n                      li={index}\n                      ex={ex}\n                    />\n                    <EditableTable\n                      index={index}\n                      thead={[\"Set\", \"Reps\", \"Weight\"]}\n                      SetData={SetData}\n                      style={{\n                        color: \"black\",\n                        width: \"inherit\",\n                        fontSize: \"1.5vh\",\n                        margin: \"0\",\n                      }}\n                      dataAvailable={[ex.set, ex.reps, ex.weight]}\n                    />\n                    <SubmitUpdate\n                      index={logIndex}\n                      workoutIndex={index}\n                      isCurrID={isCurrID}\n                      isEdit={isEdit}\n                      SetEdit={SetEdit}\n                      isEditList={isEditList}\n                      updateData={updateData}\n                    />\n                  </>\n                )}\n\n                <hr />\n                <div\n                  className={\"d-flex d-inline-flex\"}\n                  style={{ fontSize: \"1.5vh\" }}\n                >\n                  <RemoveWorkout\n                    index={index}\n                    logIndex={logIndex}\n                    isCurrID={isCurrID}\n                    SetEditList={SetEditList}\n                    isEditList={isEditList}\n                    updateData={updateData}\n                    textColor={{ color: \"black\" }}\n                    user={user}\n                  />\n                  <ToggleEdit\n                    isEdit={isEdit}\n                    SetEdit={SetEdit}\n                    index={index}\n                    target={\"Exercise\"}\n                    multiple={true}\n                  />\n                </div>\n\n                <hr />\n              </div>\n            );\n          })}\n        </>\n      );\n    }\n  });\n};\nexport default ViewWorkoutList;\n"]},"metadata":{},"sourceType":"module"}