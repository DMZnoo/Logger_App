{"ast":null,"code":"import _toConsumableArray from\"/var/www/Exercise_Logger/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React from\"react\";import{MdRemoveCircle,MdDone}from\"react-icons/md\";import{Table}from\"react-bootstrap\";var ToggleRemoval=function ToggleRemoval(_ref){var isDelete=_ref.isDelete,onDelete=_ref.onDelete,target=_ref.target,_ref$textColor=_ref.textColor,textColor=_ref$textColor===void 0?null:_ref$textColor,_ref$multiple=_ref.multiple,multiple=_ref$multiple===void 0?false:_ref$multiple,_ref$index=_ref.index,index=_ref$index===void 0?-1:_ref$index;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex d-inline-flex\"},/*#__PURE__*/React.createElement(\"button\",{style:{borderRadius:\"10vw\",background:\"none\",borderStyle:\"hidden\",borderColor:\"none\"},onClick:function onClick(e){if(!multiple)onDelete();else onDelete(function(isDelete){return[].concat(_toConsumableArray(isDelete.slice(0,index)),[!isDelete[index]],_toConsumableArray(isDelete.slice(index+1)));});}},!isDelete?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(MdRemoveCircle,{size:\"2em\",style:{color:\"red\",outline:\"none\"}}),/*#__PURE__*/React.createElement(\"span\",{className:\"p-2 font-weight-bold\",style:textColor!==null?textColor:{color:\"white\"}},\"Remove \",target)):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(MdDone,{size:\"2em\",style:{color:\"orange\",outline:\"none\"}}),/*#__PURE__*/React.createElement(\"span\",{className:\"p-2 font-weight-bold\",style:textColor!==null?textColor:{color:\"white\"}},\"Done?\"))),/*#__PURE__*/React.createElement(\"br\",null)));};export default ToggleRemoval;","map":{"version":3,"sources":["/var/www/Exercise_Logger/client/src/components/partials/ToggleRemoval.js"],"names":["React","MdRemoveCircle","MdDone","Table","ToggleRemoval","isDelete","onDelete","target","textColor","multiple","index","borderRadius","background","borderStyle","borderColor","e","slice","color","outline"],"mappings":"8JAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,cAAT,CAAyBC,MAAzB,KAAuC,gBAAvC,CACA,OAASC,KAAT,KAAsB,iBAAtB,CACA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAOhB,IANJC,CAAAA,QAMI,MANJA,QAMI,CALJC,QAKI,MALJA,QAKI,CAJJC,MAII,MAJJA,MAII,qBAHJC,SAGI,CAHJA,SAGI,yBAHQ,IAGR,mCAFJC,QAEI,CAFJA,QAEI,wBAFO,KAEP,+BADJC,KACI,CADJA,KACI,qBADI,CAAC,CACL,YACJ,mBACE,qDACE,2BAAK,SAAS,CAAE,sBAAhB,eACE,8BACE,KAAK,CAAE,CACLC,YAAY,CAAE,MADT,CAELC,UAAU,CAAE,MAFP,CAGLC,WAAW,CAAE,QAHR,CAILC,WAAW,CAAE,MAJR,CADT,CAOE,OAAO,CAAE,iBAACC,CAAD,CAAO,CACd,GAAI,CAACN,QAAL,CAAeH,QAAQ,GAAvB,IAEEA,CAAAA,QAAQ,CAAC,SAACD,QAAD,qCACJA,QAAQ,CAACW,KAAT,CAAe,CAAf,CAAkBN,KAAlB,CADI,GAEP,CAACL,QAAQ,CAACK,KAAD,CAFF,qBAGJL,QAAQ,CAACW,KAAT,CAAeN,KAAK,CAAG,CAAvB,CAHI,IAAD,CAAR,CAKH,CAfH,EAiBG,CAACL,QAAD,cACC,qDACE,oBAAC,cAAD,EACE,IAAI,CAAE,KADR,CAEE,KAAK,CAAE,CAAEY,KAAK,CAAE,KAAT,CAAgBC,OAAO,CAAE,MAAzB,CAFT,EADF,cAKE,4BACE,SAAS,CAAC,sBADZ,CAEE,KAAK,CAAEV,SAAS,GAAK,IAAd,CAAqBA,SAArB,CAAiC,CAAES,KAAK,CAAE,OAAT,CAF1C,YAIUV,MAJV,CALF,CADD,cAcC,qDACE,oBAAC,MAAD,EACE,IAAI,CAAE,KADR,CAEE,KAAK,CAAE,CAAEU,KAAK,CAAE,QAAT,CAAmBC,OAAO,CAAE,MAA5B,CAFT,EADF,cAKE,4BACE,SAAS,CAAC,sBADZ,CAEE,KAAK,CAAEV,SAAS,GAAK,IAAd,CAAqBA,SAArB,CAAiC,CAAES,KAAK,CAAE,OAAT,CAF1C,UALF,CA/BJ,CADF,cA8CE,8BA9CF,CADF,CADF,CAoDD,CA5DD,CA6DA,cAAeb,CAAAA,aAAf","sourcesContent":["import React from \"react\";\nimport { MdRemoveCircle, MdDone } from \"react-icons/md\";\nimport { Table } from \"react-bootstrap\";\nconst ToggleRemoval = ({\n  isDelete,\n  onDelete,\n  target,\n  textColor = null,\n  multiple = false,\n  index = -1,\n}) => {\n  return (\n    <>\n      <div className={\"d-flex d-inline-flex\"}>\n        <button\n          style={{\n            borderRadius: \"10vw\",\n            background: \"none\",\n            borderStyle: \"hidden\",\n            borderColor: \"none\",\n          }}\n          onClick={(e) => {\n            if (!multiple) onDelete();\n            else\n              onDelete((isDelete) => [\n                ...isDelete.slice(0, index),\n                !isDelete[index],\n                ...isDelete.slice(index + 1),\n              ]);\n          }}\n        >\n          {!isDelete ? (\n            <>\n              <MdRemoveCircle\n                size={\"2em\"}\n                style={{ color: \"red\", outline: \"none\" }}\n              />\n              <span\n                className=\"p-2 font-weight-bold\"\n                style={textColor !== null ? textColor : { color: \"white\" }}\n              >\n                Remove {target}\n              </span>\n            </>\n          ) : (\n            <>\n              <MdDone\n                size={\"2em\"}\n                style={{ color: \"orange\", outline: \"none\" }}\n              />\n              <span\n                className=\"p-2 font-weight-bold\"\n                style={textColor !== null ? textColor : { color: \"white\" }}\n              >\n                Done?\n              </span>\n            </>\n          )}\n        </button>\n        <br />\n      </div>\n    </>\n  );\n};\nexport default ToggleRemoval;\n"]},"metadata":{},"sourceType":"module"}