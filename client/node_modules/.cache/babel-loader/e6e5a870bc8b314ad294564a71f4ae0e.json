{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/WebstormProjects/Exercise_App/Exercise_Logger/client/src/components/log/actions/edit/SubmitEditLog.js\";\nimport React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { MdDone } from \"react-icons/md\";\n\nconst SubmitEditLog = ({\n  index,\n  isEditList,\n  isEdit,\n  isCurrID,\n  updateData,\n  SetEdit\n}) => {\n  const {\n    user\n  } = useAuth0();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-success\",\n    style: {\n      borderRadius: \"10vw\",\n      borderStyle: \"hidden\"\n    },\n    onClick: e => {\n      e.preventDefault();\n      let date = new Date();\n      let logTitle = document.querySelector(`#edit-log-title-${index}`);\n      let logDesc = document.querySelector(`#edit-log-desc-${index}`);\n      logTitle = logTitle.value === null || logTitle.value.length === 0 ? logTitle.getAttribute(\"placeholder\") : logTitle.value;\n      logDesc = logDesc.value === null || logDesc.value.length === 0 ? logDesc.getAttribute(\"placeholder\") : logDesc.value; //edit the log\n\n      axios.patch(`api/logs/update/${isCurrID[index]}`, {\n        username: user.email,\n        title: logTitle,\n        description: logDesc,\n        exercises: isEditList[0].val,\n        date: date\n      }).then(response => {\n        console.log(\"Log Updated\");\n        SetEdit(isEdit => [...isEdit.slice(0, index), false, ...isEdit.slice(index + 1)]);\n        updateData(true, isCurrID[index]);\n      }).catch(err => {\n        console.log(err);\n      });\n      SetEdit(isEdit => [...isEdit.slice(0, index), !isEdit[index], ...isEdit.slice(index + 1)]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MdDone, {\n    size: \"2em\",\n    style: {\n      color: \"green\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"p-2 font-weight-bold\",\n    style: {\n      color: \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"Save?\")), /*#__PURE__*/React.createElement(Button, {\n    className: \"p-2\",\n    variant: \"outline-danger\",\n    style: {\n      borderRadius: \"10vw\",\n      borderStyle: \"hidden\"\n    },\n    onClick: e => {\n      SetEdit(isEdit => [...isEdit.slice(0, index), !isEdit[index], ...isEdit.slice(index + 1)]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, \"Cancel\"));\n};\n\nexport default SubmitEditLog;","map":{"version":3,"sources":["/Users/daniel/WebstormProjects/Exercise_App/Exercise_Logger/client/src/components/log/actions/edit/SubmitEditLog.js"],"names":["React","Button","axios","useAuth0","MdDone","SubmitEditLog","index","isEditList","isEdit","isCurrID","updateData","SetEdit","user","borderRadius","borderStyle","e","preventDefault","date","Date","logTitle","document","querySelector","logDesc","value","length","getAttribute","patch","username","email","title","description","exercises","val","then","response","console","log","slice","catch","err","color"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { MdDone } from \"react-icons/md\";\nconst SubmitEditLog = ({\n  index,\n  isEditList,\n  isEdit,\n  isCurrID,\n  updateData,\n  SetEdit,\n}) => {\n  const { user } = useAuth0();\n  return (\n    <>\n      <Button\n        variant={\"outline-success\"}\n        style={{\n          borderRadius: \"10vw\",\n          borderStyle: \"hidden\",\n        }}\n        onClick={(e) => {\n          e.preventDefault();\n          let date = new Date();\n          let logTitle = document.querySelector(`#edit-log-title-${index}`);\n          let logDesc = document.querySelector(`#edit-log-desc-${index}`);\n          logTitle =\n            logTitle.value === null || logTitle.value.length === 0\n              ? logTitle.getAttribute(\"placeholder\")\n              : logTitle.value;\n          logDesc =\n            logDesc.value === null || logDesc.value.length === 0\n              ? logDesc.getAttribute(\"placeholder\")\n              : logDesc.value;\n          //edit the log\n          axios\n            .patch(`api/logs/update/${isCurrID[index]}`, {\n              username: user.email,\n              title: logTitle,\n              description: logDesc,\n              exercises: isEditList[0].val,\n              date: date,\n            })\n            .then((response) => {\n              console.log(\"Log Updated\");\n              SetEdit((isEdit) => [\n                ...isEdit.slice(0, index),\n                false,\n                ...isEdit.slice(index + 1),\n              ]);\n              updateData(true, isCurrID[index]);\n            })\n            .catch((err) => {\n              console.log(err);\n            });\n          SetEdit((isEdit) => [\n            ...isEdit.slice(0, index),\n            !isEdit[index],\n            ...isEdit.slice(index + 1),\n          ]);\n        }}\n      >\n        <MdDone size={\"2em\"} style={{ color: \"green\" }} />\n        <span className=\"p-2 font-weight-bold\" style={{ color: \"black\" }}>\n          Save?\n        </span>\n      </Button>\n      <Button\n        className={\"p-2\"}\n        variant={\"outline-danger\"}\n        style={{\n          borderRadius: \"10vw\",\n          borderStyle: \"hidden\",\n        }}\n        onClick={(e) => {\n          SetEdit((isEdit) => [\n            ...isEdit.slice(0, index),\n            !isEdit[index],\n            ...isEdit.slice(index + 1),\n          ]);\n        }}\n      >\n        Cancel\n      </Button>\n    </>\n  );\n};\nexport default SubmitEditLog;\n"]},"metadata":{},"sourceType":"module"}