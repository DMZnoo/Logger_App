{"ast":null,"code":"import _defineProperty from\"/var/www/Exercise_Logger/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _toConsumableArray from\"/var/www/Exercise_Logger/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/var/www/Exercise_Logger/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{Table}from\"react-bootstrap\";import ToggleEdit from\"../../partials/ToggleEdit\";import SubmitUpdate from\"../../partials/SubmitUpdate\";import EditWorkout from\"./actions/edit/EditWorkout\";import RemoveWorkout from\"./actions/remove/RemoveWorkout\";import EditableTable from\"../../partials/EditableTable\";import update from\"immutability-helper\";import axios from\"axios\";import SetNewWorkout from\"./actions/create/SetNewWorkout\";var ViewWorkoutList=function ViewWorkoutList(_ref){var isShown=_ref.isShown,SetShown=_ref.SetShown,isWorkoutList=_ref.isWorkoutList,SetWorkoutList=_ref.SetWorkoutList,isCurrID=_ref.isCurrID,user=_ref.user,index=_ref.index,onLogEdit=_ref.onLogEdit,updateData=_ref.updateData;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),isEdit=_useState2[0],SetEdit=_useState2[1];var _useState3=useState(Boolean(onLogEdit[index])),_useState4=_slicedToArray(_useState3,2),isLogEdit=_useState4[0],SetLogEdit=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),isDelete=_useState6[0],SetDelete=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),isValues=_useState8[0],SetValues=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),isKeys=_useState10[0],SetKeys=_useState10[1];useEffect(function(){var promises=[];if(isWorkoutList[index].length>0){isWorkoutList[index].forEach(function(call){promises.push(axios.get(\"/api/exercises/log/\".concat(call)));});Promise.all(promises).then(function(res){Object.entries(res).forEach(function(log,idx){if(log[1].data.length>0){SetWorkoutList(function(isWorkoutList){return[].concat(_toConsumableArray(isWorkoutList.slice(0,index)),[[]],_toConsumableArray(isWorkoutList.slice(index+1)));});Object.values(log[1].data).forEach(function(data){console.log(\"Data\",data);SetKeys(function(isKeys){return[].concat(_toConsumableArray(isKeys),[Object.keys(data)]);});SetValues(function(isValues){return[].concat(_toConsumableArray(isValues),[Object.values(data)]);});SetWorkoutList(function(isWorkoutList){return[].concat(_toConsumableArray(isWorkoutList.slice(0,index)),[update(isWorkoutList[index],{$push:[data]})],_toConsumableArray(isWorkoutList.slice(index+1)));});SetEdit(function(isEdit){return[].concat(_toConsumableArray(isEdit),[false]);});SetDelete(function(isDelete){return[].concat(_toConsumableArray(isDelete),[false]);});});}});});}},[]);var SetRoutine=function SetRoutine(state,idx){SetValues(function(isValues){return update(isValues,_defineProperty({},idx,{1:{$set:state.set},2:{$set:state.reps},3:{$set:state.weight}}));});SetWorkoutList(function(isWorkoutList){return[].concat(_toConsumableArray(isWorkoutList.slice(0,index)),[update(isWorkoutList[index],_defineProperty({},idx,{set:{$set:state.set},reps:{$set:state.reps},weight:{$set:state.weight}}))],_toConsumableArray(isWorkoutList.slice(index+1)));});};var SetNewExercise=function SetNewExercise(data,idx){console.log(\"INDEX\",idx);SetWorkoutList(function(isWorkoutList){return[].concat(_toConsumableArray(isWorkoutList.slice(0,idx)),[[]],_toConsumableArray(isWorkoutList.slice(idx+1)));});SetWorkoutList(update(isWorkoutList,_defineProperty({},idx,{$push:[data]})));SetKeys(function(isKeys){return[].concat(_toConsumableArray(isKeys),[Object.keys(data)]);});SetValues(function(isValues){return[].concat(_toConsumableArray(isValues),[Object.values(data)]);});};var removeExercise=function removeExercise(logIndex,exindex){SetWorkoutList(update(isWorkoutList,_defineProperty({},logIndex,{$splice:[[exindex,1]]})));SetValues(update(isValues,{$splice:[[exindex,1]]}));SetKeys(update(isKeys,{$splice:[[exindex,1]]}));};if(isLogEdit!==Boolean(onLogEdit[index])){var _loop=function _loop(i){SetEdit(function(isEdit){return[].concat(_toConsumableArray(isEdit.slice(0,i)),[Boolean(onLogEdit[index])],_toConsumableArray(isEdit.slice(i+1)));});};for(var i=0;i<isEdit.length;i++){_loop(i);}SetLogEdit(Boolean(onLogEdit[index]));}return/*#__PURE__*/React.createElement(React.Fragment,null,isValues.map(function(el,exerciseIndex){if(el===null){return/*#__PURE__*/React.createElement(React.Fragment,null);}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",null,!isEdit[exerciseIndex]?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h3\",null,el[isKeys[exerciseIndex].indexOf(\"name\")]),/*#__PURE__*/React.createElement(\"p\",null,el[isKeys[exerciseIndex].indexOf(\"description\")]),/*#__PURE__*/React.createElement(Table,{striped:true,borderless:true,variant:\"dark\"},/*#__PURE__*/React.createElement(\"thead\",{className:\"thead-dark\"},/*#__PURE__*/React.createElement(\"tr\",{id:\"table-thead-tr\"},/*#__PURE__*/React.createElement(\"th\",null),/*#__PURE__*/React.createElement(\"th\",null,\"Set\"),/*#__PURE__*/React.createElement(\"th\",null,\"Reps\"),/*#__PURE__*/React.createElement(\"th\",null,\"Weight\"))),/*#__PURE__*/React.createElement(\"tbody\",null,el[isKeys[exerciseIndex].indexOf(\"set\")].map(function(set,idx){return/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null),/*#__PURE__*/React.createElement(\"td\",null,set),/*#__PURE__*/React.createElement(\"td\",null,el[isKeys[exerciseIndex].indexOf(\"reps\")][idx]),/*#__PURE__*/React.createElement(\"td\",null,el[isKeys[exerciseIndex].indexOf(\"weight\")][idx]));})))):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(EditWorkout,{SetValues:SetValues,isValues:isValues,exercise:el,exerciseIndex:exerciseIndex,logIndex:index,isKeyList:isKeys}),/*#__PURE__*/React.createElement(EditableTable,{index:exerciseIndex,thead:[\"Set\",\"Reps\",\"Weight\"],SetData:SetRoutine,style:{color:\"black\",width:\"inherit\",fontSize:\"1.5vh\",margin:\"0\"},dataAvailable:[el[isKeys[exerciseIndex].indexOf(\"set\")],el[isKeys[exerciseIndex].indexOf(\"reps\")],el[isKeys[exerciseIndex].indexOf(\"weight\")]]}),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(SubmitUpdate,{index:index,workoutIndex:exerciseIndex,isCurrID:isCurrID,isEdit:isEdit,SetEdit:SetEdit,isValues:el,isKeys:isKeys[exerciseIndex]})),/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex d-inline-flex\",style:{fontSize:\"1.5vh\"}},/*#__PURE__*/React.createElement(RemoveWorkout,{exercise:el[isKeys[exerciseIndex].indexOf(\"_id\")],logIndex:index,exerciseIndex:exerciseIndex,isCurrID:isCurrID,SetEditList:SetValues,isEditList:isValues,updateData:removeExercise,textColor:{color:\"black\"},user:user}),/*#__PURE__*/React.createElement(ToggleEdit,{isEdit:isEdit,SetEdit:SetEdit,index:exerciseIndex,target:\"Exercise\",multiple:true})),/*#__PURE__*/React.createElement(\"hr\",null)));}),/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(SetNewWorkout,{logIndex:index,isShown:isShown,SetShown:SetShown,isCurrID:isCurrID,SetNewExercise:SetNewExercise,user:user})));};export default ViewWorkoutList;","map":{"version":3,"sources":["/var/www/Exercise_Logger/client/src/components/log/exercises/ViewWorkoutList.js"],"names":["React","useEffect","useState","Table","ToggleEdit","SubmitUpdate","EditWorkout","RemoveWorkout","EditableTable","update","axios","SetNewWorkout","ViewWorkoutList","isShown","SetShown","isWorkoutList","SetWorkoutList","isCurrID","user","index","onLogEdit","updateData","isEdit","SetEdit","Boolean","isLogEdit","SetLogEdit","isDelete","SetDelete","isValues","SetValues","isKeys","SetKeys","promises","length","forEach","call","push","get","Promise","all","then","res","Object","entries","log","idx","data","slice","values","console","keys","$push","SetRoutine","state","$set","set","reps","weight","SetNewExercise","removeExercise","logIndex","exindex","$splice","i","map","el","exerciseIndex","indexOf","color","width","fontSize","margin"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport ToggleEdit from \"../../partials/ToggleEdit\";\nimport SubmitUpdate from \"../../partials/SubmitUpdate\";\nimport EditWorkout from \"./actions/edit/EditWorkout\";\nimport RemoveWorkout from \"./actions/remove/RemoveWorkout\";\nimport EditableTable from \"../../partials/EditableTable\";\nimport update from \"immutability-helper\";\nimport axios from \"axios\";\nimport SetNewWorkout from \"./actions/create/SetNewWorkout\";\n\nconst ViewWorkoutList = ({\n  isShown,\n  SetShown,\n  isWorkoutList,\n  SetWorkoutList,\n  isCurrID,\n  user,\n  index,\n  onLogEdit,\n  updateData,\n}) => {\n  const [isEdit, SetEdit] = useState([]);\n  const [isLogEdit, SetLogEdit] = useState(Boolean(onLogEdit[index]));\n  const [isDelete, SetDelete] = useState([]);\n  const [isValues, SetValues] = useState([]);\n  const [isKeys, SetKeys] = useState([]);\n  useEffect(() => {\n    let promises = [];\n    if (isWorkoutList[index].length > 0) {\n      isWorkoutList[index].forEach((call) => {\n        promises.push(axios.get(`/api/exercises/log/${call}`));\n      });\n      Promise.all(promises).then((res) => {\n        Object.entries(res).forEach((log, idx) => {\n          if (log[1].data.length > 0) {\n            SetWorkoutList((isWorkoutList) => [\n              ...isWorkoutList.slice(0, index),\n              [],\n              ...isWorkoutList.slice(index + 1),\n            ]);\n            Object.values(log[1].data).forEach((data) => {\n              console.log(\"Data\", data);\n              SetKeys((isKeys) => [...isKeys, Object.keys(data)]);\n              SetValues((isValues) => [...isValues, Object.values(data)]);\n              SetWorkoutList((isWorkoutList) => [\n                ...isWorkoutList.slice(0, index),\n                update(isWorkoutList[index], { $push: [data] }),\n                ...isWorkoutList.slice(index + 1),\n              ]);\n              SetEdit((isEdit) => [...isEdit, false]);\n              SetDelete((isDelete) => [...isDelete, false]);\n            });\n          }\n        });\n      });\n    }\n  }, []);\n\n  const SetRoutine = (state, idx) => {\n    SetValues((isValues) =>\n      update(isValues, {\n        [idx]: {\n          1: { $set: state.set },\n          2: { $set: state.reps },\n          3: { $set: state.weight },\n        },\n      })\n    );\n    SetWorkoutList((isWorkoutList) => [\n      ...isWorkoutList.slice(0, index),\n      update(isWorkoutList[index], {\n        [idx]: {\n          set: { $set: state.set },\n          reps: { $set: state.reps },\n          weight: { $set: state.weight },\n        },\n      }),\n      ...isWorkoutList.slice(index + 1),\n    ]);\n  };\n\n  const SetNewExercise = (data, idx) => {\n    console.log(\"INDEX\", idx);\n    SetWorkoutList((isWorkoutList) => [\n      ...isWorkoutList.slice(0, idx),\n      [],\n      ...isWorkoutList.slice(idx + 1),\n    ]);\n    SetWorkoutList(update(isWorkoutList, { [idx]: { $push: [data] } }));\n    SetKeys((isKeys) => [...isKeys, Object.keys(data)]);\n    SetValues((isValues) => [...isValues, Object.values(data)]);\n  };\n\n  const removeExercise = (logIndex, exindex) => {\n    SetWorkoutList(\n      update(isWorkoutList, { [logIndex]: { $splice: [[exindex, 1]] } })\n    );\n    SetValues(update(isValues, { $splice: [[exindex, 1]] }));\n    SetKeys(update(isKeys, { $splice: [[exindex, 1]] }));\n  };\n\n  if (isLogEdit !== Boolean(onLogEdit[index])) {\n    for (let i = 0; i < isEdit.length; i++) {\n      SetEdit((isEdit) => [\n        ...isEdit.slice(0, i),\n        Boolean(onLogEdit[index]),\n        ...isEdit.slice(i + 1),\n      ]);\n    }\n    SetLogEdit(Boolean(onLogEdit[index]));\n  }\n\n  return (\n    <>\n      {isValues.map((el, exerciseIndex) => {\n        if (el === null) {\n          return <></>;\n        }\n        return (\n          <>\n            <div>\n              {!isEdit[exerciseIndex] ? (\n                <>\n                  <h3>{el[isKeys[exerciseIndex].indexOf(\"name\")]}</h3>\n                  <p>{el[isKeys[exerciseIndex].indexOf(\"description\")]}</p>\n                  <Table striped borderless variant={\"dark\"}>\n                    <thead className=\"thead-dark\">\n                      <tr id=\"table-thead-tr\">\n                        <th />\n                        <th>Set</th>\n                        <th>Reps</th>\n                        <th>Weight</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {el[isKeys[exerciseIndex].indexOf(\"set\")].map(\n                        (set, idx) => {\n                          return (\n                            <tr>\n                              <td></td>\n                              <td>{set}</td>\n                              <td>\n                                {el[isKeys[exerciseIndex].indexOf(\"reps\")][idx]}\n                              </td>\n                              <td>\n                                {\n                                  el[isKeys[exerciseIndex].indexOf(\"weight\")][\n                                    idx\n                                  ]\n                                }\n                              </td>\n                            </tr>\n                          );\n                        }\n                      )}\n                    </tbody>\n                  </Table>\n                </>\n              ) : (\n                <>\n                  <EditWorkout\n                    SetValues={SetValues}\n                    isValues={isValues}\n                    exercise={el}\n                    exerciseIndex={exerciseIndex}\n                    logIndex={index}\n                    isKeyList={isKeys}\n                  />\n                  <EditableTable\n                    index={exerciseIndex}\n                    thead={[\"Set\", \"Reps\", \"Weight\"]}\n                    SetData={SetRoutine}\n                    style={{\n                      color: \"black\",\n                      width: \"inherit\",\n                      fontSize: \"1.5vh\",\n                      margin: \"0\",\n                    }}\n                    dataAvailable={[\n                      el[isKeys[exerciseIndex].indexOf(\"set\")],\n                      el[isKeys[exerciseIndex].indexOf(\"reps\")],\n                      el[isKeys[exerciseIndex].indexOf(\"weight\")],\n                    ]}\n                  />\n                  <hr />\n                  <SubmitUpdate\n                    index={index}\n                    workoutIndex={exerciseIndex}\n                    isCurrID={isCurrID}\n                    isEdit={isEdit}\n                    SetEdit={SetEdit}\n                    isValues={el}\n                    isKeys={isKeys[exerciseIndex]}\n                  />\n                </>\n              )}\n\n              <div\n                className={\"d-flex d-inline-flex\"}\n                style={{ fontSize: \"1.5vh\" }}\n              >\n                <RemoveWorkout\n                  exercise={el[isKeys[exerciseIndex].indexOf(\"_id\")]}\n                  logIndex={index}\n                  exerciseIndex={exerciseIndex}\n                  isCurrID={isCurrID}\n                  SetEditList={SetValues}\n                  isEditList={isValues}\n                  updateData={removeExercise}\n                  textColor={{ color: \"black\" }}\n                  user={user}\n                />\n                <ToggleEdit\n                  isEdit={isEdit}\n                  SetEdit={SetEdit}\n                  index={exerciseIndex}\n                  target={\"Exercise\"}\n                  multiple={true}\n                />\n              </div>\n              <hr />\n            </div>\n          </>\n        );\n      })}\n      <>\n        <SetNewWorkout\n          logIndex={index}\n          isShown={isShown}\n          SetShown={SetShown}\n          isCurrID={isCurrID}\n          SetNewExercise={SetNewExercise}\n          user={user}\n        />\n      </>\n    </>\n  );\n};\nexport default ViewWorkoutList;\n"]},"metadata":{},"sourceType":"module"}