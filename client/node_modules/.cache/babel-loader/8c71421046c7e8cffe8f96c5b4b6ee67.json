{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/WebstormProjects/Exercise_App/Exercise_Logger/client/src/components/log/actions/edit/SubmitEditLog.js\";\nimport React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst SubmitEditLog = ({\n  index,\n  isEditList,\n  isEdit,\n  isCurrID,\n  updateData,\n  SetEdit\n}) => {\n  const {\n    user\n  } = useAuth0();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    className: \"p-2\",\n    variant: \"outline-primary\",\n    onClick: e => {\n      e.preventDefault();\n      let date = new Date();\n      let logTitle = document.querySelector(`#edit-log-title-${index}`);\n      let logDesc = document.querySelector(`#edit-log-desc-${index}`);\n      logTitle = logTitle.value === null || logTitle.value.length === 0 ? logTitle.getAttribute(\"placeholder\") : logTitle.value;\n      logDesc = logDesc.value === null || logDesc.value.length === 0 ? logDesc.getAttribute(\"placeholder\") : logDesc.value; //edit the log\n\n      axios.patch(`api/logs/update/${isCurrID[index]}`, {\n        username: user.email,\n        title: logTitle,\n        description: logDesc,\n        exercises: isEditList[0].val,\n        date: date\n      }).then(response => {\n        console.log(\"Log Updated\");\n        SetEdit(isEdit => [...isEdit.slice(0, index), false, ...isEdit.slice(index + 1)]);\n        updateData(true, isCurrID[index]);\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, \"Save\"));\n};\n\nexport default SubmitEditLog;","map":{"version":3,"sources":["/Users/daniel/WebstormProjects/Exercise_App/Exercise_Logger/client/src/components/log/actions/edit/SubmitEditLog.js"],"names":["React","Button","axios","useAuth0","SubmitEditLog","index","isEditList","isEdit","isCurrID","updateData","SetEdit","user","e","preventDefault","date","Date","logTitle","document","querySelector","logDesc","value","length","getAttribute","patch","username","email","title","description","exercises","val","then","response","console","log","slice","catch","err"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,oBAAzB;;AACA,MAAMC,aAAa,GAAG,CAAC;AACrBC,EAAAA,KADqB;AAErBC,EAAAA,UAFqB;AAGrBC,EAAAA,MAHqB;AAIrBC,EAAAA,QAJqB;AAKrBC,EAAAA,UALqB;AAMrBC,EAAAA;AANqB,CAAD,KAOhB;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAWR,QAAQ,EAAzB;AACA,sBACE,uDACE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAE,KADb;AAEE,IAAA,OAAO,EAAE,iBAFX;AAGE,IAAA,OAAO,EAAGS,CAAD,IAAO;AACdA,MAAAA,CAAC,CAACC,cAAF;AACA,UAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACA,UAAIC,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAwB,mBAAkBb,KAAM,EAAhD,CAAf;AACA,UAAIc,OAAO,GAAGF,QAAQ,CAACC,aAAT,CAAwB,kBAAiBb,KAAM,EAA/C,CAAd;AACAW,MAAAA,QAAQ,GACNA,QAAQ,CAACI,KAAT,KAAmB,IAAnB,IAA2BJ,QAAQ,CAACI,KAAT,CAAeC,MAAf,KAA0B,CAArD,GACIL,QAAQ,CAACM,YAAT,CAAsB,aAAtB,CADJ,GAEIN,QAAQ,CAACI,KAHf;AAIAD,MAAAA,OAAO,GACLA,OAAO,CAACC,KAAR,KAAkB,IAAlB,IAA0BD,OAAO,CAACC,KAAR,CAAcC,MAAd,KAAyB,CAAnD,GACIF,OAAO,CAACG,YAAR,CAAqB,aAArB,CADJ,GAEIH,OAAO,CAACC,KAHd,CATc,CAad;;AACAlB,MAAAA,KAAK,CACFqB,KADH,CACU,mBAAkBf,QAAQ,CAACH,KAAD,CAAQ,EAD5C,EAC+C;AAC3CmB,QAAAA,QAAQ,EAAEb,IAAI,CAACc,KAD4B;AAE3CC,QAAAA,KAAK,EAAEV,QAFoC;AAG3CW,QAAAA,WAAW,EAAER,OAH8B;AAI3CS,QAAAA,SAAS,EAAEtB,UAAU,CAAC,CAAD,CAAV,CAAcuB,GAJkB;AAK3Cf,QAAAA,IAAI,EAAEA;AALqC,OAD/C,EAQGgB,IARH,CAQSC,QAAD,IAAc;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAvB,QAAAA,OAAO,CAAEH,MAAD,IAAY,CAClB,GAAGA,MAAM,CAAC2B,KAAP,CAAa,CAAb,EAAgB7B,KAAhB,CADe,EAElB,KAFkB,EAGlB,GAAGE,MAAM,CAAC2B,KAAP,CAAa7B,KAAK,GAAG,CAArB,CAHe,CAAb,CAAP;AAKAI,QAAAA,UAAU,CAAC,IAAD,EAAOD,QAAQ,CAACH,KAAD,CAAf,CAAV;AACD,OAhBH,EAiBG8B,KAjBH,CAiBUC,GAAD,IAAS;AACdJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACD,OAnBH;AAoBD,KArCH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF;AA6CD,CAtDD;;AAuDA,eAAehC,aAAf","sourcesContent":["import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nconst SubmitEditLog = ({\n  index,\n  isEditList,\n  isEdit,\n  isCurrID,\n  updateData,\n  SetEdit,\n}) => {\n  const { user } = useAuth0();\n  return (\n    <>\n      <Button\n        className={\"p-2\"}\n        variant={\"outline-primary\"}\n        onClick={(e) => {\n          e.preventDefault();\n          let date = new Date();\n          let logTitle = document.querySelector(`#edit-log-title-${index}`);\n          let logDesc = document.querySelector(`#edit-log-desc-${index}`);\n          logTitle =\n            logTitle.value === null || logTitle.value.length === 0\n              ? logTitle.getAttribute(\"placeholder\")\n              : logTitle.value;\n          logDesc =\n            logDesc.value === null || logDesc.value.length === 0\n              ? logDesc.getAttribute(\"placeholder\")\n              : logDesc.value;\n          //edit the log\n          axios\n            .patch(`api/logs/update/${isCurrID[index]}`, {\n              username: user.email,\n              title: logTitle,\n              description: logDesc,\n              exercises: isEditList[0].val,\n              date: date,\n            })\n            .then((response) => {\n              console.log(\"Log Updated\");\n              SetEdit((isEdit) => [\n                ...isEdit.slice(0, index),\n                false,\n                ...isEdit.slice(index + 1),\n              ]);\n              updateData(true, isCurrID[index]);\n            })\n            .catch((err) => {\n              console.log(err);\n            });\n        }}\n      >\n        Save\n      </Button>\n    </>\n  );\n};\nexport default SubmitEditLog;\n"]},"metadata":{},"sourceType":"module"}